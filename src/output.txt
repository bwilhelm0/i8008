
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.25+97 (git sha1 221036c5b, x86_64-apple-darwin20.2-clang 10.0.0-4ubuntu1 -fPIC -Os)


-- Running command `read_verilog -sv i8008_core.v; synth_ice40 -json build/synthesis.json -top top' --

1. Executing Verilog-2005 frontend: i8008_core.v
Parsing SystemVerilog input from `i8008_core.v' to AST representation.
Warning: Yosys has only limited support for tri-state logic at the moment. (i8008_core.v:2278)
Generating RTLIL representation for module `\hex_to_sevenseg'.
Generating RTLIL representation for module `\debug_harness'.
Generating RTLIL representation for module `\top'.
Generating RTLIL representation for module `\i8008_core'.
Generating RTLIL representation for module `\ALU'.
Generating RTLIL representation for module `\fsm_decoder'.
Generating RTLIL representation for module `\reg_file'.
Generating RTLIL representation for module `\stack'.
Generating RTLIL representation for module `\Register'.
Generating RTLIL representation for module `\FlagRegister'.
Generating RTLIL representation for module `\Counter'.
Generating RTLIL representation for module `\Stabilizer'.
Successfully finished Verilog frontend.

2. Executing SYNTH_ICE40 pass.

2.1. Executing Verilog-2005 frontend: /Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

2.2. Executing HIERARCHY pass (managing design hierarchy).

2.2.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \i8008_core
Used module:         \fsm_decoder
Used module:         \stack
Used module:         \Counter
Used module:         \reg_file
Used module:         \ALU
Used module:             \FlagRegister
Used module:         \Register
Used module:     \hex_to_sevenseg
Used module:     \debug_harness
Parameter \WIDTH = 8
Parameter \STACK_HEIGHT = 8

2.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\i8008_core'.
Parameter \WIDTH = 8
Parameter \STACK_HEIGHT = 8
Generating RTLIL representation for module `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core'.
Parameter \WIDTH = 14
Parameter \HEIGHT = 8

2.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\stack'.
Parameter \WIDTH = 14
Parameter \HEIGHT = 8
Generating RTLIL representation for module `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack'.
Parameter \WIDTH = 3

2.2.4. Executing AST frontend in derive mode using pre-parsed AST for module `\Counter'.
Parameter \WIDTH = 3
Generating RTLIL representation for module `$paramod\Counter\WIDTH=s32'00000000000000000000000000000011'.
Parameter \WIDTH = 8
Parameter \HEIGHT = 7

2.2.5. Executing AST frontend in derive mode using pre-parsed AST for module `\reg_file'.
Parameter \WIDTH = 8
Parameter \HEIGHT = 7
Generating RTLIL representation for module `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file'.
Parameter \WIDTH = 8

2.2.6. Executing AST frontend in derive mode using pre-parsed AST for module `\Register'.
Parameter \WIDTH = 8
Generating RTLIL representation for module `$paramod\Register\WIDTH=s32'00000000000000000000000000001000'.
Parameter \WIDTH = 8
Found cached RTLIL representation for module `$paramod\Register\WIDTH=s32'00000000000000000000000000001000'.
Parameter \WIDTH = 8
Found cached RTLIL representation for module `$paramod\Register\WIDTH=s32'00000000000000000000000000001000'.
Parameter \WIDTH = 4

2.2.7. Executing AST frontend in derive mode using pre-parsed AST for module `\FlagRegister'.
Parameter \WIDTH = 4
Generating RTLIL representation for module `$paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100'.

2.2.8. Analyzing design hierarchy..
Top module:  \top
Used module:     $paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core
Used module:         \fsm_decoder
Used module:         \stack
Used module:         \Counter
Used module:         \reg_file
Used module:         \ALU
Used module:             $paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100
Used module:         \Register
Used module:     \hex_to_sevenseg
Used module:     \debug_harness
Parameter \WIDTH = 14
Parameter \HEIGHT = 8
Found cached RTLIL representation for module `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack'.
Parameter \WIDTH = 3
Found cached RTLIL representation for module `$paramod\Counter\WIDTH=s32'00000000000000000000000000000011'.
Parameter \WIDTH = 8
Parameter \HEIGHT = 7
Found cached RTLIL representation for module `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file'.
Parameter \WIDTH = 8
Found cached RTLIL representation for module `$paramod\Register\WIDTH=s32'00000000000000000000000000001000'.
Parameter \WIDTH = 8
Found cached RTLIL representation for module `$paramod\Register\WIDTH=s32'00000000000000000000000000001000'.
Parameter \WIDTH = 8
Found cached RTLIL representation for module `$paramod\Register\WIDTH=s32'00000000000000000000000000001000'.

2.2.9. Analyzing design hierarchy..
Top module:  \top
Used module:     $paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core
Used module:         \fsm_decoder
Used module:         $paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack
Used module:         $paramod\Counter\WIDTH=s32'00000000000000000000000000000011
Used module:         $paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file
Used module:         \ALU
Used module:             $paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100
Used module:         $paramod\Register\WIDTH=s32'00000000000000000000000000001000
Used module:     \hex_to_sevenseg
Used module:     \debug_harness

2.2.10. Analyzing design hierarchy..
Top module:  \top
Used module:     $paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core
Used module:         \fsm_decoder
Used module:         $paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack
Used module:         $paramod\Counter\WIDTH=s32'00000000000000000000000000000011
Used module:         $paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file
Used module:         \ALU
Used module:             $paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100
Used module:         $paramod\Register\WIDTH=s32'00000000000000000000000000001000
Used module:     \hex_to_sevenseg
Used module:     \debug_harness
Removing unused module `\Stabilizer'.
Removing unused module `\Counter'.
Removing unused module `\FlagRegister'.
Removing unused module `\Register'.
Removing unused module `\stack'.
Removing unused module `\reg_file'.
Removing unused module `\i8008_core'.
Removed 7 unused modules.

2.3. Executing PROC pass (convert processes to netlists).

2.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1414$1472 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1353$1465 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1273$1461 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1212$1454 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1138$1451 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1088$1448 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1017$1445 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:967$1442 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:803$1434 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:742$1427 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:662$1423 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:601$1416 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:527$1413 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:477$1410 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:406$1407 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:356$1404 in module SB_DFFSR.
Marked 1 switch rules as full_case in process $proc$i8008_core.v:2754$1766 in module $paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100.
Marked 1 switch rules as full_case in process $proc$i8008_core.v:2735$1765 in module $paramod\Register\WIDTH=s32'00000000000000000000000000001000.
Marked 2 switch rules as full_case in process $proc$i8008_core.v:2661$1739 in module $paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.
Marked 3 switch rules as full_case in process $proc$i8008_core.v:2777$1724 in module $paramod\Counter\WIDTH=s32'00000000000000000000000000000011.
Marked 4 switch rules as full_case in process $proc$i8008_core.v:2703$1658 in module $paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.
Marked 7 switch rules as full_case in process $proc$i8008_core.v:2043$1615 in module $paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.
Marked 3 switch rules as full_case in process $proc$i8008_core.v:2021$1612 in module $paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.
Marked 1 switch rules as full_case in process $proc$i8008_core.v:2630$1108 in module fsm_decoder.
Removed 3 dead cases from process $proc$i8008_core.v:2256$1032 in module fsm_decoder.
Marked 27 switch rules as full_case in process $proc$i8008_core.v:2256$1032 in module fsm_decoder.
Removed 1 dead cases from process $proc$i8008_core.v:2248$1028 in module fsm_decoder.
Marked 1 switch rules as full_case in process $proc$i8008_core.v:2248$1028 in module fsm_decoder.
Removed 1 dead cases from process $proc$i8008_core.v:2176$1002 in module ALU.
Marked 3 switch rules as full_case in process $proc$i8008_core.v:2176$1002 in module ALU.
Removed 1 dead cases from process $proc$i8008_core.v:0$965 in module top.
Marked 1 switch rules as full_case in process $proc$i8008_core.v:0$965 in module top.
Marked 1 switch rules as full_case in process $proc$i8008_core.v:1937$960 in module top.
Marked 1 switch rules as full_case in process $proc$i8008_core.v:0$913 in module debug_harness.
Marked 36 switch rules as full_case in process $proc$i8008_core.v:962$310 in module debug_harness.
Marked 36 switch rules as full_case in process $proc$i8008_core.v:886$92 in module debug_harness.
Marked 16 switch rules as full_case in process $proc$i8008_core.v:7$1 in module hex_to_sevenseg.
Removed a total of 6 dead cases.

2.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 14 redundant assignments.
Promoted 393 assignments to connections.

2.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1475'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1471'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1464'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1460'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1453'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1450'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1447'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1444'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1441'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1439'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1437'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1433'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1426'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1422'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1415'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1412'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1409'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1406'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1403'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1401'.
  Set init value: \Q = 1'0
Found init rule in `\debug_harness.$proc$i8008_core.v:884$957'.
  Set init value: \wbdbg.wbdbgbusmaster.o_wb_we = 1'0
Found init rule in `\debug_harness.$proc$i8008_core.v:883$956'.
  Set init value: \wbdbg.wbdbgbusmaster.o_wb_stb = 1'0
Found init rule in `\debug_harness.$proc$i8008_core.v:882$955'.
  Set init value: \wbdbg.wbdbgbusmaster.o_wb_data = 0
Found init rule in `\debug_harness.$proc$i8008_core.v:881$954'.
  Set init value: \wbdbg.wbdbgbusmaster.o_wb_cyc = 1'0
Found init rule in `\debug_harness.$proc$i8008_core.v:880$953'.
  Set init value: \wbdbg.wbdbgbusmaster.o_wb_addr = 0
Found init rule in `\debug_harness.$proc$i8008_core.v:879$952'.
  Set init value: \wbdbg.wbdbgbusmaster.o_resp_valid = 1'0
Found init rule in `\debug_harness.$proc$i8008_core.v:865$951'.
  Set init value: \wbdbg.wbdbgbusmaster.addr_inc = 1'0
Found init rule in `\debug_harness.$proc$i8008_core.v:864$950'.
  Set init value: \wbdbg.uart_tx_valid = 1'0
Found init rule in `\debug_harness.$proc$i8008_core.v:861$949'.
  Set init value: \wbdbg.uart_tx.state = 4'0000
Found init rule in `\debug_harness.$proc$i8008_core.v:851$948'.
  Set init value: \wbdbg.uart_rx.state = 4'0000
Found init rule in `\debug_harness.$proc$i8008_core.v:845$947'.
  Set init value: \wbdbg.transmit_state = 3'000
Found init rule in `\debug_harness.$proc$i8008_core.v:844$946'.
  Set init value: \wbdbg.transmit_data = 40'0000000000000000000000000000000000000000
Found init rule in `\debug_harness.$proc$i8008_core.v:842$945'.
  Set init value: \wbdbg.resp_fifo_wr_en = 1'0
Found init rule in `\debug_harness.$proc$i8008_core.v:841$944'.
  Set init value: \wbdbg.resp_fifo_wr_data = 36'000000000000000000000000000000000000
Found init rule in `\debug_harness.$proc$i8008_core.v:839$943'.
  Set init value: \wbdbg.resp_fifo_rd_en = 1'0
Found init rule in `\debug_harness.$proc$i8008_core.v:835$942'.
  Set init value: \wbdbg.resp_fifo.wr_ptr = 4'0000
Found init rule in `\debug_harness.$proc$i8008_core.v:834$941'.
  Set init value: \wbdbg.resp_fifo.rd_ptr = 4'0000
Found init rule in `\debug_harness.$proc$i8008_core.v:833$940'.
  Set init value: \wbdbg.resp_fifo.o_rd_valid = 1'0
Found init rule in `\debug_harness.$proc$i8008_core.v:829$939'.
  Set init value: \wbdbg.resp_fifo.len = 5'00000
Found init rule in `\debug_harness.$proc$i8008_core.v:822$938'.
  Set init value: \wbdbg.recieve_state = 3'000
Found init rule in `\debug_harness.$proc$i8008_core.v:821$937'.
  Set init value: \wbdbg.recieve_data = 40'0000000000000000000000000000000000000000
Found init rule in `\debug_harness.$proc$i8008_core.v:814$936'.
  Set init value: \wbdbg.interrupt_4_rising = 1'0
Found init rule in `\debug_harness.$proc$i8008_core.v:813$935'.
  Set init value: \wbdbg.interrupt_4_last = 1'0
Found init rule in `\debug_harness.$proc$i8008_core.v:812$934'.
  Set init value: \wbdbg.interrupt_3_rising = 1'0
Found init rule in `\debug_harness.$proc$i8008_core.v:811$933'.
  Set init value: \wbdbg.interrupt_3_last = 1'0
Found init rule in `\debug_harness.$proc$i8008_core.v:810$932'.
  Set init value: \wbdbg.interrupt_2_rising = 1'0
Found init rule in `\debug_harness.$proc$i8008_core.v:809$931'.
  Set init value: \wbdbg.interrupt_2_last = 1'0
Found init rule in `\debug_harness.$proc$i8008_core.v:808$930'.
  Set init value: \wbdbg.interrupt_1_rising = 1'0
Found init rule in `\debug_harness.$proc$i8008_core.v:807$929'.
  Set init value: \wbdbg.interrupt_1_last = 1'0
Found init rule in `\debug_harness.$proc$i8008_core.v:796$928'.
  Set init value: \wbdbg.drop_timer = 26'01011111010111100001000000
Found init rule in `\debug_harness.$proc$i8008_core.v:795$927'.
  Set init value: \wbdbg.cmd_valid = 1'0
Found init rule in `\debug_harness.$proc$i8008_core.v:794$926'.
  Set init value: \wbdbg.cmd_reset = 1'0
Found init rule in `\debug_harness.$proc$i8008_core.v:792$925'.
  Set init value: \wbdbg.cmd_fifo_wr_en = 1'0
Found init rule in `\debug_harness.$proc$i8008_core.v:791$924'.
  Set init value: \wbdbg.cmd_fifo_wr_data = 36'000000000000000000000000000000000000
Found init rule in `\debug_harness.$proc$i8008_core.v:789$923'.
  Set init value: \wbdbg.cmd_fifo_rd_en = 1'0
Found init rule in `\debug_harness.$proc$i8008_core.v:785$922'.
  Set init value: \wbdbg.cmd_fifo.wr_ptr = 4'0000
Found init rule in `\debug_harness.$proc$i8008_core.v:784$921'.
  Set init value: \wbdbg.cmd_fifo.rd_ptr = 4'0000
Found init rule in `\debug_harness.$proc$i8008_core.v:783$920'.
  Set init value: \wbdbg.cmd_fifo.o_rd_valid = 1'0
Found init rule in `\debug_harness.$proc$i8008_core.v:779$919'.
  Set init value: \wbdbg.cmd_fifo.len = 5'00000

2.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1414$1472'.
Found async reset \R in `\SB_DFFNER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1273$1461'.
Found async reset \S in `\SB_DFFNS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1138$1451'.
Found async reset \R in `\SB_DFFNR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1017$1445'.
Found async reset \S in `\SB_DFFES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:803$1434'.
Found async reset \R in `\SB_DFFER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:662$1423'.
Found async reset \S in `\SB_DFFS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:527$1413'.
Found async reset \R in `\SB_DFFR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:406$1407'.

2.3.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~165 debug messages>

2.3.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SB_DFFNES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1475'.
Creating decoders for process `\SB_DFFNES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1414$1472'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1471'.
Creating decoders for process `\SB_DFFNESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1353$1465'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1464'.
Creating decoders for process `\SB_DFFNER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1273$1461'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1460'.
Creating decoders for process `\SB_DFFNESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1212$1454'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1453'.
Creating decoders for process `\SB_DFFNS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1138$1451'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1450'.
Creating decoders for process `\SB_DFFNSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1088$1448'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1447'.
Creating decoders for process `\SB_DFFNR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1017$1445'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1444'.
Creating decoders for process `\SB_DFFNSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:967$1442'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1441'.
Creating decoders for process `\SB_DFFNE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:922$1440'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1439'.
Creating decoders for process `\SB_DFFN.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:882$1438'.
Creating decoders for process `\SB_DFFES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1437'.
Creating decoders for process `\SB_DFFES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:803$1434'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1433'.
Creating decoders for process `\SB_DFFESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:742$1427'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1426'.
Creating decoders for process `\SB_DFFER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:662$1423'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1422'.
Creating decoders for process `\SB_DFFESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:601$1416'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1415'.
Creating decoders for process `\SB_DFFS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:527$1413'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1412'.
Creating decoders for process `\SB_DFFSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:477$1410'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1409'.
Creating decoders for process `\SB_DFFR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:406$1407'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1406'.
Creating decoders for process `\SB_DFFSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:356$1404'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1403'.
Creating decoders for process `\SB_DFFE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:311$1402'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1401'.
Creating decoders for process `\SB_DFF.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:271$1400'.
Creating decoders for process `$paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100.$proc$i8008_core.v:2754$1766'.
     1/1: $0\Q[3:0]
Creating decoders for process `$paramod\Register\WIDTH=s32'00000000000000000000000000001000.$proc$i8008_core.v:2735$1765'.
     1/1: $0\Q[7:0]
Creating decoders for process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.v:2673$1763'.
Creating decoders for process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.v:2661$1739'.
     1/13: $2$memwr$\rf$i8008_core.v:2672$1737_EN[7:0]$1762
     2/13: $2$memwr$\rf$i8008_core.v:2672$1737_DATA[7:0]$1761
     3/13: $2$memwr$\rf$i8008_core.v:2672$1737_ADDR[2:0]$1760
     4/13: $1$memwr$\rf$i8008_core.v:2669$1736_EN[7:0]$1756
     5/13: $1$memwr$\rf$i8008_core.v:2668$1735_EN[7:0]$1755
     6/13: $1$memwr$\rf$i8008_core.v:2667$1734_EN[7:0]$1754
     7/13: $1$memwr$\rf$i8008_core.v:2666$1733_EN[7:0]$1753
     8/13: $1$memwr$\rf$i8008_core.v:2665$1732_EN[7:0]$1752
     9/13: $1$memwr$\rf$i8008_core.v:2664$1731_EN[7:0]$1751
    10/13: $1$memwr$\rf$i8008_core.v:2663$1730_EN[7:0]$1750
    11/13: $1$memwr$\rf$i8008_core.v:2672$1737_EN[7:0]$1759
    12/13: $1$memwr$\rf$i8008_core.v:2672$1737_DATA[7:0]$1758
    13/13: $1$memwr$\rf$i8008_core.v:2672$1737_ADDR[2:0]$1757
Creating decoders for process `$paramod\Counter\WIDTH=s32'00000000000000000000000000000011.$proc$i8008_core.v:2777$1724'.
     1/1: $0\Q[2:0]
Creating decoders for process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:2720$1722'.
Creating decoders for process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:2703$1658'.
     1/39: $4$memwr$\rf$i8008_core.v:2719$1656_EN[13:0]$1719
     2/39: $4$memwr$\rf$i8008_core.v:2719$1656_DATA[13:0]$1718
     3/39: $4$memwr$\rf$i8008_core.v:2719$1656_ADDR[2:0]$1717
     4/39: $4$mem2bits$\rf$i8008_core.v:2719$1655[13:0]$1716
     5/39: $3$memwr$\rf$i8008_core.v:2717$1654_EN[13:0]$1711
     6/39: $3$memwr$\rf$i8008_core.v:2717$1654_DATA[13:0]$1710
     7/39: $3$memwr$\rf$i8008_core.v:2717$1654_ADDR[2:0]$1709
     8/39: $3$memwr$\rf$i8008_core.v:2719$1656_EN[13:0]$1715
     9/39: $3$memwr$\rf$i8008_core.v:2719$1656_DATA[13:0]$1714
    10/39: $3$memwr$\rf$i8008_core.v:2719$1656_ADDR[2:0]$1713
    11/39: $3$mem2bits$\rf$i8008_core.v:2719$1655[13:0]$1712
    12/39: $2$memwr$\rf$i8008_core.v:2715$1653_EN[13:0]$1698
    13/39: $2$memwr$\rf$i8008_core.v:2715$1653_DATA[13:0]$1697
    14/39: $2$memwr$\rf$i8008_core.v:2715$1653_ADDR[2:0]$1696
    15/39: $2$memwr$\rf$i8008_core.v:2719$1656_EN[13:0]$1705
    16/39: $2$memwr$\rf$i8008_core.v:2719$1656_DATA[13:0]$1704
    17/39: $2$memwr$\rf$i8008_core.v:2719$1656_ADDR[2:0]$1703
    18/39: $2$mem2bits$\rf$i8008_core.v:2719$1655[13:0]$1702
    19/39: $2$memwr$\rf$i8008_core.v:2717$1654_EN[13:0]$1701
    20/39: $2$memwr$\rf$i8008_core.v:2717$1654_DATA[13:0]$1700
    21/39: $2$memwr$\rf$i8008_core.v:2717$1654_ADDR[2:0]$1699
    22/39: $1$memwr$\rf$i8008_core.v:2712$1652_EN[13:0]$1684
    23/39: $1$memwr$\rf$i8008_core.v:2711$1651_EN[13:0]$1683
    24/39: $1$memwr$\rf$i8008_core.v:2710$1650_EN[13:0]$1682
    25/39: $1$memwr$\rf$i8008_core.v:2709$1649_EN[13:0]$1681
    26/39: $1$memwr$\rf$i8008_core.v:2708$1648_EN[13:0]$1680
    27/39: $1$memwr$\rf$i8008_core.v:2707$1647_EN[13:0]$1679
    28/39: $1$memwr$\rf$i8008_core.v:2706$1646_EN[13:0]$1678
    29/39: $1$memwr$\rf$i8008_core.v:2705$1645_EN[13:0]$1677
    30/39: $1$memwr$\rf$i8008_core.v:2719$1656_EN[13:0]$1694
    31/39: $1$memwr$\rf$i8008_core.v:2719$1656_DATA[13:0]$1693
    32/39: $1$memwr$\rf$i8008_core.v:2719$1656_ADDR[2:0]$1692
    33/39: $1$mem2bits$\rf$i8008_core.v:2719$1655[13:0]$1691
    34/39: $1$memwr$\rf$i8008_core.v:2717$1654_EN[13:0]$1690
    35/39: $1$memwr$\rf$i8008_core.v:2717$1654_DATA[13:0]$1689
    36/39: $1$memwr$\rf$i8008_core.v:2717$1654_ADDR[2:0]$1688
    37/39: $1$memwr$\rf$i8008_core.v:2715$1653_EN[13:0]$1687
    38/39: $1$memwr$\rf$i8008_core.v:2715$1653_DATA[13:0]$1686
    39/39: $1$memwr$\rf$i8008_core.v:2715$1653_ADDR[2:0]$1685
Creating decoders for process `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.$proc$i8008_core.v:2043$1615'.
     1/8: $7\bus[7:0]
     2/8: $6\bus[7:0]
     3/8: $5\bus[7:0]
     4/8: $4\bus[7:0] [7:4]
     5/8: $4\bus[7:0] [3:0]
     6/8: $3\bus[7:0]
     7/8: $2\bus[7:0]
     8/8: $1\bus[7:0]
Creating decoders for process `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.$proc$i8008_core.v:2021$1612'.
     1/4: $0\Intr[0:0]
     2/4: $0\tempR[0:0]
     3/4: $0\Ready[0:0]
     4/4: $0\S_Intr[0:0]
Creating decoders for process `\fsm_decoder.$proc$i8008_core.v:2630$1108'.
     1/2: $0\state[2:0]
     2/2: $0\cycle[1:0]
Creating decoders for process `\fsm_decoder.$proc$i8008_core.v:2256$1032'.
     1/174: $1\ctrl_signals[39:0] [39:38]
     2/174: $80\ctrl_signals[6:6]
     3/174: $81\ctrl_signals[30:30]
     4/174: $63\ctrl_signals[39:38] [1]
     5/174: $58\ctrl_signals[7:3] [3]
     6/174: $76\ctrl_signals[7:6] [0]
     7/174: $75\ctrl_signals[4:4]
     8/174: $77\ctrl_signals[9:9]
     9/174: $78\ctrl_signals[33:33]
    10/174: $63\ctrl_signals[39:38] [0]
    11/174: $58\ctrl_signals[7:3] [1]
    12/174: $72\ctrl_signals[30:30]
    13/174: $74\ctrl_signals[39:38] [0]
    14/174: $73\ctrl_signals[32:32]
    15/174: $13\next_cycle[1:0]
    16/174: $13\next_state[2:0]
    17/174: $12\next_cycle[1:0]
    18/174: $12\next_state[2:0]
    19/174: $11\next_cycle[1:0]
    20/174: $11\next_state[2:0]
    21/174: $62\ctrl_signals[33:32] [1]
    22/174: $58\ctrl_signals[7:3] [4]
    23/174: $69\ctrl_signals[5:4] [0]
    24/174: $71\ctrl_signals[38:38]
    25/174: $68\ctrl_signals[1:0]
    26/174: $69\ctrl_signals[5:4] [1]
    27/174: $70\ctrl_signals[14:11] [0]
    28/174: $74\ctrl_signals[39:38] [1]
    29/174: $70\ctrl_signals[14:11] [3:1]
    30/174: $65\ctrl_signals[5:4] [0]
    31/174: $67\ctrl_signals[38:38]
    32/174: $64\ctrl_signals[1:0]
    33/174: $65\ctrl_signals[5:4] [1]
    34/174: $66\ctrl_signals[14:11] [0]
    35/174: $76\ctrl_signals[7:6] [1]
    36/174: $60\ctrl_signals[14:11]
    37/174: $58\ctrl_signals[7:3] [0]
    38/174: $57\ctrl_signals[1:0]
    39/174: $10\next_state[2:0]
    40/174: $10\next_cycle[1:0]
    41/174: $62\ctrl_signals[33:32] [0]
    42/174: $58\ctrl_signals[7:3] [2]
    43/174: $61\ctrl_signals[30:30]
    44/174: $59\ctrl_signals[9:9]
    45/174: $66\ctrl_signals[14:11] [3:1]
    46/174: $1\ctrl_signals[39:0] [32]
    47/174: $1\ctrl_signals[39:0] [30]
    48/174: $1\ctrl_signals[39:0] [28]
    49/174: $1\ctrl_signals[39:0] [9]
    50/174: $55\ctrl_signals[24:21] [2:0]
    51/174: $53\ctrl_signals[14:12]
    52/174: $56\ctrl_signals[30:30]
    53/174: $52\ctrl_signals[10:10]
    54/174: $54\ctrl_signals[17:17]
    55/174: $37\ctrl_signals[39:38] [1]
    56/174: $31\ctrl_signals[14:10] [1]
    57/174: $51\ctrl_signals[38:38]
    58/174: $35\ctrl_signals[30:29] [1]
    59/174: $49\ctrl_signals[39:38] [0]
    60/174: $48\ctrl_signals[30:29] [1]
    61/174: $48\ctrl_signals[30:29] [0]
    62/174: $9\next_state[2:0]
    63/174: $9\next_cycle[1:0]
    64/174: $37\ctrl_signals[39:38] [0]
    65/174: $44\ctrl_signals[5:4] [0]
    66/174: $47\ctrl_signals[38:38]
    67/174: $43\ctrl_signals[1:0]
    68/174: $44\ctrl_signals[5:4] [1]
    69/174: $46\ctrl_signals[30:30]
    70/174: $45\ctrl_signals[14:11] [0]
    71/174: $31\ctrl_signals[14:10] [0]
    72/174: $30\ctrl_signals[5:3] [0]
    73/174: $39\ctrl_signals[5:4] [0]
    74/174: $42\ctrl_signals[38:38]
    75/174: $38\ctrl_signals[1:0]
    76/174: $39\ctrl_signals[5:4] [1]
    77/174: $41\ctrl_signals[33:33]
    78/174: $40\ctrl_signals[14:11] [0]
    79/174: $30\ctrl_signals[5:3] [2:1]
    80/174: $36\ctrl_signals[33:33]
    81/174: $50\ctrl_signals[27:27]
    82/174: $31\ctrl_signals[14:10] [4:2]
    83/174: $29\ctrl_signals[1:0]
    84/174: $8\next_state[2:0]
    85/174: $8\next_cycle[1:0]
    86/174: $35\ctrl_signals[30:29] [0]
    87/174: $40\ctrl_signals[14:11] [3:1]
    88/174: $34\ctrl_signals[27:27]
    89/174: $33\ctrl_signals[24:21]
    90/174: $32\ctrl_signals[17:17]
    91/174: $49\ctrl_signals[39:38] [1]
    92/174: $45\ctrl_signals[14:11] [3:1]
    93/174: $1\ctrl_signals[39:0] [5:3]
    94/174: $1\ctrl_signals[39:0] [29]
    95/174: $1\ctrl_signals[39:0] [27]
    96/174: $1\ctrl_signals[39:0] [26:25]
    97/174: $1\ctrl_signals[39:0] [24:21]
    98/174: $1\ctrl_signals[39:0] [20:18]
    99/174: $1\ctrl_signals[39:0] [16]
   100/174: $1\ctrl_signals[39:0] [15]
   101/174: $1\ctrl_signals[39:0] [14:11]
   102/174: $1\ctrl_signals[39:0] [10]
   103/174: $1\ctrl_signals[39:0] [8]
   104/174: $1\ctrl_signals[39:0] [1:0]
   105/174: $1\ctrl_signals[39:0] [33]
   106/174: $55\ctrl_signals[24:21] [3]
   107/174: $79\ctrl_signals[4:4]
   108/174: $27\ctrl_signals[24:16] [0]
   109/174: $27\ctrl_signals[24:16] [1]
   110/174: $27\ctrl_signals[24:16] [4:2]
   111/174: $27\ctrl_signals[24:16] [7:5]
   112/174: $23\ctrl_signals[4:4]
   113/174: $24\ctrl_signals[6:6]
   114/174: $28\ctrl_signals[30:30]
   115/174: $22\ctrl_signals[2:2]
   116/174: $26\ctrl_signals[14:12]
   117/174: $25\ctrl_signals[10:10]
   118/174: $6\ctrl_signals[39:38] [1]
   119/174: $3\ctrl_signals[14:9] [2]
   120/174: $7\next_state[2:0]
   121/174: $17\ctrl_signals[33:32] [1]
   122/174: $15\ctrl_signals[14:11] [0]
   123/174: $13\ctrl_signals[7:6] [0]
   124/174: $17\ctrl_signals[33:32] [0]
   125/174: $19\ctrl_signals[14:11] [0]
   126/174: $21\ctrl_signals[38:38]
   127/174: $20\ctrl_signals[29:29]
   128/174: $18\ctrl_signals[38:38]
   129/174: $16\ctrl_signals[29:29]
   130/174: $13\ctrl_signals[7:6] [1]
   131/174: $19\ctrl_signals[14:11] [3:1]
   132/174: $14\ctrl_signals[9:9]
   133/174: $15\ctrl_signals[14:11] [3:1]
   134/174: $12\ctrl_signals[4:4]
   135/174: $2\ctrl_signals[7:0] [5]
   136/174: $3\ctrl_signals[14:9] [1]
   137/174: $6\next_cycle[1:0]
   138/174: $5\next_cycle[1:0]
   139/174: $5\next_state[2:0]
   140/174: $4\next_state[2:0]
   141/174: $4\next_cycle[1:0]
   142/174: $3\next_state[2:0]
   143/174: $3\next_cycle[1:0]
   144/174: $11\ctrl_signals[39:39]
   145/174: $8\ctrl_signals[9:9]
   146/174: $7\ctrl_signals[7:7]
   147/174: $10\ctrl_signals[31:31]
   148/174: $9\ctrl_signals[29:29]
   149/174: $5\ctrl_signals[33:29] [2]
   150/174: $5\ctrl_signals[33:29] [1]
   151/174: $3\ctrl_signals[14:9] [0]
   152/174: $3\ctrl_signals[14:9] [5:3]
   153/174: $2\ctrl_signals[7:0] [7]
   154/174: $5\ctrl_signals[33:29] [0]
   155/174: $6\next_state[2:0]
   156/174: $6\ctrl_signals[39:38] [0]
   157/174: $2\ctrl_signals[7:0] [4]
   158/174: $2\ctrl_signals[7:0] [2]
   159/174: $2\ctrl_signals[7:0] [1:0]
   160/174: $2\next_state[2:0]
   161/174: $2\next_cycle[1:0]
   162/174: $5\ctrl_signals[33:29] [4:3]
   163/174: $2\ctrl_signals[7:0] [3]
   164/174: $4\ctrl_signals[24:16]
   165/174: $2\ctrl_signals[7:0] [6]
   166/174: $7\next_cycle[1:0]
   167/174: $1\next_state[2:0]
   168/174: $1\next_cycle[1:0]
   169/174: $1\ctrl_signals[39:0] [37:34]
   170/174: $1\ctrl_signals[39:0] [31]
   171/174: $1\ctrl_signals[39:0] [17]
   172/174: $1\ctrl_signals[39:0] [7:6]
   173/174: $27\ctrl_signals[24:16] [8]
   174/174: $1\ctrl_signals[39:0] [2]
Creating decoders for process `\fsm_decoder.$proc$i8008_core.v:2248$1028'.
     1/1: $1\CF[0:0]
Creating decoders for process `\ALU.$proc$i8008_core.v:2176$1002'.
     1/8: $3\flag_in[3:3]
     2/8: $3\d[7:0]
     3/8: $2\NA[7:0]
     4/8: $2\d[7:0]
     5/8: $2\flag_in[3:3]
     6/8: $1\flag_in[3:3]
     7/8: $1\d[7:0]
     8/8: $1\NA[7:0]
Creating decoders for process `\top.$proc$i8008_core.v:0$965'.
     1/1: $1$mem2reg_rd$\disp_arr$i8008_core.v:1944$959_DATA[3:0]$967
Creating decoders for process `\top.$proc$i8008_core.v:0$964'.
Creating decoders for process `\top.$proc$i8008_core.v:1937$960'.
     1/1: $0\display_cnt[1:0]
Creating decoders for process `\debug_harness.$proc$i8008_core.v:884$957'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:883$956'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:882$955'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:881$954'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:880$953'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:879$952'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:865$951'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:864$950'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:861$949'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:851$948'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:845$947'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:844$946'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:842$945'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:841$944'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:839$943'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:835$942'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:834$941'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:833$940'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:829$939'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:822$938'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:821$937'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:814$936'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:813$935'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:812$934'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:811$933'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:810$932'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:809$931'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:808$930'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:807$929'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:796$928'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:795$927'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:794$926'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:792$925'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:791$924'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:789$923'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:785$922'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:784$921'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:783$920'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:779$919'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:0$913'.
     1/1: $1\_0920_$func$i8008_core.v:1261$19.$result[7:0]$918
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1204$703'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1203$702'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1202$701'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1201$700'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1200$699'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1199$698'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1198$697'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1197$696'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1196$695'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1195$694'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1194$693'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1193$692'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1192$691'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1191$690'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1190$689'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1189$688'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1188$687'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1187$686'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1186$685'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1185$684'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1184$683'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1183$682'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1182$681'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1181$680'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1180$679'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1179$678'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1178$677'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1177$676'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1176$675'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1175$674'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1174$673'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1173$672'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1172$671'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1171$670'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1170$669'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1169$668'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1168$667'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1167$666'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1166$665'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1165$664'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1164$663'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1163$662'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1162$661'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1161$660'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1160$659'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1159$658'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1158$657'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1157$656'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1156$655'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1155$654'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1154$653'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1153$652'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1152$651'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1151$650'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1150$649'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1149$648'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1148$647'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1147$646'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1146$645'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1145$644'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1144$643'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1143$642'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1142$641'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1141$640'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:1140$639'.
Creating decoders for process `\debug_harness.$proc$i8008_core.v:962$310'.
     1/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1034$91_EN[35:0]$526
     2/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1034$91_DATA[35:0]$525
     3/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1034$91_ADDR[3:0]$524
     4/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1032$90_EN[35:0]$523
     5/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1032$90_DATA[35:0]$522
     6/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1032$90_ADDR[3:0]$521
     7/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1030$89_EN[35:0]$520
     8/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1030$89_DATA[35:0]$519
     9/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1030$89_ADDR[3:0]$518
    10/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1028$88_EN[35:0]$517
    11/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1028$88_DATA[35:0]$516
    12/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1028$88_ADDR[3:0]$515
    13/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1026$87_EN[35:0]$514
    14/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1026$87_DATA[35:0]$513
    15/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1026$87_ADDR[3:0]$512
    16/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1024$86_EN[35:0]$511
    17/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1024$86_DATA[35:0]$510
    18/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1024$86_ADDR[3:0]$509
    19/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1022$85_EN[35:0]$508
    20/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1022$85_DATA[35:0]$507
    21/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1022$85_ADDR[3:0]$506
    22/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1020$84_EN[35:0]$505
    23/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1020$84_DATA[35:0]$504
    24/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1020$84_ADDR[3:0]$503
    25/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1018$83_EN[35:0]$502
    26/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1018$83_DATA[35:0]$501
    27/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1018$83_ADDR[3:0]$500
    28/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1016$82_EN[35:0]$499
    29/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1016$82_DATA[35:0]$498
    30/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1016$82_ADDR[3:0]$497
    31/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1014$81_EN[35:0]$496
    32/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1014$81_DATA[35:0]$495
    33/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1014$81_ADDR[3:0]$494
    34/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1012$80_EN[35:0]$493
    35/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1012$80_DATA[35:0]$492
    36/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1012$80_ADDR[3:0]$491
    37/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1010$79_EN[35:0]$490
    38/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1010$79_DATA[35:0]$489
    39/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1010$79_ADDR[3:0]$488
    40/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1008$78_EN[35:0]$487
    41/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1008$78_DATA[35:0]$486
    42/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1008$78_ADDR[3:0]$485
    43/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1006$77_EN[35:0]$484
    44/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1006$77_DATA[35:0]$483
    45/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1006$77_ADDR[3:0]$482
    46/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1004$76_EN[35:0]$481
    47/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1004$76_DATA[35:0]$480
    48/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1004$76_ADDR[3:0]$479
    49/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1002$75_EN[35:0]$478
    50/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1002$75_DATA[35:0]$477
    51/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1002$75_ADDR[3:0]$476
    52/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1000$74_EN[35:0]$475
    53/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1000$74_DATA[35:0]$474
    54/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1000$74_ADDR[3:0]$473
    55/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:998$73_EN[35:0]$472
    56/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:998$73_DATA[35:0]$471
    57/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:998$73_ADDR[3:0]$470
    58/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:996$72_EN[35:0]$469
    59/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:996$72_DATA[35:0]$468
    60/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:996$72_ADDR[3:0]$467
    61/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:994$71_EN[35:0]$466
    62/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:994$71_DATA[35:0]$465
    63/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:994$71_ADDR[3:0]$464
    64/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:992$70_EN[35:0]$463
    65/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:992$70_DATA[35:0]$462
    66/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:992$70_ADDR[3:0]$461
    67/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:990$69_EN[35:0]$460
    68/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:990$69_DATA[35:0]$459
    69/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:990$69_ADDR[3:0]$458
    70/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:988$68_EN[35:0]$457
    71/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:988$68_DATA[35:0]$456
    72/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:988$68_ADDR[3:0]$455
    73/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:986$67_EN[35:0]$454
    74/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:986$67_DATA[35:0]$453
    75/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:986$67_ADDR[3:0]$452
    76/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:984$66_EN[35:0]$451
    77/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:984$66_DATA[35:0]$450
    78/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:984$66_ADDR[3:0]$449
    79/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:982$65_EN[35:0]$448
    80/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:982$65_DATA[35:0]$447
    81/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:982$65_ADDR[3:0]$446
    82/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:980$64_EN[35:0]$445
    83/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:980$64_DATA[35:0]$444
    84/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:980$64_ADDR[3:0]$443
    85/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:978$63_EN[35:0]$442
    86/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:978$63_DATA[35:0]$441
    87/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:978$63_ADDR[3:0]$440
    88/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:976$62_EN[35:0]$439
    89/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:976$62_DATA[35:0]$438
    90/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:976$62_ADDR[3:0]$437
    91/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:974$61_EN[35:0]$436
    92/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:974$61_DATA[35:0]$435
    93/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:974$61_ADDR[3:0]$434
    94/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:972$60_EN[35:0]$433
    95/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:972$60_DATA[35:0]$432
    96/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:972$60_ADDR[3:0]$431
    97/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:970$59_EN[35:0]$430
    98/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:970$59_DATA[35:0]$429
    99/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:970$59_ADDR[3:0]$428
   100/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:968$58_EN[35:0]$427
   101/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:968$58_DATA[35:0]$426
   102/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:968$58_ADDR[3:0]$425
   103/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:966$57_EN[35:0]$424
   104/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:966$57_DATA[35:0]$423
   105/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:966$57_ADDR[3:0]$422
   106/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:964$56_EN[35:0]$421
   107/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:964$56_DATA[35:0]$420
   108/108: $1$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:964$56_ADDR[3:0]$419
Creating decoders for process `\debug_harness.$proc$i8008_core.v:886$92'.
     1/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:958$55_EN[35:0]$308
     2/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:958$55_DATA[35:0]$307
     3/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:958$55_ADDR[3:0]$306
     4/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:956$54_EN[35:0]$305
     5/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:956$54_DATA[35:0]$304
     6/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:956$54_ADDR[3:0]$303
     7/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:954$53_EN[35:0]$302
     8/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:954$53_DATA[35:0]$301
     9/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:954$53_ADDR[3:0]$300
    10/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:952$52_EN[35:0]$299
    11/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:952$52_DATA[35:0]$298
    12/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:952$52_ADDR[3:0]$297
    13/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:950$51_EN[35:0]$296
    14/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:950$51_DATA[35:0]$295
    15/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:950$51_ADDR[3:0]$294
    16/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:948$50_EN[35:0]$293
    17/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:948$50_DATA[35:0]$292
    18/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:948$50_ADDR[3:0]$291
    19/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:946$49_EN[35:0]$290
    20/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:946$49_DATA[35:0]$289
    21/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:946$49_ADDR[3:0]$288
    22/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:944$48_EN[35:0]$287
    23/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:944$48_DATA[35:0]$286
    24/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:944$48_ADDR[3:0]$285
    25/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:942$47_EN[35:0]$284
    26/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:942$47_DATA[35:0]$283
    27/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:942$47_ADDR[3:0]$282
    28/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:940$46_EN[35:0]$281
    29/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:940$46_DATA[35:0]$280
    30/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:940$46_ADDR[3:0]$279
    31/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:938$45_EN[35:0]$278
    32/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:938$45_DATA[35:0]$277
    33/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:938$45_ADDR[3:0]$276
    34/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:936$44_EN[35:0]$275
    35/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:936$44_DATA[35:0]$274
    36/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:936$44_ADDR[3:0]$273
    37/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:934$43_EN[35:0]$272
    38/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:934$43_DATA[35:0]$271
    39/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:934$43_ADDR[3:0]$270
    40/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:932$42_EN[35:0]$269
    41/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:932$42_DATA[35:0]$268
    42/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:932$42_ADDR[3:0]$267
    43/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:930$41_EN[35:0]$266
    44/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:930$41_DATA[35:0]$265
    45/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:930$41_ADDR[3:0]$264
    46/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:928$40_EN[35:0]$263
    47/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:928$40_DATA[35:0]$262
    48/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:928$40_ADDR[3:0]$261
    49/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:926$39_EN[35:0]$260
    50/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:926$39_DATA[35:0]$259
    51/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:926$39_ADDR[3:0]$258
    52/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:924$38_EN[35:0]$257
    53/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:924$38_DATA[35:0]$256
    54/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:924$38_ADDR[3:0]$255
    55/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:922$37_EN[35:0]$254
    56/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:922$37_DATA[35:0]$253
    57/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:922$37_ADDR[3:0]$252
    58/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:920$36_EN[35:0]$251
    59/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:920$36_DATA[35:0]$250
    60/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:920$36_ADDR[3:0]$249
    61/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:918$35_EN[35:0]$248
    62/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:918$35_DATA[35:0]$247
    63/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:918$35_ADDR[3:0]$246
    64/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:916$34_EN[35:0]$245
    65/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:916$34_DATA[35:0]$244
    66/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:916$34_ADDR[3:0]$243
    67/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:914$33_EN[35:0]$242
    68/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:914$33_DATA[35:0]$241
    69/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:914$33_ADDR[3:0]$240
    70/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:912$32_EN[35:0]$239
    71/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:912$32_DATA[35:0]$238
    72/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:912$32_ADDR[3:0]$237
    73/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:910$31_EN[35:0]$236
    74/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:910$31_DATA[35:0]$235
    75/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:910$31_ADDR[3:0]$234
    76/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:908$30_EN[35:0]$233
    77/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:908$30_DATA[35:0]$232
    78/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:908$30_ADDR[3:0]$231
    79/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:906$29_EN[35:0]$230
    80/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:906$29_DATA[35:0]$229
    81/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:906$29_ADDR[3:0]$228
    82/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:904$28_EN[35:0]$227
    83/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:904$28_DATA[35:0]$226
    84/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:904$28_ADDR[3:0]$225
    85/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:902$27_EN[35:0]$224
    86/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:902$27_DATA[35:0]$223
    87/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:902$27_ADDR[3:0]$222
    88/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:900$26_EN[35:0]$221
    89/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:900$26_DATA[35:0]$220
    90/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:900$26_ADDR[3:0]$219
    91/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:898$25_EN[35:0]$218
    92/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:898$25_DATA[35:0]$217
    93/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:898$25_ADDR[3:0]$216
    94/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:896$24_EN[35:0]$215
    95/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:896$24_DATA[35:0]$214
    96/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:896$24_ADDR[3:0]$213
    97/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:894$23_EN[35:0]$212
    98/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:894$23_DATA[35:0]$211
    99/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:894$23_ADDR[3:0]$210
   100/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:892$22_EN[35:0]$209
   101/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:892$22_DATA[35:0]$208
   102/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:892$22_ADDR[3:0]$207
   103/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:890$21_EN[35:0]$206
   104/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:890$21_DATA[35:0]$205
   105/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:890$21_ADDR[3:0]$204
   106/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:888$20_EN[35:0]$203
   107/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:888$20_DATA[35:0]$202
   108/108: $1$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:888$20_ADDR[3:0]$201
Creating decoders for process `\hex_to_sevenseg.$proc$i8008_core.v:7$1'.
     1/16: $16\seg[7:0]
     2/16: $15\seg[7:0]
     3/16: $14\seg[7:0]
     4/16: $13\seg[7:0]
     5/16: $12\seg[7:0]
     6/16: $11\seg[7:0]
     7/16: $10\seg[7:0]
     8/16: $9\seg[7:0]
     9/16: $8\seg[7:0]
    10/16: $7\seg[7:0]
    11/16: $6\seg[7:0]
    12/16: $5\seg[7:0]
    13/16: $4\seg[7:0]
    14/16: $3\seg[7:0]
    15/16: $2\seg[7:0]
    16/16: $1\seg[7:0]

2.3.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.\rs' from process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.v:2673$1763'.
No latch inferred for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.\rs' from process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:2720$1722'.
No latch inferred for signal `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.\bus' from process `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.$proc$i8008_core.v:2043$1615'.
No latch inferred for signal `\fsm_decoder.\ctrl_signals' from process `\fsm_decoder.$proc$i8008_core.v:2256$1032'.
No latch inferred for signal `\fsm_decoder.\next_cycle' from process `\fsm_decoder.$proc$i8008_core.v:2256$1032'.
No latch inferred for signal `\fsm_decoder.\next_state' from process `\fsm_decoder.$proc$i8008_core.v:2256$1032'.
No latch inferred for signal `\fsm_decoder.\CF' from process `\fsm_decoder.$proc$i8008_core.v:2248$1028'.
No latch inferred for signal `\ALU.\flag_in' from process `\ALU.$proc$i8008_core.v:2176$1002'.
No latch inferred for signal `\ALU.\NA' from process `\ALU.$proc$i8008_core.v:2176$1002'.
Latch inferred for signal `\ALU.\d' from process `\ALU.$proc$i8008_core.v:2176$1002': $auto$proc_dlatch.cc:427:proc_dlatch$4969
No latch inferred for signal `\top.$mem2reg_rd$\disp_arr$i8008_core.v:1944$959_DATA' from process `\top.$proc$i8008_core.v:0$965'.
No latch inferred for signal `\top.\disp_arr[0]' from process `\top.$proc$i8008_core.v:0$964'.
No latch inferred for signal `\top.\disp_arr[1]' from process `\top.$proc$i8008_core.v:0$964'.
No latch inferred for signal `\top.\disp_arr[2]' from process `\top.$proc$i8008_core.v:0$964'.
No latch inferred for signal `\top.\disp_arr[3]' from process `\top.$proc$i8008_core.v:0$964'.
No latch inferred for signal `\debug_harness.\_0920_$func$i8008_core.v:1261$18.$result' from process `\debug_harness.$proc$i8008_core.v:0$913'.
No latch inferred for signal `\debug_harness.\_0920_$func$i8008_core.v:1261$19.$result' from process `\debug_harness.$proc$i8008_core.v:0$913'.
No latch inferred for signal `\debug_harness.\_0920_$func$i8008_core.v:1261$19.b' from process `\debug_harness.$proc$i8008_core.v:0$913'.
No latch inferred for signal `\debug_harness.\_0920_$func$i8008_core.v:1261$19.s' from process `\debug_harness.$proc$i8008_core.v:0$913'.
No latch inferred for signal `\hex_to_sevenseg.\seg' from process `\hex_to_sevenseg.$proc$i8008_core.v:7$1'.

2.3.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1414$1472'.
  created $adff cell `$procdff$5022' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1353$1465'.
  created $dff cell `$procdff$5023' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1273$1461'.
  created $adff cell `$procdff$5024' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1212$1454'.
  created $dff cell `$procdff$5025' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1138$1451'.
  created $adff cell `$procdff$5026' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1088$1448'.
  created $dff cell `$procdff$5027' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1017$1445'.
  created $adff cell `$procdff$5028' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:967$1442'.
  created $dff cell `$procdff$5029' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:922$1440'.
  created $dff cell `$procdff$5030' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:882$1438'.
  created $dff cell `$procdff$5031' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:803$1434'.
  created $adff cell `$procdff$5032' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:742$1427'.
  created $dff cell `$procdff$5033' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:662$1423'.
  created $adff cell `$procdff$5034' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:601$1416'.
  created $dff cell `$procdff$5035' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:527$1413'.
  created $adff cell `$procdff$5036' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:477$1410'.
  created $dff cell `$procdff$5037' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:406$1407'.
  created $adff cell `$procdff$5038' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:356$1404'.
  created $dff cell `$procdff$5039' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:311$1402'.
  created $dff cell `$procdff$5040' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:271$1400'.
  created $dff cell `$procdff$5041' with positive edge clock.
Creating register for signal `$paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100.\Q' using process `$paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100.$proc$i8008_core.v:2754$1766'.
  created $dff cell `$procdff$5042' with positive edge clock.
Creating register for signal `$paramod\Register\WIDTH=s32'00000000000000000000000000001000.\Q' using process `$paramod\Register\WIDTH=s32'00000000000000000000000000001000.$proc$i8008_core.v:2735$1765'.
  created $dff cell `$procdff$5043' with positive edge clock.
Creating register for signal `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$memwr$\rf$i8008_core.v:2663$1730_EN' using process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.v:2661$1739'.
  created $dff cell `$procdff$5044' with positive edge clock.
Creating register for signal `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$memwr$\rf$i8008_core.v:2664$1731_EN' using process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.v:2661$1739'.
  created $dff cell `$procdff$5045' with positive edge clock.
Creating register for signal `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$memwr$\rf$i8008_core.v:2665$1732_EN' using process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.v:2661$1739'.
  created $dff cell `$procdff$5046' with positive edge clock.
Creating register for signal `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$memwr$\rf$i8008_core.v:2666$1733_EN' using process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.v:2661$1739'.
  created $dff cell `$procdff$5047' with positive edge clock.
Creating register for signal `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$memwr$\rf$i8008_core.v:2667$1734_EN' using process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.v:2661$1739'.
  created $dff cell `$procdff$5048' with positive edge clock.
Creating register for signal `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$memwr$\rf$i8008_core.v:2668$1735_EN' using process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.v:2661$1739'.
  created $dff cell `$procdff$5049' with positive edge clock.
Creating register for signal `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$memwr$\rf$i8008_core.v:2669$1736_EN' using process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.v:2661$1739'.
  created $dff cell `$procdff$5050' with positive edge clock.
Creating register for signal `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$memwr$\rf$i8008_core.v:2672$1737_ADDR' using process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.v:2661$1739'.
  created $dff cell `$procdff$5051' with positive edge clock.
Creating register for signal `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$memwr$\rf$i8008_core.v:2672$1737_DATA' using process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.v:2661$1739'.
  created $dff cell `$procdff$5052' with positive edge clock.
Creating register for signal `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$memwr$\rf$i8008_core.v:2672$1737_EN' using process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.v:2661$1739'.
  created $dff cell `$procdff$5053' with positive edge clock.
Creating register for signal `$paramod\Counter\WIDTH=s32'00000000000000000000000000000011.\Q' using process `$paramod\Counter\WIDTH=s32'00000000000000000000000000000011.$proc$i8008_core.v:2777$1724'.
  created $dff cell `$procdff$5054' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.v:2705$1645_EN' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:2703$1658'.
  created $dff cell `$procdff$5055' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.v:2706$1646_EN' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:2703$1658'.
  created $dff cell `$procdff$5056' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.v:2707$1647_EN' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:2703$1658'.
  created $dff cell `$procdff$5057' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.v:2708$1648_EN' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:2703$1658'.
  created $dff cell `$procdff$5058' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.v:2709$1649_EN' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:2703$1658'.
  created $dff cell `$procdff$5059' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.v:2710$1650_EN' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:2703$1658'.
  created $dff cell `$procdff$5060' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.v:2711$1651_EN' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:2703$1658'.
  created $dff cell `$procdff$5061' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.v:2712$1652_EN' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:2703$1658'.
  created $dff cell `$procdff$5062' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.v:2715$1653_ADDR' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:2703$1658'.
  created $dff cell `$procdff$5063' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.v:2715$1653_DATA' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:2703$1658'.
  created $dff cell `$procdff$5064' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.v:2715$1653_EN' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:2703$1658'.
  created $dff cell `$procdff$5065' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.v:2717$1654_ADDR' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:2703$1658'.
  created $dff cell `$procdff$5066' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.v:2717$1654_DATA' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:2703$1658'.
  created $dff cell `$procdff$5067' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.v:2717$1654_EN' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:2703$1658'.
  created $dff cell `$procdff$5068' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$mem2bits$\rf$i8008_core.v:2719$1655' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:2703$1658'.
  created $dff cell `$procdff$5069' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.v:2719$1656_ADDR' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:2703$1658'.
  created $dff cell `$procdff$5070' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.v:2719$1656_DATA' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:2703$1658'.
  created $dff cell `$procdff$5071' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.v:2719$1656_EN' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:2703$1658'.
  created $dff cell `$procdff$5072' with positive edge clock.
Creating register for signal `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.\Ready' using process `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.$proc$i8008_core.v:2021$1612'.
  created $dff cell `$procdff$5073' with positive edge clock.
Creating register for signal `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.\tempR' using process `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.$proc$i8008_core.v:2021$1612'.
  created $dff cell `$procdff$5074' with positive edge clock.
Creating register for signal `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.\Intr' using process `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.$proc$i8008_core.v:2021$1612'.
  created $dff cell `$procdff$5075' with positive edge clock.
Creating register for signal `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.\S_Intr' using process `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.$proc$i8008_core.v:2021$1612'.
  created $dff cell `$procdff$5076' with positive edge clock.
Creating register for signal `\fsm_decoder.\state' using process `\fsm_decoder.$proc$i8008_core.v:2630$1108'.
  created $dff cell `$procdff$5077' with positive edge clock.
Creating register for signal `\fsm_decoder.\cycle' using process `\fsm_decoder.$proc$i8008_core.v:2630$1108'.
  created $dff cell `$procdff$5078' with positive edge clock.
Creating register for signal `\top.\display_cnt' using process `\top.$proc$i8008_core.v:1937$960'.
  created $dff cell `$procdff$5079' with positive edge clock.
Creating register for signal `\debug_harness.\data_in' using process `\debug_harness.$proc$i8008_core.v:1204$703'.
  created $dff cell `$procdff$5080' with positive edge clock.
Creating register for signal `\debug_harness.\wb_ack' using process `\debug_harness.$proc$i8008_core.v:1203$702'.
  created $dff cell `$procdff$5081' with positive edge clock.
Creating register for signal `\debug_harness.\chip_reset' using process `\debug_harness.$proc$i8008_core.v:1202$701'.
  created $dff cell `$procdff$5082' with positive edge clock.
Creating register for signal `\debug_harness.\chip_clock' using process `\debug_harness.$proc$i8008_core.v:1201$700'.
  created $dff cell `$procdff$5083' with positive edge clock.
Creating register for signal `\debug_harness.\chip_inputs' using process `\debug_harness.$proc$i8008_core.v:1200$699'.
  created $dff cell `$procdff$5084' with positive edge clock.
Creating register for signal `\debug_harness.\uart_rx_sync' using process `\debug_harness.$proc$i8008_core.v:1199$698'.
  created $dff cell `$procdff$5085' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.wbdbgbusmaster.o_resp_data' using process `\debug_harness.$proc$i8008_core.v:1198$697'.
  created $dff cell `$procdff$5086' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.wbdbgbusmaster.o_resp_valid' using process `\debug_harness.$proc$i8008_core.v:1197$696'.
  created $dff cell `$procdff$5087' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.wbdbgbusmaster.o_wb_data' using process `\debug_harness.$proc$i8008_core.v:1196$695'.
  created $dff cell `$procdff$5088' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.wbdbgbusmaster.o_wb_we' using process `\debug_harness.$proc$i8008_core.v:1195$694'.
  created $dff cell `$procdff$5089' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.wbdbgbusmaster.addr_inc' using process `\debug_harness.$proc$i8008_core.v:1194$693'.
  created $dff cell `$procdff$5090' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.wbdbgbusmaster.o_wb_addr' using process `\debug_harness.$proc$i8008_core.v:1193$692'.
  created $dff cell `$procdff$5091' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.wbdbgbusmaster.o_wb_stb' using process `\debug_harness.$proc$i8008_core.v:1192$691'.
  created $dff cell `$procdff$5092' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.wbdbgbusmaster.o_wb_cyc' using process `\debug_harness.$proc$i8008_core.v:1191$690'.
  created $dff cell `$procdff$5093' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.uart_tx.data_send' using process `\debug_harness.$proc$i8008_core.v:1190$689'.
  created $dff cell `$procdff$5094' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.uart_tx.state' using process `\debug_harness.$proc$i8008_core.v:1189$688'.
  created $dff cell `$procdff$5095' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.uart_tx.counter' using process `\debug_harness.$proc$i8008_core.v:1188$687'.
  created $dff cell `$procdff$5096' with positive edge clock.
Creating register for signal `\debug_harness.\_0214_' using process `\debug_harness.$proc$i8008_core.v:1187$686'.
  created $dff cell `$procdff$5097' with positive edge clock.
Creating register for signal `\debug_harness.\_0208_' using process `\debug_harness.$proc$i8008_core.v:1186$685'.
  created $dff cell `$procdff$5098' with positive edge clock.
Creating register for signal `\debug_harness.\_0206_' using process `\debug_harness.$proc$i8008_core.v:1185$684'.
  created $dff cell `$procdff$5099' with positive edge clock.
Creating register for signal `\debug_harness.\_0207_' using process `\debug_harness.$proc$i8008_core.v:1184$683'.
  created $dff cell `$procdff$5100' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.uart_rx.state' using process `\debug_harness.$proc$i8008_core.v:1183$682'.
  created $dff cell `$procdff$5101' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.uart_rx.counter' using process `\debug_harness.$proc$i8008_core.v:1182$681'.
  created $dff cell `$procdff$5102' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.uart_rx.o_valid' using process `\debug_harness.$proc$i8008_core.v:1181$680'.
  created $dff cell `$procdff$5103' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.uart_rx.o_data' using process `\debug_harness.$proc$i8008_core.v:1180$679'.
  created $dff cell `$procdff$5104' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.resp_fifo.len' using process `\debug_harness.$proc$i8008_core.v:1179$678'.
  created $dff cell `$procdff$5105' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.resp_fifo.rd_ptr' using process `\debug_harness.$proc$i8008_core.v:1178$677'.
  created $dff cell `$procdff$5106' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.resp_fifo.o_rd_valid' using process `\debug_harness.$proc$i8008_core.v:1177$676'.
  created $dff cell `$procdff$5107' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.resp_fifo.o_rd_data' using process `\debug_harness.$proc$i8008_core.v:1176$675'.
  created $dff cell `$procdff$5108' with positive edge clock.
Creating register for signal `\debug_harness.\_0175_' using process `\debug_harness.$proc$i8008_core.v:1175$674'.
  created $dff cell `$procdff$5109' with positive edge clock.
Creating register for signal `\debug_harness.\_0174_' using process `\debug_harness.$proc$i8008_core.v:1174$673'.
  created $dff cell `$procdff$5110' with positive edge clock.
Creating register for signal `\debug_harness.\_0173_' using process `\debug_harness.$proc$i8008_core.v:1173$672'.
  created $dff cell `$procdff$5111' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.resp_fifo.wr_ptr' using process `\debug_harness.$proc$i8008_core.v:1172$671'.
  created $dff cell `$procdff$5112' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.cmd_fifo.len' using process `\debug_harness.$proc$i8008_core.v:1171$670'.
  created $dff cell `$procdff$5113' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.cmd_fifo.rd_ptr' using process `\debug_harness.$proc$i8008_core.v:1170$669'.
  created $dff cell `$procdff$5114' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.cmd_fifo.o_rd_valid' using process `\debug_harness.$proc$i8008_core.v:1169$668'.
  created $dff cell `$procdff$5115' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.cmd_fifo.o_rd_data' using process `\debug_harness.$proc$i8008_core.v:1168$667'.
  created $dff cell `$procdff$5116' with positive edge clock.
Creating register for signal `\debug_harness.\_0138_' using process `\debug_harness.$proc$i8008_core.v:1167$666'.
  created $dff cell `$procdff$5117' with positive edge clock.
Creating register for signal `\debug_harness.\_0137_' using process `\debug_harness.$proc$i8008_core.v:1166$665'.
  created $dff cell `$procdff$5118' with positive edge clock.
Creating register for signal `\debug_harness.\_0136_' using process `\debug_harness.$proc$i8008_core.v:1165$664'.
  created $dff cell `$procdff$5119' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.cmd_fifo.wr_ptr' using process `\debug_harness.$proc$i8008_core.v:1164$663'.
  created $dff cell `$procdff$5120' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.cmd_fifo_rd_en' using process `\debug_harness.$proc$i8008_core.v:1163$662'.
  created $dff cell `$procdff$5121' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.cmd_data' using process `\debug_harness.$proc$i8008_core.v:1162$661'.
  created $dff cell `$procdff$5122' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.cmd_valid' using process `\debug_harness.$proc$i8008_core.v:1161$660'.
  created $dff cell `$procdff$5123' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.drop_timer' using process `\debug_harness.$proc$i8008_core.v:1160$659'.
  created $dff cell `$procdff$5124' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.recieve_state' using process `\debug_harness.$proc$i8008_core.v:1159$658'.
  created $dff cell `$procdff$5125' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.recieve_data' using process `\debug_harness.$proc$i8008_core.v:1158$657'.
  created $dff cell `$procdff$5126' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.cmd_fifo_wr_data' using process `\debug_harness.$proc$i8008_core.v:1157$656'.
  created $dff cell `$procdff$5127' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.cmd_fifo_wr_en' using process `\debug_harness.$proc$i8008_core.v:1156$655'.
  created $dff cell `$procdff$5128' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.cmd_reset' using process `\debug_harness.$proc$i8008_core.v:1155$654'.
  created $dff cell `$procdff$5129' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.interrupt_4_rising' using process `\debug_harness.$proc$i8008_core.v:1154$653'.
  created $dff cell `$procdff$5130' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.interrupt_3_rising' using process `\debug_harness.$proc$i8008_core.v:1153$652'.
  created $dff cell `$procdff$5131' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.interrupt_2_rising' using process `\debug_harness.$proc$i8008_core.v:1152$651'.
  created $dff cell `$procdff$5132' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.interrupt_1_rising' using process `\debug_harness.$proc$i8008_core.v:1151$650'.
  created $dff cell `$procdff$5133' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.transmit_state' using process `\debug_harness.$proc$i8008_core.v:1150$649'.
  created $dff cell `$procdff$5134' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.transmit_data' using process `\debug_harness.$proc$i8008_core.v:1149$648'.
  created $dff cell `$procdff$5135' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.resp_fifo_rd_en' using process `\debug_harness.$proc$i8008_core.v:1148$647'.
  created $dff cell `$procdff$5136' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.uart_tx_valid' using process `\debug_harness.$proc$i8008_core.v:1147$646'.
  created $dff cell `$procdff$5137' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.uart_tx_data' using process `\debug_harness.$proc$i8008_core.v:1146$645'.
  created $dff cell `$procdff$5138' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.resp_fifo_wr_data' using process `\debug_harness.$proc$i8008_core.v:1145$644'.
  created $dff cell `$procdff$5139' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.resp_fifo_wr_en' using process `\debug_harness.$proc$i8008_core.v:1144$643'.
  created $dff cell `$procdff$5140' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.interrupt_4_last' using process `\debug_harness.$proc$i8008_core.v:1143$642'.
  created $dff cell `$procdff$5141' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.interrupt_3_last' using process `\debug_harness.$proc$i8008_core.v:1142$641'.
  created $dff cell `$procdff$5142' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.interrupt_2_last' using process `\debug_harness.$proc$i8008_core.v:1141$640'.
  created $dff cell `$procdff$5143' with positive edge clock.
Creating register for signal `\debug_harness.\wbdbg.interrupt_1_last' using process `\debug_harness.$proc$i8008_core.v:1140$639'.
  created $dff cell `$procdff$5144' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:964$56_ADDR' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5145' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:964$56_DATA' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5146' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:964$56_EN' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5147' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:966$57_ADDR' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5148' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:966$57_DATA' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5149' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:966$57_EN' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5150' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:968$58_ADDR' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5151' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:968$58_DATA' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5152' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:968$58_EN' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5153' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:970$59_ADDR' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5154' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:970$59_DATA' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5155' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:970$59_EN' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5156' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:972$60_ADDR' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5157' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:972$60_DATA' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5158' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:972$60_EN' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5159' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:974$61_ADDR' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5160' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:974$61_DATA' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5161' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:974$61_EN' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5162' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:976$62_ADDR' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5163' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:976$62_DATA' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5164' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:976$62_EN' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5165' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:978$63_ADDR' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5166' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:978$63_DATA' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5167' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:978$63_EN' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5168' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:980$64_ADDR' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5169' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:980$64_DATA' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5170' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:980$64_EN' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5171' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:982$65_ADDR' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5172' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:982$65_DATA' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5173' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:982$65_EN' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5174' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:984$66_ADDR' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5175' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:984$66_DATA' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5176' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:984$66_EN' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5177' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:986$67_ADDR' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5178' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:986$67_DATA' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5179' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:986$67_EN' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5180' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:988$68_ADDR' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5181' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:988$68_DATA' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5182' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:988$68_EN' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5183' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:990$69_ADDR' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5184' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:990$69_DATA' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5185' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:990$69_EN' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5186' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:992$70_ADDR' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5187' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:992$70_DATA' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5188' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:992$70_EN' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5189' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:994$71_ADDR' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5190' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:994$71_DATA' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5191' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:994$71_EN' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5192' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:996$72_ADDR' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5193' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:996$72_DATA' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5194' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:996$72_EN' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5195' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:998$73_ADDR' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5196' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:998$73_DATA' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5197' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:998$73_EN' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5198' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1000$74_ADDR' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5199' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1000$74_DATA' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5200' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1000$74_EN' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5201' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1002$75_ADDR' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5202' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1002$75_DATA' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5203' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1002$75_EN' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5204' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1004$76_ADDR' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5205' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1004$76_DATA' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5206' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1004$76_EN' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5207' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1006$77_ADDR' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5208' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1006$77_DATA' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5209' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1006$77_EN' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5210' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1008$78_ADDR' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5211' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1008$78_DATA' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5212' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1008$78_EN' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5213' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1010$79_ADDR' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5214' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1010$79_DATA' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5215' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1010$79_EN' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5216' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1012$80_ADDR' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5217' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1012$80_DATA' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5218' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1012$80_EN' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5219' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1014$81_ADDR' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5220' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1014$81_DATA' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5221' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1014$81_EN' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5222' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1016$82_ADDR' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5223' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1016$82_DATA' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5224' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1016$82_EN' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5225' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1018$83_ADDR' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5226' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1018$83_DATA' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5227' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1018$83_EN' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5228' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1020$84_ADDR' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5229' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1020$84_DATA' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5230' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1020$84_EN' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5231' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1022$85_ADDR' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5232' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1022$85_DATA' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5233' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1022$85_EN' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5234' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1024$86_ADDR' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5235' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1024$86_DATA' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5236' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1024$86_EN' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5237' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1026$87_ADDR' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5238' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1026$87_DATA' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5239' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1026$87_EN' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5240' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1028$88_ADDR' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5241' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1028$88_DATA' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5242' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1028$88_EN' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5243' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1030$89_ADDR' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5244' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1030$89_DATA' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5245' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1030$89_EN' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5246' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1032$90_ADDR' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5247' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1032$90_DATA' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5248' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1032$90_EN' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5249' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1034$91_ADDR' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5250' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1034$91_DATA' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5251' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1034$91_EN' using process `\debug_harness.$proc$i8008_core.v:962$310'.
  created $dff cell `$procdff$5252' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:888$20_ADDR' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5253' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:888$20_DATA' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5254' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:888$20_EN' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5255' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:890$21_ADDR' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5256' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:890$21_DATA' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5257' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:890$21_EN' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5258' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:892$22_ADDR' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5259' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:892$22_DATA' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5260' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:892$22_EN' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5261' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:894$23_ADDR' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5262' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:894$23_DATA' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5263' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:894$23_EN' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5264' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:896$24_ADDR' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5265' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:896$24_DATA' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5266' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:896$24_EN' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5267' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:898$25_ADDR' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5268' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:898$25_DATA' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5269' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:898$25_EN' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5270' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:900$26_ADDR' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5271' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:900$26_DATA' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5272' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:900$26_EN' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5273' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:902$27_ADDR' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5274' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:902$27_DATA' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5275' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:902$27_EN' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5276' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:904$28_ADDR' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5277' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:904$28_DATA' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5278' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:904$28_EN' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5279' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:906$29_ADDR' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5280' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:906$29_DATA' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5281' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:906$29_EN' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5282' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:908$30_ADDR' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5283' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:908$30_DATA' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5284' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:908$30_EN' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5285' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:910$31_ADDR' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5286' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:910$31_DATA' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5287' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:910$31_EN' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5288' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:912$32_ADDR' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5289' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:912$32_DATA' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5290' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:912$32_EN' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5291' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:914$33_ADDR' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5292' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:914$33_DATA' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5293' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:914$33_EN' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5294' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:916$34_ADDR' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5295' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:916$34_DATA' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5296' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:916$34_EN' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5297' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:918$35_ADDR' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5298' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:918$35_DATA' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5299' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:918$35_EN' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5300' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:920$36_ADDR' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5301' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:920$36_DATA' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5302' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:920$36_EN' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5303' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:922$37_ADDR' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5304' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:922$37_DATA' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5305' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:922$37_EN' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5306' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:924$38_ADDR' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5307' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:924$38_DATA' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5308' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:924$38_EN' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5309' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:926$39_ADDR' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5310' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:926$39_DATA' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5311' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:926$39_EN' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5312' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:928$40_ADDR' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5313' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:928$40_DATA' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5314' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:928$40_EN' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5315' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:930$41_ADDR' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5316' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:930$41_DATA' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5317' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:930$41_EN' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5318' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:932$42_ADDR' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5319' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:932$42_DATA' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5320' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:932$42_EN' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5321' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:934$43_ADDR' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5322' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:934$43_DATA' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5323' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:934$43_EN' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5324' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:936$44_ADDR' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5325' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:936$44_DATA' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5326' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:936$44_EN' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5327' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:938$45_ADDR' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5328' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:938$45_DATA' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5329' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:938$45_EN' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5330' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:940$46_ADDR' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5331' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:940$46_DATA' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5332' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:940$46_EN' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5333' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:942$47_ADDR' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5334' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:942$47_DATA' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5335' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:942$47_EN' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5336' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:944$48_ADDR' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5337' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:944$48_DATA' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5338' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:944$48_EN' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5339' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:946$49_ADDR' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5340' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:946$49_DATA' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5341' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:946$49_EN' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5342' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:948$50_ADDR' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5343' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:948$50_DATA' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5344' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:948$50_EN' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5345' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:950$51_ADDR' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5346' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:950$51_DATA' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5347' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:950$51_EN' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5348' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:952$52_ADDR' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5349' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:952$52_DATA' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5350' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:952$52_EN' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5351' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:954$53_ADDR' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5352' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:954$53_DATA' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5353' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:954$53_EN' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5354' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:956$54_ADDR' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5355' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:956$54_DATA' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5356' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:956$54_EN' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5357' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:958$55_ADDR' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5358' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:958$55_DATA' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5359' with positive edge clock.
Creating register for signal `\debug_harness.$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:958$55_EN' using process `\debug_harness.$proc$i8008_core.v:886$92'.
  created $dff cell `$procdff$5360' with positive edge clock.

2.3.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

2.3.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SB_DFFNES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1475'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1414$1472'.
Removing empty process `SB_DFFNES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1414$1472'.
Removing empty process `SB_DFFNESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1471'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1353$1465'.
Removing empty process `SB_DFFNESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1353$1465'.
Removing empty process `SB_DFFNER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1464'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1273$1461'.
Removing empty process `SB_DFFNER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1273$1461'.
Removing empty process `SB_DFFNESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1460'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1212$1454'.
Removing empty process `SB_DFFNESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1212$1454'.
Removing empty process `SB_DFFNS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1453'.
Removing empty process `SB_DFFNS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1138$1451'.
Removing empty process `SB_DFFNSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1450'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1088$1448'.
Removing empty process `SB_DFFNSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1088$1448'.
Removing empty process `SB_DFFNR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1447'.
Removing empty process `SB_DFFNR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1017$1445'.
Removing empty process `SB_DFFNSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1444'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:967$1442'.
Removing empty process `SB_DFFNSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:967$1442'.
Removing empty process `SB_DFFNE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1441'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:922$1440'.
Removing empty process `SB_DFFNE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:922$1440'.
Removing empty process `SB_DFFN.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1439'.
Removing empty process `SB_DFFN.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:882$1438'.
Removing empty process `SB_DFFES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1437'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:803$1434'.
Removing empty process `SB_DFFES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:803$1434'.
Removing empty process `SB_DFFESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1433'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:742$1427'.
Removing empty process `SB_DFFESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:742$1427'.
Removing empty process `SB_DFFER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1426'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:662$1423'.
Removing empty process `SB_DFFER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:662$1423'.
Removing empty process `SB_DFFESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1422'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:601$1416'.
Removing empty process `SB_DFFESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:601$1416'.
Removing empty process `SB_DFFS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1415'.
Removing empty process `SB_DFFS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:527$1413'.
Removing empty process `SB_DFFSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1412'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:477$1410'.
Removing empty process `SB_DFFSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:477$1410'.
Removing empty process `SB_DFFR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1409'.
Removing empty process `SB_DFFR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:406$1407'.
Removing empty process `SB_DFFSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1406'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:356$1404'.
Removing empty process `SB_DFFSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:356$1404'.
Removing empty process `SB_DFFE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1403'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:311$1402'.
Removing empty process `SB_DFFE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:311$1402'.
Removing empty process `SB_DFF.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1401'.
Removing empty process `SB_DFF.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:271$1400'.
Found and cleaned up 2 empty switches in `$paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100.$proc$i8008_core.v:2754$1766'.
Removing empty process `$paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100.$proc$i8008_core.v:2754$1766'.
Found and cleaned up 2 empty switches in `$paramod\Register\WIDTH=s32'00000000000000000000000000001000.$proc$i8008_core.v:2735$1765'.
Removing empty process `$paramod\Register\WIDTH=s32'00000000000000000000000000001000.$proc$i8008_core.v:2735$1765'.
Removing empty process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.v:2673$1763'.
Found and cleaned up 2 empty switches in `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.v:2661$1739'.
Removing empty process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.v:2661$1739'.
Found and cleaned up 4 empty switches in `$paramod\Counter\WIDTH=s32'00000000000000000000000000000011.$proc$i8008_core.v:2777$1724'.
Removing empty process `$paramod\Counter\WIDTH=s32'00000000000000000000000000000011.$proc$i8008_core.v:2777$1724'.
Removing empty process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:2720$1722'.
Found and cleaned up 4 empty switches in `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:2703$1658'.
Removing empty process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:2703$1658'.
Found and cleaned up 7 empty switches in `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.$proc$i8008_core.v:2043$1615'.
Removing empty process `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.$proc$i8008_core.v:2043$1615'.
Found and cleaned up 3 empty switches in `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.$proc$i8008_core.v:2021$1612'.
Removing empty process `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.$proc$i8008_core.v:2021$1612'.
Found and cleaned up 1 empty switch in `\fsm_decoder.$proc$i8008_core.v:2630$1108'.
Removing empty process `fsm_decoder.$proc$i8008_core.v:2630$1108'.
Found and cleaned up 27 empty switches in `\fsm_decoder.$proc$i8008_core.v:2256$1032'.
Removing empty process `fsm_decoder.$proc$i8008_core.v:2256$1032'.
Found and cleaned up 1 empty switch in `\fsm_decoder.$proc$i8008_core.v:2248$1028'.
Removing empty process `fsm_decoder.$proc$i8008_core.v:2248$1028'.
Found and cleaned up 3 empty switches in `\ALU.$proc$i8008_core.v:2176$1002'.
Removing empty process `ALU.$proc$i8008_core.v:2176$1002'.
Found and cleaned up 1 empty switch in `\top.$proc$i8008_core.v:0$965'.
Removing empty process `top.$proc$i8008_core.v:0$965'.
Removing empty process `top.$proc$i8008_core.v:0$964'.
Found and cleaned up 1 empty switch in `\top.$proc$i8008_core.v:1937$960'.
Removing empty process `top.$proc$i8008_core.v:1937$960'.
Removing empty process `debug_harness.$proc$i8008_core.v:884$957'.
Removing empty process `debug_harness.$proc$i8008_core.v:883$956'.
Removing empty process `debug_harness.$proc$i8008_core.v:882$955'.
Removing empty process `debug_harness.$proc$i8008_core.v:881$954'.
Removing empty process `debug_harness.$proc$i8008_core.v:880$953'.
Removing empty process `debug_harness.$proc$i8008_core.v:879$952'.
Removing empty process `debug_harness.$proc$i8008_core.v:865$951'.
Removing empty process `debug_harness.$proc$i8008_core.v:864$950'.
Removing empty process `debug_harness.$proc$i8008_core.v:861$949'.
Removing empty process `debug_harness.$proc$i8008_core.v:851$948'.
Removing empty process `debug_harness.$proc$i8008_core.v:845$947'.
Removing empty process `debug_harness.$proc$i8008_core.v:844$946'.
Removing empty process `debug_harness.$proc$i8008_core.v:842$945'.
Removing empty process `debug_harness.$proc$i8008_core.v:841$944'.
Removing empty process `debug_harness.$proc$i8008_core.v:839$943'.
Removing empty process `debug_harness.$proc$i8008_core.v:835$942'.
Removing empty process `debug_harness.$proc$i8008_core.v:834$941'.
Removing empty process `debug_harness.$proc$i8008_core.v:833$940'.
Removing empty process `debug_harness.$proc$i8008_core.v:829$939'.
Removing empty process `debug_harness.$proc$i8008_core.v:822$938'.
Removing empty process `debug_harness.$proc$i8008_core.v:821$937'.
Removing empty process `debug_harness.$proc$i8008_core.v:814$936'.
Removing empty process `debug_harness.$proc$i8008_core.v:813$935'.
Removing empty process `debug_harness.$proc$i8008_core.v:812$934'.
Removing empty process `debug_harness.$proc$i8008_core.v:811$933'.
Removing empty process `debug_harness.$proc$i8008_core.v:810$932'.
Removing empty process `debug_harness.$proc$i8008_core.v:809$931'.
Removing empty process `debug_harness.$proc$i8008_core.v:808$930'.
Removing empty process `debug_harness.$proc$i8008_core.v:807$929'.
Removing empty process `debug_harness.$proc$i8008_core.v:796$928'.
Removing empty process `debug_harness.$proc$i8008_core.v:795$927'.
Removing empty process `debug_harness.$proc$i8008_core.v:794$926'.
Removing empty process `debug_harness.$proc$i8008_core.v:792$925'.
Removing empty process `debug_harness.$proc$i8008_core.v:791$924'.
Removing empty process `debug_harness.$proc$i8008_core.v:789$923'.
Removing empty process `debug_harness.$proc$i8008_core.v:785$922'.
Removing empty process `debug_harness.$proc$i8008_core.v:784$921'.
Removing empty process `debug_harness.$proc$i8008_core.v:783$920'.
Removing empty process `debug_harness.$proc$i8008_core.v:779$919'.
Found and cleaned up 1 empty switch in `\debug_harness.$proc$i8008_core.v:0$913'.
Removing empty process `debug_harness.$proc$i8008_core.v:0$913'.
Removing empty process `debug_harness.$proc$i8008_core.v:1204$703'.
Removing empty process `debug_harness.$proc$i8008_core.v:1203$702'.
Removing empty process `debug_harness.$proc$i8008_core.v:1202$701'.
Removing empty process `debug_harness.$proc$i8008_core.v:1201$700'.
Removing empty process `debug_harness.$proc$i8008_core.v:1200$699'.
Removing empty process `debug_harness.$proc$i8008_core.v:1199$698'.
Removing empty process `debug_harness.$proc$i8008_core.v:1198$697'.
Removing empty process `debug_harness.$proc$i8008_core.v:1197$696'.
Removing empty process `debug_harness.$proc$i8008_core.v:1196$695'.
Removing empty process `debug_harness.$proc$i8008_core.v:1195$694'.
Removing empty process `debug_harness.$proc$i8008_core.v:1194$693'.
Removing empty process `debug_harness.$proc$i8008_core.v:1193$692'.
Removing empty process `debug_harness.$proc$i8008_core.v:1192$691'.
Removing empty process `debug_harness.$proc$i8008_core.v:1191$690'.
Removing empty process `debug_harness.$proc$i8008_core.v:1190$689'.
Removing empty process `debug_harness.$proc$i8008_core.v:1189$688'.
Removing empty process `debug_harness.$proc$i8008_core.v:1188$687'.
Removing empty process `debug_harness.$proc$i8008_core.v:1187$686'.
Removing empty process `debug_harness.$proc$i8008_core.v:1186$685'.
Removing empty process `debug_harness.$proc$i8008_core.v:1185$684'.
Removing empty process `debug_harness.$proc$i8008_core.v:1184$683'.
Removing empty process `debug_harness.$proc$i8008_core.v:1183$682'.
Removing empty process `debug_harness.$proc$i8008_core.v:1182$681'.
Removing empty process `debug_harness.$proc$i8008_core.v:1181$680'.
Removing empty process `debug_harness.$proc$i8008_core.v:1180$679'.
Removing empty process `debug_harness.$proc$i8008_core.v:1179$678'.
Removing empty process `debug_harness.$proc$i8008_core.v:1178$677'.
Removing empty process `debug_harness.$proc$i8008_core.v:1177$676'.
Removing empty process `debug_harness.$proc$i8008_core.v:1176$675'.
Removing empty process `debug_harness.$proc$i8008_core.v:1175$674'.
Removing empty process `debug_harness.$proc$i8008_core.v:1174$673'.
Removing empty process `debug_harness.$proc$i8008_core.v:1173$672'.
Removing empty process `debug_harness.$proc$i8008_core.v:1172$671'.
Removing empty process `debug_harness.$proc$i8008_core.v:1171$670'.
Removing empty process `debug_harness.$proc$i8008_core.v:1170$669'.
Removing empty process `debug_harness.$proc$i8008_core.v:1169$668'.
Removing empty process `debug_harness.$proc$i8008_core.v:1168$667'.
Removing empty process `debug_harness.$proc$i8008_core.v:1167$666'.
Removing empty process `debug_harness.$proc$i8008_core.v:1166$665'.
Removing empty process `debug_harness.$proc$i8008_core.v:1165$664'.
Removing empty process `debug_harness.$proc$i8008_core.v:1164$663'.
Removing empty process `debug_harness.$proc$i8008_core.v:1163$662'.
Removing empty process `debug_harness.$proc$i8008_core.v:1162$661'.
Removing empty process `debug_harness.$proc$i8008_core.v:1161$660'.
Removing empty process `debug_harness.$proc$i8008_core.v:1160$659'.
Removing empty process `debug_harness.$proc$i8008_core.v:1159$658'.
Removing empty process `debug_harness.$proc$i8008_core.v:1158$657'.
Removing empty process `debug_harness.$proc$i8008_core.v:1157$656'.
Removing empty process `debug_harness.$proc$i8008_core.v:1156$655'.
Removing empty process `debug_harness.$proc$i8008_core.v:1155$654'.
Removing empty process `debug_harness.$proc$i8008_core.v:1154$653'.
Removing empty process `debug_harness.$proc$i8008_core.v:1153$652'.
Removing empty process `debug_harness.$proc$i8008_core.v:1152$651'.
Removing empty process `debug_harness.$proc$i8008_core.v:1151$650'.
Removing empty process `debug_harness.$proc$i8008_core.v:1150$649'.
Removing empty process `debug_harness.$proc$i8008_core.v:1149$648'.
Removing empty process `debug_harness.$proc$i8008_core.v:1148$647'.
Removing empty process `debug_harness.$proc$i8008_core.v:1147$646'.
Removing empty process `debug_harness.$proc$i8008_core.v:1146$645'.
Removing empty process `debug_harness.$proc$i8008_core.v:1145$644'.
Removing empty process `debug_harness.$proc$i8008_core.v:1144$643'.
Removing empty process `debug_harness.$proc$i8008_core.v:1143$642'.
Removing empty process `debug_harness.$proc$i8008_core.v:1142$641'.
Removing empty process `debug_harness.$proc$i8008_core.v:1141$640'.
Removing empty process `debug_harness.$proc$i8008_core.v:1140$639'.
Found and cleaned up 36 empty switches in `\debug_harness.$proc$i8008_core.v:962$310'.
Removing empty process `debug_harness.$proc$i8008_core.v:962$310'.
Found and cleaned up 36 empty switches in `\debug_harness.$proc$i8008_core.v:886$92'.
Removing empty process `debug_harness.$proc$i8008_core.v:886$92'.
Found and cleaned up 16 empty switches in `\hex_to_sevenseg.$proc$i8008_core.v:7$1'.
Removing empty process `hex_to_sevenseg.$proc$i8008_core.v:7$1'.
Cleaned up 165 empty switches.

2.3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100.
Optimizing module $paramod\Register\WIDTH=s32'00000000000000000000000000001000.
Optimizing module $paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.
Optimizing module $paramod\Counter\WIDTH=s32'00000000000000000000000000000011.
Optimizing module $paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.
Optimizing module $paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.
<suppressed ~4 debug messages>
Optimizing module fsm_decoder.
<suppressed ~151 debug messages>
Optimizing module ALU.
<suppressed ~20 debug messages>
Optimizing module top.
<suppressed ~1 debug messages>
Optimizing module debug_harness.
Optimizing module hex_to_sevenseg.
<suppressed ~1 debug messages>

2.4. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100.
Deleting now unused module $paramod\Register\WIDTH=s32'00000000000000000000000000001000.
Deleting now unused module $paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.
Deleting now unused module $paramod\Counter\WIDTH=s32'00000000000000000000000000000011.
Deleting now unused module $paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.
Deleting now unused module $paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.
Deleting now unused module fsm_decoder.
Deleting now unused module ALU.
Deleting now unused module debug_harness.
Deleting now unused module hex_to_sevenseg.
<suppressed ~12 debug messages>

2.5. Executing TRIBUF pass.

2.6. Executing DEMINOUT pass (demote inout ports to input or output).

2.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~8 debug messages>

2.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 304 unused cells and 1953 unused wires.
<suppressed ~378 debug messages>

2.9. Executing CHECK pass (checking for obvious problems).
Checking module top...
Warning: Wire top.\base_led [7] is used but has no driver.
Warning: Wire top.\base_led [6] is used but has no driver.
Warning: Wire top.\base_led [5] is used but has no driver.
Warning: Wire top.\base_led [4] is used but has no driver.
Warning: Wire top.\base_led [3] is used but has no driver.
Warning: Wire top.\base_led [2] is used but has no driver.
Warning: Wire top.\base_led [1] is used but has no driver.
Warning: Wire top.\base_led [0] is used but has no driver.
Warning: Wire top.\dbg.chip_outputs [11] is used but has no driver.
Found and reported 9 problems.

2.10. Executing OPT pass (performing simple optimizations).

2.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~4248 debug messages>
Removed a total of 1416 cells.

2.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\dbg.$ternary$i8008_core.v:1210$709: \dbg.wbdbg.interrupt_4_rising -> 1'0
      Replacing known input bits on port A of cell $flatten\dbg.$ternary$i8008_core.v:1217$716: \dbg.wbdbg.interrupt_3_rising -> 1'0
      Replacing known input bits on port A of cell $flatten\dbg.$ternary$i8008_core.v:1223$722: \dbg.wbdbg.interrupt_2_rising -> 1'0
      Replacing known input bits on port A of cell $flatten\dbg.$ternary$i8008_core.v:1228$727: \dbg.wbdbg.interrupt_1_rising -> 1'0
      Replacing known input bits on port B of cell $flatten\dbg.$ternary$i8008_core.v:1398$883: \dbg.wbdbg.wbdbgbusmaster.o_wb_stb -> 1'0
      Replacing known input bits on port A of cell $flatten\dbg.$ternary$i8008_core.v:1397$882: \dbg.wbdbg.wbdbgbusmaster.o_wb_stb -> 1'0
      Replacing known input bits on port A of cell $flatten\dbg.$ternary$i8008_core.v:1402$887: \dbg.wbdbg.wbdbgbusmaster.o_wb_cyc -> 1'1
      Replacing known input bits on port A of cell $flatten\dbg.$ternary$i8008_core.v:1401$886: \dbg.wbdbg.wbdbgbusmaster.o_wb_cyc -> 1'0
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3496.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3498.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2877.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3507.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2526.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3509.
    dead port 1/2 on $mux $flatten\DUT.$procmux$2187.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2443.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2879.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3248.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2272.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2537.
    dead port 1/2 on $mux $flatten\DUT.$procmux$2190.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3523.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2539.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3525.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2274.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3534.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3536.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3250.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2281.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2889.
    dead port 1/2 on $mux $flatten\DUT.$procmux$2196.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2283.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3549.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2891.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3551.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3566.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3568.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2550.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3570.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2236.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3585.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2431.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3262.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3587.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3589.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2552.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3604.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3264.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3606.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3608.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2902.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2914.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3622.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3624.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2916.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2291.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3638.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3640.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3653.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2293.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3655.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2808.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3670.
    dead port 1/2 on $mux $flatten\DUT.$procmux$2109.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3672.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3674.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3685.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2564.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3687.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2816.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2566.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3701.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3703.
    dead port 1/2 on $mux $flatten\DUT.$procmux$2112.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3716.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3718.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2929.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2931.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2818.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2301.
    dead port 1/2 on $mux $flatten\DUT.$procmux$2115.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3730.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2303.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2578.
    dead port 1/2 on $mux $flatten\DUT.$procmux$2118.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2453.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2580.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3742.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3754.
    dead port 1/2 on $mux $flatten\DUT.$procmux$2121.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2463.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3756.
    dead port 1/2 on $mux $flatten\DUT.$procmux$2124.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2944.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3758.
    dead port 1/2 on $mux $flatten\DUT.\Brain.$procmux$3772.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3774.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2946.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3776.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2465.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3778.
    dead port 1/2 on $mux $flatten\DUT.\Brain.$procmux$3792.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3794.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2242.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2591.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3796.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2829.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3798.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3811.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2775.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2593.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3813.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2959.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2313.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3815.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2961.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3828.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3227.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2605.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3332.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3830.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3334.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3832.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2972.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2974.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2607.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2433.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2986.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2988.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2244.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2615.
    dead port 1/2 on $mux $flatten\DUT.$procmux$2130.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3844.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2617.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3846.
    dead port 1/2 on $mux $flatten\DUT.$procmux$2133.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3340.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2999.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2777.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3342.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2323.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2476.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3858.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2627.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3010.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3860.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2332.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3869.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3871.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3881.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3883.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3893.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2334.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3895.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3905.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3352.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3907.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3024.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3916.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3354.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2478.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3918.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2343.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3026.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2637.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2840.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3930.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2767.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2784.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2345.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3363.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2842.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3365.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3942.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2647.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3040.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2786.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3042.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3954.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2353.
    dead port 1/2 on $mux $flatten\DUT.$procmux$2136.
    dead port 1/2 on $mux $flatten\DUT.$procmux$2139.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3966.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3374.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2355.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2254.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2657.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3376.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2364.
    dead port 1/2 on $mux $flatten\DUT.$procmux$2142.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3978.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3056.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2489.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3058.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3385.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2366.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3990.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3387.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$4002.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2491.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$4004.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2667.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$4006.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2368.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3398.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3072.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3400.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3074.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2377.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$4018.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3411.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3086.
    dead port 1/2 on $mux $flatten\DUT.$procmux$2148.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3413.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3238.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3088.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$4030.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2379.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2853.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2677.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3424.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3101.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3216.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3426.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$4042.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3103.
    dead port 1/2 on $mux $flatten\DUT.$procmux$2151.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2381.
    dead port 1/2 on $mux $flatten\DUT.$procmux$2154.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3437.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2391.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$4054.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2855.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3439.
    dead port 1/2 on $mux $flatten\DUT.$procmux$2157.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2687.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3114.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$4066.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2393.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3449.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3451.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2395.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$4078.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3125.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2501.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3133.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3135.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2405.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2697.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$4090.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2503.
    dead port 1/2 on $mux $flatten\DUT.$procmux$2163.
    dead port 1/2 on $mux $flatten\DUT.$procmux$2166.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2407.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2514.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$4102.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3146.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2264.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3461.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2516.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2409.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3463.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2707.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$4114.
    dead port 1/2 on $mux $flatten\DUT.$procmux$2169.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3157.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2719.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2865.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$4126.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$4135.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$4137.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2721.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2867.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3168.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2419.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3475.
    dead port 1/2 on $mux $flatten\DUT.$procmux$2175.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$4175.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3179.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$4177.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2745.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1884.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1887.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1890.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1896.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1899.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1902.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1908.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1911.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1914.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1932.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1935.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1941.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1944.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1950.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1953.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1959.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1962.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1968.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1971.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1977.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1980.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1995.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$2001.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$2007.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$2013.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$2019.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$2025.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$2037.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$2043.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$2049.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2421.
    dead port 1/2 on $mux $flatten\DUT.\Unit.$procmux$4199.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2747.
    dead port 1/2 on $mux $flatten\DUT.$procmux$2178.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3190.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2524.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2755.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3203.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2797.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2757.
    dead port 1/2 on $mux $flatten\DUT.\Unit.$procmux$4223.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2234.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3205.
    dead port 2/2 on $mux $flatten\DUT.\Unit.$procmux$4243.
    dead port 1/2 on $mux $flatten\DUT.$procmux$2181.
    dead port 1/2 on $mux $flatten\DUT.\rf.$procmux$1825.
    dead port 1/2 on $mux $flatten\DUT.\rf.$procmux$1831.
    dead port 1/2 on $mux $flatten\DUT.\rf.$procmux$1837.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3487.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2765.
    dead port 1/2 on $mux $flatten\dbg.$ternary$i8008_core.v:1305$790.
    dead port 1/2 on $mux $flatten\dbg.$ternary$i8008_core.v:1307$792.
    dead port 1/2 on $mux $flatten\dbg.$ternary$i8008_core.v:1309$794.
    dead port 1/2 on $mux $flatten\dbg.$ternary$i8008_core.v:1325$810.
    dead port 1/2 on $mux $flatten\dbg.$ternary$i8008_core.v:1327$812.
    dead port 1/2 on $mux $flatten\dbg.$ternary$i8008_core.v:1329$814.
    dead port 2/2 on $mux $flatten\dbg.$ternary$i8008_core.v:1345$830.
    dead port 1/2 on $mux $flatten\dbg.$ternary$i8008_core.v:1346$831.
    dead port 1/2 on $mux $flatten\dbg.$ternary$i8008_core.v:1357$842.
    dead port 1/2 on $mux $flatten\dbg.$ternary$i8008_core.v:1381$866.
    dead port 1/2 on $mux $flatten\dbg.$ternary$i8008_core.v:1382$867.
    dead port 1/2 on $mux $flatten\dbg.$ternary$i8008_core.v:1384$869.
    dead port 1/2 on $mux $flatten\dbg.$ternary$i8008_core.v:1386$871.
Removed 336 multiplexer ports.
<suppressed ~340 debug messages>

2.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3959: { $auto$opt_reduce.cc:134:opt_pmux$5453 $flatten\DUT.\Brain.$procmux$2249_CMP $flatten\DUT.\Brain.$procmux$2235_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2895: { $flatten\DUT.\Brain.$procmux$3215_CTRL $flatten\DUT.\Brain.$procmux$2252_CMP $flatten\DUT.\Brain.$procmux$3223_CTRL $flatten\DUT.\Brain.$procmux$2249_CMP $auto$opt_reduce.cc:134:opt_pmux$5455 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2790: { $flatten\DUT.\Brain.$procmux$3223_CTRL $auto$opt_reduce.cc:134:opt_pmux$5457 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3971: { $flatten\DUT.\Brain.$procmux$3223_CTRL $auto$opt_reduce.cc:134:opt_pmux$5459 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2660: { $flatten\DUT.\Brain.$procmux$3223_CTRL $auto$opt_reduce.cc:134:opt_pmux$5461 $flatten\DUT.\Brain.$procmux$2235_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3983: { $flatten\DUT.\Brain.$procmux$3223_CTRL $flatten\DUT.\Brain.$procmux$2249_CMP $auto$opt_reduce.cc:134:opt_pmux$5463 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2298: $auto$opt_reduce.cc:134:opt_pmux$5465
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2473: $auto$opt_reduce.cc:134:opt_pmux$5467
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2257: { $auto$opt_reduce.cc:134:opt_pmux$5469 $flatten\DUT.\Brain.$procmux$2249_CMP $flatten\DUT.\Brain.$procmux$2235_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2670: { $flatten\DUT.\Brain.$procmux$3223_CTRL $auto$opt_reduce.cc:134:opt_pmux$5471 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$4011: { $auto$opt_reduce.cc:134:opt_pmux$5475 $flatten\DUT.\Brain.$procmux$2249_CMP $auto$opt_reduce.cc:134:opt_pmux$5473 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$4023: { $flatten\DUT.\Brain.$procmux$3215_CTRL $auto$opt_reduce.cc:134:opt_pmux$5477 $flatten\DUT.\Brain.$procmux$2235_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3546: $auto$opt_reduce.cc:134:opt_pmux$5479
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$4035: { $auto$opt_reduce.cc:134:opt_pmux$5481 $flatten\DUT.\Brain.$procmux$2235_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2680: { $flatten\DUT.\Brain.$procmux$3215_CTRL $flatten\DUT.\Brain.$procmux$2252_CMP $auto$opt_reduce.cc:134:opt_pmux$5483 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2316: { $flatten\DUT.\Brain.$procmux$3215_CTRL $auto$opt_reduce.cc:134:opt_pmux$5485 $flatten\DUT.\Brain.$procmux$2235_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$4047: $auto$opt_reduce.cc:134:opt_pmux$5487
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3107: { $flatten\DUT.\Brain.$procmux$3215_CTRL $flatten\DUT.\Brain.$procmux$2252_CMP $auto$opt_reduce.cc:134:opt_pmux$5489 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3231: $auto$opt_reduce.cc:134:opt_pmux$5491
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3118: { $flatten\DUT.\Brain.$procmux$3215_CTRL $auto$opt_reduce.cc:134:opt_pmux$5493 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2690: { $flatten\DUT.\Brain.$procmux$3223_CTRL $auto$opt_reduce.cc:134:opt_pmux$5495 $flatten\DUT.\Brain.$procmux$2235_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2992: { $auto$opt_reduce.cc:134:opt_pmux$5497 $flatten\DUT.\Brain.$procmux$2235_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$4071: { $auto$opt_reduce.cc:134:opt_pmux$5499 $flatten\DUT.\Brain.$procmux$3223_CTRL $flatten\DUT.\Brain.$procmux$2249_CMP $flatten\DUT.\Brain.$procmux$2235_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2247: { $flatten\DUT.\Brain.$procmux$3223_CTRL $auto$opt_reduce.cc:134:opt_pmux$5501 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$4083: { $flatten\DUT.\Brain.$procmux$2249_CMP $auto$opt_reduce.cc:134:opt_pmux$5503 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3457: $auto$opt_reduce.cc:134:opt_pmux$5505
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2446: { $flatten\DUT.\Brain.$procmux$2249_CMP $auto$opt_reduce.cc:134:opt_pmux$5507 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2772: $auto$opt_reduce.cc:134:opt_pmux$5509
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3139: { $flatten\DUT.\Brain.$procmux$3215_CTRL $flatten\DUT.\Brain.$procmux$2252_CMP $auto$opt_reduce.cc:134:opt_pmux$5511 $flatten\DUT.\Brain.$procmux$2235_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3723: { $auto$opt_reduce.cc:134:opt_pmux$5515 $auto$opt_reduce.cc:134:opt_pmux$5513 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$4095: { $flatten\DUT.\Brain.$procmux$2252_CMP $auto$opt_reduce.cc:134:opt_pmux$5517 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2620: { $flatten\DUT.\Brain.$procmux$3215_CTRL $flatten\DUT.\Brain.$procmux$2252_CMP $auto$opt_reduce.cc:134:opt_pmux$5519 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2700: { $flatten\DUT.\Brain.$procmux$2249_CMP $auto$opt_reduce.cc:134:opt_pmux$5521 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3003: { $flatten\DUT.\Brain.$procmux$2252_CMP $auto$opt_reduce.cc:134:opt_pmux$5523 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$4107: { $auto$opt_reduce.cc:134:opt_pmux$5525 $flatten\DUT.\Brain.$procmux$2235_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3150: { $flatten\DUT.\Brain.$procmux$3215_CTRL $flatten\DUT.\Brain.$procmux$2252_CMP $auto$opt_reduce.cc:134:opt_pmux$5527 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3348: $auto$opt_reduce.cc:134:opt_pmux$5529
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$4119: { $auto$opt_reduce.cc:134:opt_pmux$5531 $flatten\DUT.\Brain.$procmux$2249_CMP $flatten\DUT.\Brain.$procmux$2235_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3468: { $flatten\DUT.\Brain.$procmux$3223_CTRL $auto$opt_reduce.cc:134:opt_pmux$5533 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2822: { $flatten\DUT.\Brain.$procmux$2252_CMP $flatten\DUT.\Brain.$procmux$3223_CTRL $auto$opt_reduce.cc:134:opt_pmux$5535 $flatten\DUT.\Brain.$procmux$2235_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3220: { $auto$opt_reduce.cc:134:opt_pmux$5537 $flatten\DUT.\Brain.$procmux$2235_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2561: $auto$opt_reduce.cc:134:opt_pmux$5539
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3519: { $flatten\DUT.\Brain.$procmux$3522_CTRL $auto$opt_reduce.cc:134:opt_pmux$5541 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3172: { $flatten\DUT.\Brain.$procmux$3223_CTRL $auto$opt_reduce.cc:134:opt_pmux$5543 $flatten\DUT.\Brain.$procmux$2235_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2874: $auto$opt_reduce.cc:134:opt_pmux$5545
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$4171: $auto$opt_reduce.cc:134:opt_pmux$5547
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3480: { $flatten\DUT.\Brain.$procmux$2249_CMP $auto$opt_reduce.cc:134:opt_pmux$5549 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3735: { $auto$opt_reduce.cc:134:opt_pmux$5551 $flatten\DUT.\Brain.$procmux$2235_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2630: { $flatten\DUT.\Brain.$procmux$2252_CMP $auto$opt_reduce.cc:134:opt_pmux$5553 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3183: { $flatten\DUT.\Brain.$procmux$3223_CTRL $auto$opt_reduce.cc:134:opt_pmux$5555 }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$1881:
      Old ports: A=14'00000000000000, B=14'11111111111111, Y=$flatten\DUT.\Stack.$procmux$1881_Y
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\Stack.$procmux$1881_Y [0]
      New connections: $flatten\DUT.\Stack.$procmux$1881_Y [13:1] = { $flatten\DUT.\Stack.$procmux$1881_Y [0] $flatten\DUT.\Stack.$procmux$1881_Y [0] $flatten\DUT.\Stack.$procmux$1881_Y [0] $flatten\DUT.\Stack.$procmux$1881_Y [0] $flatten\DUT.\Stack.$procmux$1881_Y [0] $flatten\DUT.\Stack.$procmux$1881_Y [0] $flatten\DUT.\Stack.$procmux$1881_Y [0] $flatten\DUT.\Stack.$procmux$1881_Y [0] $flatten\DUT.\Stack.$procmux$1881_Y [0] $flatten\DUT.\Stack.$procmux$1881_Y [0] $flatten\DUT.\Stack.$procmux$1881_Y [0] $flatten\DUT.\Stack.$procmux$1881_Y [0] $flatten\DUT.\Stack.$procmux$1881_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$1929:
      Old ports: A=14'00000000000000, B=14'11111100000000, Y=$flatten\DUT.\Stack.$procmux$1929_Y
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\Stack.$procmux$1929_Y [8]
      New connections: { $flatten\DUT.\Stack.$procmux$1929_Y [13:9] $flatten\DUT.\Stack.$procmux$1929_Y [7:0] } = { $flatten\DUT.\Stack.$procmux$1929_Y [8] $flatten\DUT.\Stack.$procmux$1929_Y [8] $flatten\DUT.\Stack.$procmux$1929_Y [8] $flatten\DUT.\Stack.$procmux$1929_Y [8] $flatten\DUT.\Stack.$procmux$1929_Y [8] 8'00000000 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2306: { $flatten\DUT.\Brain.$procmux$3215_CTRL $flatten\DUT.\Brain.$procmux$2252_CMP $flatten\DUT.\Brain.$procmux$3223_CTRL $auto$opt_reduce.cc:134:opt_pmux$5557 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2801: { $flatten\DUT.\Brain.$procmux$3215_CTRL $flatten\DUT.\Brain.$procmux$2252_CMP $auto$opt_reduce.cc:134:opt_pmux$5559 }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$1992:
      Old ports: A=14'00000000000000, B=14'00000011111111, Y=$flatten\DUT.\Stack.$procmux$1992_Y
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\Stack.$procmux$1992_Y [0]
      New connections: $flatten\DUT.\Stack.$procmux$1992_Y [13:1] = { 6'000000 $flatten\DUT.\Stack.$procmux$1992_Y [0] $flatten\DUT.\Stack.$procmux$1992_Y [0] $flatten\DUT.\Stack.$procmux$1992_Y [0] $flatten\DUT.\Stack.$procmux$1992_Y [0] $flatten\DUT.\Stack.$procmux$1992_Y [0] $flatten\DUT.\Stack.$procmux$1992_Y [0] $flatten\DUT.\Stack.$procmux$1992_Y [0] }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3923: { $flatten\DUT.\Brain.$procmux$3223_CTRL $auto$opt_reduce.cc:134:opt_pmux$5561 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3360: $auto$opt_reduce.cc:134:opt_pmux$5563
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$2052:
      Old ports: A=14'00000000000000, B=14'11111111111111, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2712$1652_EN[13:0]$1666
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2712$1652_EN[13:0]$1666 [0]
      New connections: $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2712$1652_EN[13:0]$1666 [13:1] = { $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2712$1652_EN[13:0]$1666 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2712$1652_EN[13:0]$1666 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2712$1652_EN[13:0]$1666 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2712$1652_EN[13:0]$1666 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2712$1652_EN[13:0]$1666 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2712$1652_EN[13:0]$1666 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2712$1652_EN[13:0]$1666 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2712$1652_EN[13:0]$1666 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2712$1652_EN[13:0]$1666 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2712$1652_EN[13:0]$1666 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2712$1652_EN[13:0]$1666 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2712$1652_EN[13:0]$1666 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2712$1652_EN[13:0]$1666 [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$2055:
      Old ports: A=14'00000000000000, B=14'11111111111111, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2711$1651_EN[13:0]$1665
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2711$1651_EN[13:0]$1665 [0]
      New connections: $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2711$1651_EN[13:0]$1665 [13:1] = { $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2711$1651_EN[13:0]$1665 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2711$1651_EN[13:0]$1665 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2711$1651_EN[13:0]$1665 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2711$1651_EN[13:0]$1665 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2711$1651_EN[13:0]$1665 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2711$1651_EN[13:0]$1665 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2711$1651_EN[13:0]$1665 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2711$1651_EN[13:0]$1665 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2711$1651_EN[13:0]$1665 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2711$1651_EN[13:0]$1665 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2711$1651_EN[13:0]$1665 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2711$1651_EN[13:0]$1665 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2711$1651_EN[13:0]$1665 [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$2058:
      Old ports: A=14'00000000000000, B=14'11111111111111, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2710$1650_EN[13:0]$1664
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2710$1650_EN[13:0]$1664 [0]
      New connections: $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2710$1650_EN[13:0]$1664 [13:1] = { $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2710$1650_EN[13:0]$1664 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2710$1650_EN[13:0]$1664 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2710$1650_EN[13:0]$1664 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2710$1650_EN[13:0]$1664 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2710$1650_EN[13:0]$1664 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2710$1650_EN[13:0]$1664 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2710$1650_EN[13:0]$1664 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2710$1650_EN[13:0]$1664 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2710$1650_EN[13:0]$1664 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2710$1650_EN[13:0]$1664 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2710$1650_EN[13:0]$1664 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2710$1650_EN[13:0]$1664 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2710$1650_EN[13:0]$1664 [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$2061:
      Old ports: A=14'00000000000000, B=14'11111111111111, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2709$1649_EN[13:0]$1663
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2709$1649_EN[13:0]$1663 [0]
      New connections: $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2709$1649_EN[13:0]$1663 [13:1] = { $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2709$1649_EN[13:0]$1663 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2709$1649_EN[13:0]$1663 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2709$1649_EN[13:0]$1663 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2709$1649_EN[13:0]$1663 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2709$1649_EN[13:0]$1663 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2709$1649_EN[13:0]$1663 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2709$1649_EN[13:0]$1663 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2709$1649_EN[13:0]$1663 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2709$1649_EN[13:0]$1663 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2709$1649_EN[13:0]$1663 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2709$1649_EN[13:0]$1663 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2709$1649_EN[13:0]$1663 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2709$1649_EN[13:0]$1663 [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$2064:
      Old ports: A=14'00000000000000, B=14'11111111111111, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2708$1648_EN[13:0]$1662
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2708$1648_EN[13:0]$1662 [0]
      New connections: $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2708$1648_EN[13:0]$1662 [13:1] = { $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2708$1648_EN[13:0]$1662 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2708$1648_EN[13:0]$1662 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2708$1648_EN[13:0]$1662 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2708$1648_EN[13:0]$1662 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2708$1648_EN[13:0]$1662 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2708$1648_EN[13:0]$1662 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2708$1648_EN[13:0]$1662 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2708$1648_EN[13:0]$1662 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2708$1648_EN[13:0]$1662 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2708$1648_EN[13:0]$1662 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2708$1648_EN[13:0]$1662 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2708$1648_EN[13:0]$1662 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2708$1648_EN[13:0]$1662 [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$2067:
      Old ports: A=14'00000000000000, B=14'11111111111111, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2707$1647_EN[13:0]$1661
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2707$1647_EN[13:0]$1661 [0]
      New connections: $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2707$1647_EN[13:0]$1661 [13:1] = { $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2707$1647_EN[13:0]$1661 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2707$1647_EN[13:0]$1661 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2707$1647_EN[13:0]$1661 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2707$1647_EN[13:0]$1661 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2707$1647_EN[13:0]$1661 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2707$1647_EN[13:0]$1661 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2707$1647_EN[13:0]$1661 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2707$1647_EN[13:0]$1661 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2707$1647_EN[13:0]$1661 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2707$1647_EN[13:0]$1661 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2707$1647_EN[13:0]$1661 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2707$1647_EN[13:0]$1661 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2707$1647_EN[13:0]$1661 [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$2070:
      Old ports: A=14'00000000000000, B=14'11111111111111, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2706$1646_EN[13:0]$1660
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2706$1646_EN[13:0]$1660 [0]
      New connections: $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2706$1646_EN[13:0]$1660 [13:1] = { $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2706$1646_EN[13:0]$1660 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2706$1646_EN[13:0]$1660 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2706$1646_EN[13:0]$1660 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2706$1646_EN[13:0]$1660 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2706$1646_EN[13:0]$1660 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2706$1646_EN[13:0]$1660 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2706$1646_EN[13:0]$1660 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2706$1646_EN[13:0]$1660 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2706$1646_EN[13:0]$1660 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2706$1646_EN[13:0]$1660 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2706$1646_EN[13:0]$1660 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2706$1646_EN[13:0]$1660 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2706$1646_EN[13:0]$1660 [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$2073:
      Old ports: A=14'00000000000000, B=14'11111111111111, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2705$1645_EN[13:0]$1659
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2705$1645_EN[13:0]$1659 [0]
      New connections: $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2705$1645_EN[13:0]$1659 [13:1] = { $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2705$1645_EN[13:0]$1659 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2705$1645_EN[13:0]$1659 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2705$1645_EN[13:0]$1659 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2705$1645_EN[13:0]$1659 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2705$1645_EN[13:0]$1659 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2705$1645_EN[13:0]$1659 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2705$1645_EN[13:0]$1659 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2705$1645_EN[13:0]$1659 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2705$1645_EN[13:0]$1659 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2705$1645_EN[13:0]$1659 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2705$1645_EN[13:0]$1659 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2705$1645_EN[13:0]$1659 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2705$1645_EN[13:0]$1659 [0] }
    New ctrl vector for $pmux cell $flatten\DUT.\Unit.$procmux$4189: { $flatten\DUT.\Unit.$procmux$4197_CMP $flatten\DUT.\Unit.$procmux$4196_CMP $flatten\DUT.\Unit.$procmux$4194_CMP $auto$opt_reduce.cc:134:opt_pmux$5567 $auto$opt_reduce.cc:134:opt_pmux$5565 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3036: $auto$opt_reduce.cc:134:opt_pmux$5569
    New ctrl vector for $pmux cell $flatten\DUT.\Unit.$procmux$4201: { $flatten\DUT.\Unit.$procmux$4196_CMP $flatten\DUT.\Unit.$procmux$4195_CMP $flatten\DUT.\Unit.$procmux$4194_CMP $flatten\DUT.\Unit.$procmux$4193_CMP $flatten\DUT.\Unit.$procmux$4192_CMP $flatten\DUT.\Unit.$procmux$4191_CMP $flatten\DUT.\Unit.$eq$i8008_core.v:2216$1021_Y }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2640: { $flatten\DUT.\Brain.$procmux$3215_CTRL $flatten\DUT.\Brain.$procmux$2252_CMP $auto$opt_reduce.cc:134:opt_pmux$5571 }
    New ctrl vector for $pmux cell $flatten\DUT.\Unit.$procmux$4213: { $auto$opt_reduce.cc:134:opt_pmux$5573 $flatten\DUT.\Unit.$eq$i8008_core.v:2216$1021_Y }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3935: { $auto$opt_reduce.cc:134:opt_pmux$5575 $flatten\DUT.\Brain.$procmux$2235_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Unit.$procmux$4238: { $auto$opt_reduce.cc:134:opt_pmux$5579 $auto$opt_reduce.cc:134:opt_pmux$5577 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2436: { $flatten\DUT.\Brain.$procmux$2249_CMP $auto$opt_reduce.cc:134:opt_pmux$5581 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3209: { $flatten\DUT.\Brain.$procmux$2249_CMP $auto$opt_reduce.cc:134:opt_pmux$5583 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2925: $auto$opt_reduce.cc:134:opt_pmux$5585
    Consolidated identical input bits for $mux cell $flatten\DUT.\rf.$procmux$1822:
      Old ports: A=8'00000000, B=8'11111111, Y=$flatten\DUT.\rf.$procmux$1822_Y
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\rf.$procmux$1822_Y [0]
      New connections: $flatten\DUT.\rf.$procmux$1822_Y [7:1] = { $flatten\DUT.\rf.$procmux$1822_Y [0] $flatten\DUT.\rf.$procmux$1822_Y [0] $flatten\DUT.\rf.$procmux$1822_Y [0] $flatten\DUT.\rf.$procmux$1822_Y [0] $flatten\DUT.\rf.$procmux$1822_Y [0] $flatten\DUT.\rf.$procmux$1822_Y [0] $flatten\DUT.\rf.$procmux$1822_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\rf.$procmux$1840:
      Old ports: A=8'00000000, B=8'11111111, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2669$1736_EN[7:0]$1746
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2669$1736_EN[7:0]$1746 [0]
      New connections: $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2669$1736_EN[7:0]$1746 [7:1] = { $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2669$1736_EN[7:0]$1746 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2669$1736_EN[7:0]$1746 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2669$1736_EN[7:0]$1746 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2669$1736_EN[7:0]$1746 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2669$1736_EN[7:0]$1746 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2669$1736_EN[7:0]$1746 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2669$1736_EN[7:0]$1746 [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\rf.$procmux$1843:
      Old ports: A=8'00000000, B=8'11111111, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2668$1735_EN[7:0]$1745
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2668$1735_EN[7:0]$1745 [0]
      New connections: $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2668$1735_EN[7:0]$1745 [7:1] = { $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2668$1735_EN[7:0]$1745 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2668$1735_EN[7:0]$1745 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2668$1735_EN[7:0]$1745 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2668$1735_EN[7:0]$1745 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2668$1735_EN[7:0]$1745 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2668$1735_EN[7:0]$1745 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2668$1735_EN[7:0]$1745 [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\rf.$procmux$1846:
      Old ports: A=8'00000000, B=8'11111111, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2667$1734_EN[7:0]$1744
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2667$1734_EN[7:0]$1744 [0]
      New connections: $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2667$1734_EN[7:0]$1744 [7:1] = { $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2667$1734_EN[7:0]$1744 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2667$1734_EN[7:0]$1744 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2667$1734_EN[7:0]$1744 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2667$1734_EN[7:0]$1744 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2667$1734_EN[7:0]$1744 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2667$1734_EN[7:0]$1744 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2667$1734_EN[7:0]$1744 [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\rf.$procmux$1849:
      Old ports: A=8'00000000, B=8'11111111, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2666$1733_EN[7:0]$1743
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2666$1733_EN[7:0]$1743 [0]
      New connections: $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2666$1733_EN[7:0]$1743 [7:1] = { $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2666$1733_EN[7:0]$1743 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2666$1733_EN[7:0]$1743 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2666$1733_EN[7:0]$1743 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2666$1733_EN[7:0]$1743 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2666$1733_EN[7:0]$1743 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2666$1733_EN[7:0]$1743 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2666$1733_EN[7:0]$1743 [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\rf.$procmux$1852:
      Old ports: A=8'00000000, B=8'11111111, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2665$1732_EN[7:0]$1742
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2665$1732_EN[7:0]$1742 [0]
      New connections: $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2665$1732_EN[7:0]$1742 [7:1] = { $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2665$1732_EN[7:0]$1742 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2665$1732_EN[7:0]$1742 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2665$1732_EN[7:0]$1742 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2665$1732_EN[7:0]$1742 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2665$1732_EN[7:0]$1742 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2665$1732_EN[7:0]$1742 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2665$1732_EN[7:0]$1742 [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\rf.$procmux$1855:
      Old ports: A=8'00000000, B=8'11111111, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2664$1731_EN[7:0]$1741
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2664$1731_EN[7:0]$1741 [0]
      New connections: $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2664$1731_EN[7:0]$1741 [7:1] = { $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2664$1731_EN[7:0]$1741 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2664$1731_EN[7:0]$1741 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2664$1731_EN[7:0]$1741 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2664$1731_EN[7:0]$1741 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2664$1731_EN[7:0]$1741 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2664$1731_EN[7:0]$1741 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2664$1731_EN[7:0]$1741 [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\rf.$procmux$1858:
      Old ports: A=8'00000000, B=8'11111111, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2663$1730_EN[7:0]$1740
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2663$1730_EN[7:0]$1740 [0]
      New connections: $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2663$1730_EN[7:0]$1740 [7:1] = { $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2663$1730_EN[7:0]$1740 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2663$1730_EN[7:0]$1740 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2663$1730_EN[7:0]$1740 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2663$1730_EN[7:0]$1740 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2663$1730_EN[7:0]$1740 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2663$1730_EN[7:0]$1740 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2663$1730_EN[7:0]$1740 [0] }
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4274:
      Old ports: A=36'000000000000000000000000000000000000, B=36'100000000000000000000000000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1034$91_EN[35:0]$418
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1034$91_EN[35:0]$418 [35]
      New connections: $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1034$91_EN[35:0]$418 [34:0] = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4283:
      Old ports: A=36'000000000000000000000000000000000000, B=36'010000000000000000000000000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1032$90_EN[35:0]$415
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1032$90_EN[35:0]$415 [34]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1032$90_EN[35:0]$415 [35] $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1032$90_EN[35:0]$415 [33:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4292:
      Old ports: A=36'000000000000000000000000000000000000, B=36'001000000000000000000000000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1030$89_EN[35:0]$412
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1030$89_EN[35:0]$412 [33]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1030$89_EN[35:0]$412 [35:34] $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1030$89_EN[35:0]$412 [32:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4301:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000100000000000000000000000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1028$88_EN[35:0]$409
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1028$88_EN[35:0]$409 [32]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1028$88_EN[35:0]$409 [35:33] $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1028$88_EN[35:0]$409 [31:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4310:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000010000000000000000000000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1026$87_EN[35:0]$406
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1026$87_EN[35:0]$406 [31]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1026$87_EN[35:0]$406 [35:32] $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1026$87_EN[35:0]$406 [30:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4319:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000001000000000000000000000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1024$86_EN[35:0]$403
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1024$86_EN[35:0]$403 [30]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1024$86_EN[35:0]$403 [35:31] $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1024$86_EN[35:0]$403 [29:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4328:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000100000000000000000000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1022$85_EN[35:0]$400
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1022$85_EN[35:0]$400 [29]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1022$85_EN[35:0]$400 [35:30] $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1022$85_EN[35:0]$400 [28:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4337:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000010000000000000000000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1020$84_EN[35:0]$397
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1020$84_EN[35:0]$397 [28]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1020$84_EN[35:0]$397 [35:29] $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1020$84_EN[35:0]$397 [27:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4346:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000001000000000000000000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1018$83_EN[35:0]$394
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1018$83_EN[35:0]$394 [27]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1018$83_EN[35:0]$394 [35:28] $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1018$83_EN[35:0]$394 [26:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4355:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000100000000000000000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1016$82_EN[35:0]$391
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1016$82_EN[35:0]$391 [26]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1016$82_EN[35:0]$391 [35:27] $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1016$82_EN[35:0]$391 [25:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4364:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000010000000000000000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1014$81_EN[35:0]$388
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1014$81_EN[35:0]$388 [25]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1014$81_EN[35:0]$388 [35:26] $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1014$81_EN[35:0]$388 [24:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4373:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000001000000000000000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1012$80_EN[35:0]$385
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1012$80_EN[35:0]$385 [24]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1012$80_EN[35:0]$385 [35:25] $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1012$80_EN[35:0]$385 [23:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4382:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000100000000000000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1010$79_EN[35:0]$382
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1010$79_EN[35:0]$382 [23]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1010$79_EN[35:0]$382 [35:24] $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1010$79_EN[35:0]$382 [22:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4391:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000010000000000000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1008$78_EN[35:0]$379
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1008$78_EN[35:0]$379 [22]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1008$78_EN[35:0]$379 [35:23] $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1008$78_EN[35:0]$379 [21:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4400:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000001000000000000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1006$77_EN[35:0]$376
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1006$77_EN[35:0]$376 [21]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1006$77_EN[35:0]$376 [35:22] $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1006$77_EN[35:0]$376 [20:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4409:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000000100000000000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1004$76_EN[35:0]$373
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1004$76_EN[35:0]$373 [20]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1004$76_EN[35:0]$373 [35:21] $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1004$76_EN[35:0]$373 [19:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4418:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000000010000000000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1002$75_EN[35:0]$370
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1002$75_EN[35:0]$370 [19]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1002$75_EN[35:0]$370 [35:20] $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1002$75_EN[35:0]$370 [18:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4427:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000000001000000000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1000$74_EN[35:0]$367
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1000$74_EN[35:0]$367 [18]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1000$74_EN[35:0]$367 [35:19] $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1000$74_EN[35:0]$367 [17:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4436:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000000000100000000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:998$73_EN[35:0]$364
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:998$73_EN[35:0]$364 [17]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:998$73_EN[35:0]$364 [35:18] $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:998$73_EN[35:0]$364 [16:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4445:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000000000010000000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:996$72_EN[35:0]$361
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:996$72_EN[35:0]$361 [16]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:996$72_EN[35:0]$361 [35:17] $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:996$72_EN[35:0]$361 [15:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4454:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000000000001000000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:994$71_EN[35:0]$358
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:994$71_EN[35:0]$358 [15]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:994$71_EN[35:0]$358 [35:16] $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:994$71_EN[35:0]$358 [14:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4463:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000000000000100000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:992$70_EN[35:0]$355
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:992$70_EN[35:0]$355 [14]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:992$70_EN[35:0]$355 [35:15] $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:992$70_EN[35:0]$355 [13:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4472:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000000000000010000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:990$69_EN[35:0]$352
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:990$69_EN[35:0]$352 [13]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:990$69_EN[35:0]$352 [35:14] $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:990$69_EN[35:0]$352 [12:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4481:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000000000000001000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:988$68_EN[35:0]$349
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:988$68_EN[35:0]$349 [12]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:988$68_EN[35:0]$349 [35:13] $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:988$68_EN[35:0]$349 [11:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4490:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000000000000000100000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:986$67_EN[35:0]$346
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:986$67_EN[35:0]$346 [11]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:986$67_EN[35:0]$346 [35:12] $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:986$67_EN[35:0]$346 [10:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4499:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000000000000000010000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:984$66_EN[35:0]$343
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:984$66_EN[35:0]$343 [10]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:984$66_EN[35:0]$343 [35:11] $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:984$66_EN[35:0]$343 [9:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4508:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000000000000000001000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:982$65_EN[35:0]$340
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:982$65_EN[35:0]$340 [9]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:982$65_EN[35:0]$340 [35:10] $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:982$65_EN[35:0]$340 [8:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4517:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000000000000000000100000000, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:980$64_EN[35:0]$337
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:980$64_EN[35:0]$337 [8]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:980$64_EN[35:0]$337 [35:9] $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:980$64_EN[35:0]$337 [7:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4526:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000000000000000000010000000, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:978$63_EN[35:0]$334
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:978$63_EN[35:0]$334 [7]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:978$63_EN[35:0]$334 [35:8] $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:978$63_EN[35:0]$334 [6:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4535:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000000000000000000001000000, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:976$62_EN[35:0]$331
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:976$62_EN[35:0]$331 [6]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:976$62_EN[35:0]$331 [35:7] $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:976$62_EN[35:0]$331 [5:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4544:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000000000000000000000100000, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:974$61_EN[35:0]$328
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:974$61_EN[35:0]$328 [5]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:974$61_EN[35:0]$328 [35:6] $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:974$61_EN[35:0]$328 [4:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4553:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000000000000000000000010000, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:972$60_EN[35:0]$325
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:972$60_EN[35:0]$325 [4]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:972$60_EN[35:0]$325 [35:5] $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:972$60_EN[35:0]$325 [3:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4562:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000000000000000000000001000, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:970$59_EN[35:0]$322
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:970$59_EN[35:0]$322 [3]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:970$59_EN[35:0]$322 [35:4] $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:970$59_EN[35:0]$322 [2:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4571:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000000000000000000000000100, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:968$58_EN[35:0]$319
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:968$58_EN[35:0]$319 [2]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:968$58_EN[35:0]$319 [35:3] $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:968$58_EN[35:0]$319 [1:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4580:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000000000000000000000000010, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:966$57_EN[35:0]$316
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:966$57_EN[35:0]$316 [1]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:966$57_EN[35:0]$316 [35:2] $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:966$57_EN[35:0]$316 [0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4589:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000000000000000000000000001, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:964$56_EN[35:0]$313
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:964$56_EN[35:0]$313 [0]
      New connections: $flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:964$56_EN[35:0]$313 [35:1] = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4598:
      Old ports: A=36'000000000000000000000000000000000000, B=36'100000000000000000000000000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:958$55_EN[35:0]$200
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:958$55_EN[35:0]$200 [35]
      New connections: $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:958$55_EN[35:0]$200 [34:0] = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4607:
      Old ports: A=36'000000000000000000000000000000000000, B=36'010000000000000000000000000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:956$54_EN[35:0]$197
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:956$54_EN[35:0]$197 [34]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:956$54_EN[35:0]$197 [35] $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:956$54_EN[35:0]$197 [33:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4616:
      Old ports: A=36'000000000000000000000000000000000000, B=36'001000000000000000000000000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:954$53_EN[35:0]$194
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:954$53_EN[35:0]$194 [33]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:954$53_EN[35:0]$194 [35:34] $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:954$53_EN[35:0]$194 [32:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4625:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000100000000000000000000000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:952$52_EN[35:0]$191
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:952$52_EN[35:0]$191 [32]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:952$52_EN[35:0]$191 [35:33] $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:952$52_EN[35:0]$191 [31:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4634:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000010000000000000000000000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:950$51_EN[35:0]$188
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:950$51_EN[35:0]$188 [31]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:950$51_EN[35:0]$188 [35:32] $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:950$51_EN[35:0]$188 [30:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4643:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000001000000000000000000000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:948$50_EN[35:0]$185
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:948$50_EN[35:0]$185 [30]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:948$50_EN[35:0]$185 [35:31] $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:948$50_EN[35:0]$185 [29:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4652:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000100000000000000000000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:946$49_EN[35:0]$182
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:946$49_EN[35:0]$182 [29]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:946$49_EN[35:0]$182 [35:30] $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:946$49_EN[35:0]$182 [28:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4661:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000010000000000000000000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:944$48_EN[35:0]$179
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:944$48_EN[35:0]$179 [28]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:944$48_EN[35:0]$179 [35:29] $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:944$48_EN[35:0]$179 [27:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4670:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000001000000000000000000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:942$47_EN[35:0]$176
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:942$47_EN[35:0]$176 [27]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:942$47_EN[35:0]$176 [35:28] $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:942$47_EN[35:0]$176 [26:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4679:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000100000000000000000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:940$46_EN[35:0]$173
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:940$46_EN[35:0]$173 [26]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:940$46_EN[35:0]$173 [35:27] $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:940$46_EN[35:0]$173 [25:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4688:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000010000000000000000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:938$45_EN[35:0]$170
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:938$45_EN[35:0]$170 [25]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:938$45_EN[35:0]$170 [35:26] $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:938$45_EN[35:0]$170 [24:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4697:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000001000000000000000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:936$44_EN[35:0]$167
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:936$44_EN[35:0]$167 [24]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:936$44_EN[35:0]$167 [35:25] $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:936$44_EN[35:0]$167 [23:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4706:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000100000000000000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:934$43_EN[35:0]$164
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:934$43_EN[35:0]$164 [23]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:934$43_EN[35:0]$164 [35:24] $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:934$43_EN[35:0]$164 [22:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4715:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000010000000000000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:932$42_EN[35:0]$161
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:932$42_EN[35:0]$161 [22]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:932$42_EN[35:0]$161 [35:23] $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:932$42_EN[35:0]$161 [21:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4724:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000001000000000000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:930$41_EN[35:0]$158
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:930$41_EN[35:0]$158 [21]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:930$41_EN[35:0]$158 [35:22] $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:930$41_EN[35:0]$158 [20:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4733:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000000100000000000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:928$40_EN[35:0]$155
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:928$40_EN[35:0]$155 [20]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:928$40_EN[35:0]$155 [35:21] $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:928$40_EN[35:0]$155 [19:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4742:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000000010000000000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:926$39_EN[35:0]$152
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:926$39_EN[35:0]$152 [19]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:926$39_EN[35:0]$152 [35:20] $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:926$39_EN[35:0]$152 [18:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4751:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000000001000000000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:924$38_EN[35:0]$149
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:924$38_EN[35:0]$149 [18]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:924$38_EN[35:0]$149 [35:19] $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:924$38_EN[35:0]$149 [17:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4760:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000000000100000000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:922$37_EN[35:0]$146
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:922$37_EN[35:0]$146 [17]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:922$37_EN[35:0]$146 [35:18] $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:922$37_EN[35:0]$146 [16:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4769:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000000000010000000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:920$36_EN[35:0]$143
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:920$36_EN[35:0]$143 [16]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:920$36_EN[35:0]$143 [35:17] $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:920$36_EN[35:0]$143 [15:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4778:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000000000001000000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:918$35_EN[35:0]$140
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:918$35_EN[35:0]$140 [15]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:918$35_EN[35:0]$140 [35:16] $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:918$35_EN[35:0]$140 [14:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4787:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000000000000100000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:916$34_EN[35:0]$137
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:916$34_EN[35:0]$137 [14]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:916$34_EN[35:0]$137 [35:15] $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:916$34_EN[35:0]$137 [13:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4796:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000000000000010000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:914$33_EN[35:0]$134
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:914$33_EN[35:0]$134 [13]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:914$33_EN[35:0]$134 [35:14] $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:914$33_EN[35:0]$134 [12:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4805:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000000000000001000000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:912$32_EN[35:0]$131
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:912$32_EN[35:0]$131 [12]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:912$32_EN[35:0]$131 [35:13] $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:912$32_EN[35:0]$131 [11:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4814:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000000000000000100000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:910$31_EN[35:0]$128
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:910$31_EN[35:0]$128 [11]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:910$31_EN[35:0]$128 [35:12] $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:910$31_EN[35:0]$128 [10:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4823:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000000000000000010000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:908$30_EN[35:0]$125
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:908$30_EN[35:0]$125 [10]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:908$30_EN[35:0]$125 [35:11] $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:908$30_EN[35:0]$125 [9:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4832:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000000000000000001000000000, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:906$29_EN[35:0]$122
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:906$29_EN[35:0]$122 [9]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:906$29_EN[35:0]$122 [35:10] $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:906$29_EN[35:0]$122 [8:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4841:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000000000000000000100000000, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:904$28_EN[35:0]$119
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:904$28_EN[35:0]$119 [8]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:904$28_EN[35:0]$119 [35:9] $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:904$28_EN[35:0]$119 [7:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4850:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000000000000000000010000000, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:902$27_EN[35:0]$116
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:902$27_EN[35:0]$116 [7]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:902$27_EN[35:0]$116 [35:8] $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:902$27_EN[35:0]$116 [6:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4859:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000000000000000000001000000, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:900$26_EN[35:0]$113
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:900$26_EN[35:0]$113 [6]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:900$26_EN[35:0]$113 [35:7] $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:900$26_EN[35:0]$113 [5:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4868:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000000000000000000000100000, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:898$25_EN[35:0]$110
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:898$25_EN[35:0]$110 [5]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:898$25_EN[35:0]$110 [35:6] $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:898$25_EN[35:0]$110 [4:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4877:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000000000000000000000010000, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:896$24_EN[35:0]$107
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:896$24_EN[35:0]$107 [4]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:896$24_EN[35:0]$107 [35:5] $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:896$24_EN[35:0]$107 [3:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4886:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000000000000000000000001000, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:894$23_EN[35:0]$104
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:894$23_EN[35:0]$104 [3]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:894$23_EN[35:0]$104 [35:4] $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:894$23_EN[35:0]$104 [2:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4895:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000000000000000000000000100, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:892$22_EN[35:0]$101
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:892$22_EN[35:0]$101 [2]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:892$22_EN[35:0]$101 [35:3] $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:892$22_EN[35:0]$101 [1:0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4904:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000000000000000000000000010, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:890$21_EN[35:0]$98
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:890$21_EN[35:0]$98 [1]
      New connections: { $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:890$21_EN[35:0]$98 [35:2] $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:890$21_EN[35:0]$98 [0] } = 35'00000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$procmux$4913:
      Old ports: A=36'000000000000000000000000000000000000, B=36'000000000000000000000000000000000001, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:888$20_EN[35:0]$95
      New ports: A=1'0, B=1'1, Y=$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:888$20_EN[35:0]$95 [0]
      New connections: $flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:888$20_EN[35:0]$95 [35:1] = 35'00000000000000000000000000000000000
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3947: { $flatten\DUT.\Brain.$procmux$3223_CTRL $flatten\DUT.\Brain.$procmux$2249_CMP $auto$opt_reduce.cc:134:opt_pmux$5587 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5580: { $flatten\DUT.$eq$i8008_core.v:2076$1624_Y $flatten\DUT.$eq$i8008_core.v:2076$1625_Y $flatten\DUT.\Brain.$procmux$2252_CMP $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2250_CMP $flatten\DUT.\Brain.$procmux$2235_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5582: { $flatten\DUT.$eq$i8008_core.v:2076$1624_Y $flatten\DUT.$eq$i8008_core.v:2076$1625_Y $flatten\DUT.\Brain.$procmux$2252_CMP $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2250_CMP $flatten\DUT.\Brain.$procmux$2235_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5584: { $flatten\DUT.\Brain.$procmux$2876_CMP [0] $flatten\DUT.\Brain.$procmux$2754_CMP $flatten\DUT.\Brain.$procmux$2744_CMP $flatten\DUT.\Brain.$procmux$2331_CMP $flatten\DUT.\Brain.$procmux$2233_CMP $flatten\DUT.\Brain.$eq$i8008_core.v:2350$1049_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5452: { $flatten\DUT.$eq$i8008_core.v:2076$1624_Y $flatten\DUT.$eq$i8008_core.v:2076$1625_Y $flatten\DUT.\Brain.$procmux$2252_CMP $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2250_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5456: { $flatten\DUT.$eq$i8008_core.v:2076$1624_Y $flatten\DUT.$eq$i8008_core.v:2076$1625_Y $flatten\DUT.\Brain.$procmux$2252_CMP $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2249_CMP $flatten\DUT.\Brain.$procmux$2235_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5458: { $flatten\DUT.$eq$i8008_core.v:2076$1624_Y $flatten\DUT.$eq$i8008_core.v:2076$1625_Y $flatten\DUT.\Brain.$procmux$2252_CMP $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2249_CMP $flatten\DUT.\Brain.$procmux$2235_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5460: { $flatten\DUT.$eq$i8008_core.v:2076$1624_Y $flatten\DUT.$eq$i8008_core.v:2076$1625_Y $flatten\DUT.\Brain.$procmux$2252_CMP $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2249_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5462: { $flatten\DUT.$eq$i8008_core.v:2076$1624_Y $flatten\DUT.$eq$i8008_core.v:2076$1625_Y $flatten\DUT.\Brain.$procmux$2252_CMP $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2235_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5464: $flatten\DUT.\Brain.$procmux$2233_CMP
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5466: { $flatten\DUT.\Brain.$procmux$2331_CMP $flatten\DUT.\Brain.$procmux$2233_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5468: { $flatten\DUT.$eq$i8008_core.v:2076$1624_Y $flatten\DUT.$eq$i8008_core.v:2076$1625_Y $flatten\DUT.\Brain.$procmux$2252_CMP $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2250_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5470: { $flatten\DUT.$eq$i8008_core.v:2076$1624_Y $flatten\DUT.$eq$i8008_core.v:2076$1625_Y $flatten\DUT.\Brain.$procmux$2252_CMP $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2249_CMP $flatten\DUT.\Brain.$procmux$2235_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5472: { $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2250_CMP $flatten\DUT.\Brain.$procmux$2235_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5474: { $flatten\DUT.$eq$i8008_core.v:2076$1624_Y $flatten\DUT.$eq$i8008_core.v:2076$1625_Y $flatten\DUT.\Brain.$procmux$2252_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5476: { $flatten\DUT.\Brain.$procmux$2252_CMP $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2250_CMP $flatten\DUT.\Brain.$procmux$2249_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5478: { $flatten\DUT.\Brain.$procmux$3351_CMP $flatten\DUT.\Brain.$procmux$3349_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5480: { $flatten\DUT.$eq$i8008_core.v:2076$1624_Y $flatten\DUT.$eq$i8008_core.v:2076$1625_Y $flatten\DUT.\Brain.$procmux$2252_CMP $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2250_CMP $flatten\DUT.\Brain.$procmux$2249_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5482: { $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2250_CMP $flatten\DUT.\Brain.$procmux$2249_CMP $flatten\DUT.\Brain.$procmux$2235_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5484: { $flatten\DUT.\Brain.$procmux$2252_CMP $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2250_CMP $flatten\DUT.\Brain.$procmux$2249_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5486: { $flatten\DUT.$eq$i8008_core.v:2076$1624_Y $flatten\DUT.$eq$i8008_core.v:2076$1625_Y $flatten\DUT.\Brain.$procmux$2252_CMP $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2250_CMP $flatten\DUT.\Brain.$procmux$2249_CMP $flatten\DUT.\Brain.$procmux$2235_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5488: { $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2250_CMP $flatten\DUT.\Brain.$procmux$2249_CMP $flatten\DUT.\Brain.$procmux$2235_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5490: { $flatten\DUT.$eq$i8008_core.v:2076$1624_Y $flatten\DUT.$eq$i8008_core.v:2076$1625_Y $flatten\DUT.\Brain.$procmux$2252_CMP $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2250_CMP $flatten\DUT.\Brain.$procmux$2249_CMP $flatten\DUT.\Brain.$procmux$2235_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5492: { $flatten\DUT.\Brain.$procmux$2252_CMP $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2250_CMP $flatten\DUT.\Brain.$procmux$2249_CMP $flatten\DUT.\Brain.$procmux$2235_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5494: { $flatten\DUT.$eq$i8008_core.v:2076$1624_Y $flatten\DUT.$eq$i8008_core.v:2076$1625_Y $flatten\DUT.\Brain.$procmux$2252_CMP $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2249_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5496: { $flatten\DUT.$eq$i8008_core.v:2076$1624_Y $flatten\DUT.$eq$i8008_core.v:2076$1625_Y $flatten\DUT.\Brain.$procmux$2252_CMP $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2250_CMP $flatten\DUT.\Brain.$procmux$2249_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5498: { $flatten\DUT.$eq$i8008_core.v:2076$1624_Y $flatten\DUT.$eq$i8008_core.v:2076$1625_Y $flatten\DUT.\Brain.$procmux$2252_CMP $flatten\DUT.\Brain.$procmux$2251_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5500: { $flatten\DUT.$eq$i8008_core.v:2076$1624_Y $flatten\DUT.$eq$i8008_core.v:2076$1625_Y $flatten\DUT.\Brain.$procmux$2252_CMP $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2249_CMP $flatten\DUT.\Brain.$procmux$2235_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5502: { $flatten\DUT.$eq$i8008_core.v:2076$1624_Y $flatten\DUT.$eq$i8008_core.v:2076$1625_Y $flatten\DUT.\Brain.$procmux$2252_CMP $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2250_CMP $flatten\DUT.\Brain.$procmux$2235_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5504: { $flatten\DUT.\Brain.$procmux$3351_CMP $flatten\DUT.\Brain.$procmux$3350_CMP $flatten\DUT.\Brain.$procmux$3349_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5506: { $flatten\DUT.$eq$i8008_core.v:2076$1624_Y $flatten\DUT.$eq$i8008_core.v:2076$1625_Y $flatten\DUT.\Brain.$procmux$2252_CMP $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2250_CMP $flatten\DUT.\Brain.$procmux$2235_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5508: { $flatten\DUT.\Brain.$procmux$2754_CMP $flatten\DUT.\Brain.$procmux$2744_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5510: { $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2250_CMP $flatten\DUT.\Brain.$procmux$2249_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5512: { $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2250_CMP $flatten\DUT.\Brain.$procmux$2249_CMP $flatten\DUT.\Brain.$procmux$2235_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5514: { $flatten\DUT.$eq$i8008_core.v:2076$1624_Y $flatten\DUT.$eq$i8008_core.v:2076$1625_Y $flatten\DUT.\Brain.$procmux$2252_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5516: { $flatten\DUT.$eq$i8008_core.v:2076$1624_Y $flatten\DUT.$eq$i8008_core.v:2076$1625_Y $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2250_CMP $flatten\DUT.\Brain.$procmux$2249_CMP $flatten\DUT.\Brain.$procmux$2235_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5518: { $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2250_CMP $flatten\DUT.\Brain.$procmux$2249_CMP $flatten\DUT.\Brain.$procmux$2235_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5520: { $flatten\DUT.$eq$i8008_core.v:2076$1624_Y $flatten\DUT.$eq$i8008_core.v:2076$1625_Y $flatten\DUT.\Brain.$procmux$2252_CMP $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2250_CMP $flatten\DUT.\Brain.$procmux$2235_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5522: { $flatten\DUT.$eq$i8008_core.v:2076$1624_Y $flatten\DUT.$eq$i8008_core.v:2076$1625_Y $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2250_CMP $flatten\DUT.\Brain.$procmux$2249_CMP $flatten\DUT.\Brain.$procmux$2235_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5524: { $flatten\DUT.$eq$i8008_core.v:2076$1624_Y $flatten\DUT.$eq$i8008_core.v:2076$1625_Y $flatten\DUT.\Brain.$procmux$2252_CMP $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2250_CMP $flatten\DUT.\Brain.$procmux$2249_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5526: { $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2250_CMP $flatten\DUT.\Brain.$procmux$2249_CMP $flatten\DUT.\Brain.$procmux$2235_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5528: { $flatten\DUT.\Brain.$procmux$3351_CMP $flatten\DUT.\Brain.$procmux$3350_CMP $flatten\DUT.\Brain.$procmux$3349_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5530: { $flatten\DUT.$eq$i8008_core.v:2076$1624_Y $flatten\DUT.$eq$i8008_core.v:2076$1625_Y $flatten\DUT.\Brain.$procmux$2252_CMP $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2250_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5532: { $flatten\DUT.$eq$i8008_core.v:2076$1624_Y $flatten\DUT.$eq$i8008_core.v:2076$1625_Y $flatten\DUT.\Brain.$procmux$2252_CMP $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2249_CMP $flatten\DUT.\Brain.$procmux$2235_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5534: { $flatten\DUT.$eq$i8008_core.v:2076$1624_Y $flatten\DUT.$eq$i8008_core.v:2076$1625_Y $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2249_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5536: { $flatten\DUT.$eq$i8008_core.v:2076$1624_Y $flatten\DUT.$eq$i8008_core.v:2076$1625_Y $flatten\DUT.\Brain.$procmux$2252_CMP $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2250_CMP $flatten\DUT.\Brain.$procmux$2249_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5538: { $flatten\DUT.\Brain.$procmux$2331_CMP $flatten\DUT.\Brain.$procmux$2233_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5540: { $flatten\DUT.\Brain.$procmux$3351_CMP $flatten\DUT.\Brain.$procmux$3349_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5542: { $flatten\DUT.$eq$i8008_core.v:2076$1624_Y $flatten\DUT.$eq$i8008_core.v:2076$1625_Y $flatten\DUT.\Brain.$procmux$2252_CMP $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2249_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5544: { $flatten\DUT.\Brain.$procmux$2876_CMP [0] $flatten\DUT.\Brain.$procmux$2331_CMP $flatten\DUT.\Brain.$procmux$2233_CMP $flatten\DUT.\Brain.$eq$i8008_core.v:2350$1049_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5546: { $flatten\DUT.\Brain.$procmux$3351_CMP $flatten\DUT.\Brain.$procmux$3350_CMP $flatten\DUT.\Brain.$procmux$3349_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5548: { $flatten\DUT.$eq$i8008_core.v:2076$1624_Y $flatten\DUT.$eq$i8008_core.v:2076$1625_Y $flatten\DUT.\Brain.$procmux$2252_CMP $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2250_CMP $flatten\DUT.\Brain.$procmux$2235_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5550: { $flatten\DUT.$eq$i8008_core.v:2076$1624_Y $flatten\DUT.$eq$i8008_core.v:2076$1625_Y $flatten\DUT.\Brain.$procmux$2252_CMP $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2250_CMP $flatten\DUT.\Brain.$procmux$2249_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5552: { $flatten\DUT.$eq$i8008_core.v:2076$1624_Y $flatten\DUT.$eq$i8008_core.v:2076$1625_Y $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2250_CMP $flatten\DUT.\Brain.$procmux$2249_CMP $flatten\DUT.\Brain.$procmux$2235_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5554: { $flatten\DUT.$eq$i8008_core.v:2076$1624_Y $flatten\DUT.$eq$i8008_core.v:2076$1625_Y $flatten\DUT.\Brain.$procmux$2252_CMP $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2249_CMP $flatten\DUT.\Brain.$procmux$2235_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5558: { $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2250_CMP $flatten\DUT.\Brain.$procmux$2249_CMP $flatten\DUT.\Brain.$procmux$2235_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5560: { $flatten\DUT.$eq$i8008_core.v:2076$1624_Y $flatten\DUT.$eq$i8008_core.v:2076$1625_Y $flatten\DUT.\Brain.$procmux$2252_CMP $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2249_CMP $flatten\DUT.\Brain.$procmux$2235_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5562: { $flatten\DUT.\Brain.$procmux$3351_CMP $flatten\DUT.\Brain.$procmux$3349_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5568: { $flatten\DUT.\Brain.$procmux$2876_CMP [0] $flatten\DUT.\Brain.$procmux$2754_CMP $flatten\DUT.\Brain.$procmux$2744_CMP $flatten\DUT.\Brain.$procmux$2331_CMP $flatten\DUT.\Brain.$procmux$2233_CMP $flatten\DUT.\Brain.$eq$i8008_core.v:2350$1049_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5570: { $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2250_CMP $flatten\DUT.\Brain.$procmux$2249_CMP $flatten\DUT.\Brain.$procmux$2235_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5574: { $flatten\DUT.$eq$i8008_core.v:2076$1624_Y $flatten\DUT.$eq$i8008_core.v:2076$1625_Y $flatten\DUT.\Brain.$procmux$2252_CMP $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2250_CMP $flatten\DUT.\Brain.$procmux$2249_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5586: { $flatten\DUT.$eq$i8008_core.v:2076$1624_Y $flatten\DUT.$eq$i8008_core.v:2076$1625_Y $flatten\DUT.\Brain.$procmux$2252_CMP $flatten\DUT.\Brain.$procmux$2251_CMP $flatten\DUT.\Brain.$procmux$2235_CMP }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$1956:
      Old ports: A=$flatten\DUT.\Stack.$4$memwr$\rf$i8008_core.v:2719$1656_EN[13:0]$1719, B=14'00000000000000, Y=$flatten\DUT.\Stack.$procmux$1956_Y
      New ports: A=$flatten\DUT.\Stack.$procmux$1881_Y [0], B=1'0, Y=$flatten\DUT.\Stack.$procmux$1956_Y [0]
      New connections: $flatten\DUT.\Stack.$procmux$1956_Y [13:1] = { $flatten\DUT.\Stack.$procmux$1956_Y [0] $flatten\DUT.\Stack.$procmux$1956_Y [0] $flatten\DUT.\Stack.$procmux$1956_Y [0] $flatten\DUT.\Stack.$procmux$1956_Y [0] $flatten\DUT.\Stack.$procmux$1956_Y [0] $flatten\DUT.\Stack.$procmux$1956_Y [0] $flatten\DUT.\Stack.$procmux$1956_Y [0] $flatten\DUT.\Stack.$procmux$1956_Y [0] $flatten\DUT.\Stack.$procmux$1956_Y [0] $flatten\DUT.\Stack.$procmux$1956_Y [0] $flatten\DUT.\Stack.$procmux$1956_Y [0] $flatten\DUT.\Stack.$procmux$1956_Y [0] $flatten\DUT.\Stack.$procmux$1956_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$2034:
      Old ports: A=$flatten\DUT.\Stack.$3$memwr$\rf$i8008_core.v:2717$1654_EN[13:0]$1711, B=14'00000000000000, Y=$flatten\DUT.\Stack.$procmux$2034_Y
      New ports: A=$flatten\DUT.\Stack.$procmux$1929_Y [8], B=1'0, Y=$flatten\DUT.\Stack.$procmux$2034_Y [8]
      New connections: { $flatten\DUT.\Stack.$procmux$2034_Y [13:9] $flatten\DUT.\Stack.$procmux$2034_Y [7:0] } = { $flatten\DUT.\Stack.$procmux$2034_Y [8] $flatten\DUT.\Stack.$procmux$2034_Y [8] $flatten\DUT.\Stack.$procmux$2034_Y [8] $flatten\DUT.\Stack.$procmux$2034_Y [8] $flatten\DUT.\Stack.$procmux$2034_Y [8] 8'00000000 }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$2097:
      Old ports: A=$flatten\DUT.\Stack.$2$memwr$\rf$i8008_core.v:2715$1653_EN[13:0]$1698, B=14'00000000000000, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2715$1653_EN[13:0]$1669
      New ports: A=$flatten\DUT.\Stack.$procmux$1992_Y [0], B=1'0, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2715$1653_EN[13:0]$1669 [0]
      New connections: $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2715$1653_EN[13:0]$1669 [13:1] = { 6'000000 $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2715$1653_EN[13:0]$1669 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2715$1653_EN[13:0]$1669 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2715$1653_EN[13:0]$1669 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2715$1653_EN[13:0]$1669 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2715$1653_EN[13:0]$1669 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2715$1653_EN[13:0]$1669 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2715$1653_EN[13:0]$1669 [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\rf.$procmux$1861:
      Old ports: A=$flatten\DUT.\rf.$2$memwr$\rf$i8008_core.v:2672$1737_EN[7:0]$1762, B=8'00000000, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2672$1737_EN[7:0]$1749
      New ports: A=$flatten\DUT.\rf.$procmux$1822_Y [0], B=1'0, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2672$1737_EN[7:0]$1749 [0]
      New connections: $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2672$1737_EN[7:0]$1749 [7:1] = { $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2672$1737_EN[7:0]$1749 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2672$1737_EN[7:0]$1749 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2672$1737_EN[7:0]$1749 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2672$1737_EN[7:0]$1749 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2672$1737_EN[7:0]$1749 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2672$1737_EN[7:0]$1749 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:2672$1737_EN[7:0]$1749 [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$2010:
      Old ports: A=$flatten\DUT.\Stack.$3$memwr$\rf$i8008_core.v:2719$1656_EN[13:0]$1715, B=14'00000000000000, Y=$flatten\DUT.\Stack.$procmux$2010_Y
      New ports: A=$flatten\DUT.\Stack.$procmux$1956_Y [0], B=1'0, Y=$flatten\DUT.\Stack.$procmux$2010_Y [0]
      New connections: $flatten\DUT.\Stack.$procmux$2010_Y [13:1] = { $flatten\DUT.\Stack.$procmux$2010_Y [0] $flatten\DUT.\Stack.$procmux$2010_Y [0] $flatten\DUT.\Stack.$procmux$2010_Y [0] $flatten\DUT.\Stack.$procmux$2010_Y [0] $flatten\DUT.\Stack.$procmux$2010_Y [0] $flatten\DUT.\Stack.$procmux$2010_Y [0] $flatten\DUT.\Stack.$procmux$2010_Y [0] $flatten\DUT.\Stack.$procmux$2010_Y [0] $flatten\DUT.\Stack.$procmux$2010_Y [0] $flatten\DUT.\Stack.$procmux$2010_Y [0] $flatten\DUT.\Stack.$procmux$2010_Y [0] $flatten\DUT.\Stack.$procmux$2010_Y [0] $flatten\DUT.\Stack.$procmux$2010_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$2088:
      Old ports: A=$flatten\DUT.\Stack.$2$memwr$\rf$i8008_core.v:2717$1654_EN[13:0]$1701, B=14'00000000000000, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2717$1654_EN[13:0]$1672
      New ports: A=$flatten\DUT.\Stack.$procmux$2034_Y [8], B=1'0, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2717$1654_EN[13:0]$1672 [8]
      New connections: { $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2717$1654_EN[13:0]$1672 [13:9] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2717$1654_EN[13:0]$1672 [7:0] } = { $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2717$1654_EN[13:0]$1672 [8] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2717$1654_EN[13:0]$1672 [8] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2717$1654_EN[13:0]$1672 [8] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2717$1654_EN[13:0]$1672 [8] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2717$1654_EN[13:0]$1672 [8] 8'00000000 }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$2076:
      Old ports: A=$flatten\DUT.\Stack.$2$memwr$\rf$i8008_core.v:2719$1656_EN[13:0]$1705, B=14'00000000000000, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2719$1656_EN[13:0]$1676
      New ports: A=$flatten\DUT.\Stack.$procmux$2010_Y [0], B=1'0, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2719$1656_EN[13:0]$1676 [0]
      New connections: $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2719$1656_EN[13:0]$1676 [13:1] = { $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2719$1656_EN[13:0]$1676 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2719$1656_EN[13:0]$1676 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2719$1656_EN[13:0]$1676 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2719$1656_EN[13:0]$1676 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2719$1656_EN[13:0]$1676 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2719$1656_EN[13:0]$1676 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2719$1656_EN[13:0]$1676 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2719$1656_EN[13:0]$1676 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2719$1656_EN[13:0]$1676 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2719$1656_EN[13:0]$1676 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2719$1656_EN[13:0]$1676 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2719$1656_EN[13:0]$1676 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2719$1656_EN[13:0]$1676 [0] }
  Optimizing cells in module \top.
Performed a total of 228 changes.

2.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~309 debug messages>
Removed a total of 103 cells.

2.10.6. Executing OPT_DFF pass (perform DFF optimizations).

2.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1391 unused wires.
<suppressed ~1 debug messages>

2.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.10.9. Rerunning OPT passes. (Maybe there is more to do..)

2.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~343 debug messages>

2.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2306: { $auto$opt_reduce.cc:134:opt_pmux$5589 $flatten\DUT.\Brain.$procmux$2250_CTRL $auto$opt_reduce.cc:134:opt_pmux$5557 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2316: { $auto$opt_reduce.cc:134:opt_pmux$5477 $auto$opt_reduce.cc:134:opt_pmux$5591 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2640: { $auto$opt_reduce.cc:134:opt_pmux$5593 $auto$opt_reduce.cc:134:opt_pmux$5483 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2650: { $flatten\DUT.\Brain.$procmux$2253_CTRL $auto$opt_reduce.cc:134:opt_pmux$5595 $flatten\DUT.\Brain.$procmux$2250_CTRL $flatten\DUT.\Brain.$procmux$2249_CMP $flatten\DUT.\Brain.$procmux$2235_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2680: { $auto$opt_reduce.cc:134:opt_pmux$5597 $auto$opt_reduce.cc:134:opt_pmux$5483 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2801: { $auto$opt_reduce.cc:134:opt_pmux$5599 $auto$opt_reduce.cc:134:opt_pmux$5483 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2895: { $auto$opt_reduce.cc:134:opt_pmux$5601 $flatten\DUT.\Brain.$procmux$2250_CTRL $flatten\DUT.\Brain.$procmux$2249_CMP $auto$opt_reduce.cc:134:opt_pmux$5455 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3150: { $auto$opt_reduce.cc:134:opt_pmux$5603 $auto$opt_reduce.cc:134:opt_pmux$5483 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3161: { $flatten\DUT.\Brain.$procmux$2253_CTRL $auto$opt_reduce.cc:134:opt_pmux$5605 $flatten\DUT.\Brain.$procmux$2250_CTRL $flatten\DUT.\Brain.$procmux$2249_CMP $flatten\DUT.\Brain.$procmux$2235_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$4059: { $flatten\DUT.\Brain.$procmux$2253_CTRL $auto$opt_reduce.cc:134:opt_pmux$5607 $flatten\DUT.\Brain.$procmux$2250_CTRL $flatten\DUT.\Brain.$procmux$2249_CMP $flatten\DUT.\Brain.$procmux$2235_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$4119: { $auto$opt_reduce.cc:134:opt_pmux$5453 $auto$opt_reduce.cc:134:opt_pmux$5609 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5588: { $flatten\DUT.$eq$i8008_core.v:2076$1624_Y $flatten\DUT.$eq$i8008_core.v:2076$1625_Y $flatten\DUT.\Brain.$procmux$2252_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5590: { $flatten\DUT.$eq$i8008_core.v:2076$1624_Y $flatten\DUT.$eq$i8008_core.v:2076$1625_Y $flatten\DUT.\Brain.$procmux$2235_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5592: { $flatten\DUT.$eq$i8008_core.v:2076$1624_Y $flatten\DUT.$eq$i8008_core.v:2076$1625_Y $flatten\DUT.\Brain.$procmux$2252_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5596: { $flatten\DUT.$eq$i8008_core.v:2076$1624_Y $flatten\DUT.$eq$i8008_core.v:2076$1625_Y $flatten\DUT.\Brain.$procmux$2252_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5598: { $flatten\DUT.$eq$i8008_core.v:2076$1624_Y $flatten\DUT.$eq$i8008_core.v:2076$1625_Y $flatten\DUT.\Brain.$procmux$2252_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5600: { $flatten\DUT.$eq$i8008_core.v:2076$1624_Y $flatten\DUT.$eq$i8008_core.v:2076$1625_Y $flatten\DUT.\Brain.$procmux$2252_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5602: { $flatten\DUT.$eq$i8008_core.v:2076$1624_Y $flatten\DUT.$eq$i8008_core.v:2076$1625_Y $flatten\DUT.\Brain.$procmux$2252_CMP }
  Optimizing cells in module \top.
Performed a total of 18 changes.

2.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~24 debug messages>
Removed a total of 8 cells.

2.10.13. Executing OPT_DFF pass (perform DFF optimizations).

2.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

2.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.10.16. Rerunning OPT passes. (Maybe there is more to do..)

2.10.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~343 debug messages>

2.10.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.10.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.10.20. Executing OPT_DFF pass (perform DFF optimizations).

2.10.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.10.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.10.23. Finished OPT passes. (There is nothing left to do.)

2.11. Executing FSM pass (extract and optimize FSM).

2.11.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register top.DUT.Brain.cycle.
Not marking top.DUT.Brain.state as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.

2.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\DUT.Brain.cycle' from module `\top'.
  found $dff cell for state register: $flatten\DUT.\Brain.$procdff$5078
  root of input selection tree: $flatten\DUT.\Brain.$0\cycle[1:0]
  found reset state: 2'00 (guessed from mux tree)
  found ctrl input: \dbg.chip_reset
  found ctrl input: $flatten\DUT.\Brain.$procmux$2227_CMP
  found ctrl input: $flatten\DUT.\Brain.$procmux$2228_CMP
  found ctrl input: $flatten\DUT.$eq$i8008_core.v:2066$1618_Y
  found state code: 2'00
  found ctrl input: $flatten\DUT.\Brain.$procmux$2235_CMP
  found ctrl input: $auto$opt_reduce.cc:134:opt_pmux$5461
  found ctrl input: $flatten\DUT.\Brain.$procmux$2250_CTRL
  found ctrl input: $flatten\DUT.\Brain.$procmux$2365_CTRL
  found ctrl input: $flatten\DUT.\Brain.$procmux$2392_CTRL
  found ctrl input: $flatten\DUT.\Brain.$procmux$2331_CMP
  found ctrl input: \DUT.Brain.CF
  found ctrl input: $auto$opt_reduce.cc:134:opt_pmux$5467
  found ctrl input: $flatten\DUT.\Brain.$procmux$2876_CTRL
  found state code: 2'10
  found ctrl input: $flatten\DUT.\Brain.$procmux$2249_CMP
  found ctrl input: $auto$opt_reduce.cc:134:opt_pmux$5499
  found ctrl input: $flatten\DUT.\Brain.$eq$i8008_core.v:2350$1049_Y
  found state code: 2'01
  found ctrl input: $flatten\DUT.\Brain.$procmux$3841_CTRL
  found ctrl input: $flatten\DUT.\Brain.$procmux$3683_CTRL
  found ctrl input: $flatten\DUT.\Brain.$procmux$3775_CTRL
  found ctrl input: $flatten\DUT.\Brain.$or$i8008_core.v:2302$1042_Y
  found ctrl input: $flatten\DUT.\Brain.$logic_and$i8008_core.v:2291$1037_Y
  found ctrl input: \DUT.Intr
  found ctrl output: $flatten\DUT.\Brain.$procmux$2227_CMP
  found ctrl output: $flatten\DUT.\Brain.$procmux$2228_CMP
  found ctrl output: $flatten\DUT.$eq$i8008_core.v:2066$1618_Y
  ctrl inputs: { $auto$opt_reduce.cc:134:opt_pmux$5467 $auto$opt_reduce.cc:134:opt_pmux$5499 \DUT.Intr $flatten\DUT.\Brain.$procmux$3841_CTRL $flatten\DUT.\Brain.$procmux$3775_CTRL $flatten\DUT.\Brain.$procmux$3683_CTRL $flatten\DUT.\Brain.$procmux$2876_CTRL $flatten\DUT.\Brain.$procmux$2392_CTRL $flatten\DUT.\Brain.$procmux$2365_CTRL $flatten\DUT.\Brain.$procmux$2331_CMP $flatten\DUT.\Brain.$procmux$2250_CTRL $flatten\DUT.\Brain.$procmux$2249_CMP $flatten\DUT.\Brain.$procmux$2235_CMP $flatten\DUT.\Brain.$eq$i8008_core.v:2350$1049_Y $flatten\DUT.\Brain.$or$i8008_core.v:2302$1042_Y $flatten\DUT.\Brain.$logic_and$i8008_core.v:2291$1037_Y \DUT.Brain.CF $auto$opt_reduce.cc:134:opt_pmux$5461 \dbg.chip_reset }
  ctrl outputs: { $flatten\DUT.$eq$i8008_core.v:2066$1618_Y $flatten\DUT.\Brain.$procmux$2228_CMP $flatten\DUT.\Brain.$procmux$2227_CMP $flatten\DUT.\Brain.$0\cycle[1:0] }
  transition:       2'00 19'-0--------000-----0 -> INVALID_STATE(2'x) 5'100xx  <ignored invalid transition!>
  transition:       2'00 19'-1----------------0 ->       2'00 5'10000
  transition:       2'00 19'---000----1-------0 ->       2'00 5'10000
  transition:       2'00 19'--0-1-----1----0--0 ->       2'00 5'10000
  transition:       2'00 19'--1-1-----1----0--0 ->       2'00 5'10000
  transition:       2'00 19'----1-----1----1--0 ->       2'01 5'10001
  transition:       2'00 19'-----1----1---0---0 ->       2'00 5'10000
  transition:       2'00 19'-----1----1---1---0 ->       2'00 5'10000
  transition:       2'00 19'---1------1-------0 ->       2'01 5'10001
  transition:       2'00 19'-----------1-0----0 ->       2'00 5'10000
  transition:       2'00 19'-----------1-1----0 ->       2'01 5'10001
  transition:       2'00 19'------------1-----0 ->       2'00 5'10000
  transition:       2'00 19'------------------1 ->       2'00 5'10000
  transition:       2'10 19'----------0-0----00 -> INVALID_STATE(2'x) 5'001xx  <ignored invalid transition!>
  transition:       2'10 19'-------0001-------0 ->       2'10 5'00110
  transition:       2'10 19'---------11-------0 ->       2'00 5'00100
  transition:       2'10 19'-------1--1-----0-0 ->       2'00 5'00100
  transition:       2'10 19'-------1--1-----1-0 ->       2'10 5'00110
  transition:       2'10 19'--------1-1-----0-0 ->       2'10 5'00110
  transition:       2'10 19'--------1-1-----1-0 ->       2'00 5'00100
  transition:       2'10 19'-----------------10 ->       2'10 5'00110
  transition:       2'10 19'------------1-----0 ->       2'00 5'00100
  transition:       2'10 19'------------------1 ->       2'00 5'00100
  transition:       2'01 19'----------0-0----00 -> INVALID_STATE(2'x) 5'010xx  <ignored invalid transition!>
  transition:       2'01 19'0-----0---1-------0 ->       2'01 5'01001
  transition:       2'01 19'------1---1-------0 ->       2'00 5'01000
  transition:       2'01 19'1---------1-------0 ->       2'10 5'01010
  transition:       2'01 19'-----------------10 ->       2'01 5'01001
  transition:       2'01 19'------------1-----0 ->       2'00 5'01000
  transition:       2'01 19'------------------1 ->       2'00 5'01000

2.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\DUT.Brain.cycle$5610' from module `\top'.
  Merging pattern 19'-----1----1---0---0 and 19'-----1----1---1---0 from group (0 0 5'10000).
  Merging pattern 19'-----1----1---1---0 and 19'-----1----1---0---0 from group (0 0 5'10000).
  Merging pattern 19'--0-1-----1----0--0 and 19'--1-1-----1----0--0 from group (0 0 5'10000).
  Merging pattern 19'--1-1-----1----0--0 and 19'--0-1-----1----0--0 from group (0 0 5'10000).
  Removing unused input signal \DUT.Intr.
  Removing unused input signal $flatten\DUT.\Brain.$or$i8008_core.v:2302$1042_Y.

2.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 18 unused cells and 19 unused wires.
<suppressed ~21 debug messages>

2.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\DUT.Brain.cycle$5610' from module `\top'.
  Removing unused output signal $flatten\DUT.\Brain.$0\cycle[1:0] [0].
  Removing unused output signal $flatten\DUT.\Brain.$0\cycle[1:0] [1].

2.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\DUT.Brain.cycle$5610' from module `\top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> --1
  10 -> -1-
  01 -> 1--

2.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\DUT.Brain.cycle$5610' from module `top':
-------------------------------------

  Information on FSM $fsm$\DUT.Brain.cycle$5610 (\DUT.Brain.cycle):

  Number of input signals:   17
  Number of output signals:   3
  Number of state bits:       3

  Input signals:
    0: \dbg.chip_reset
    1: $auto$opt_reduce.cc:134:opt_pmux$5461
    2: \DUT.Brain.CF
    3: $flatten\DUT.\Brain.$logic_and$i8008_core.v:2291$1037_Y
    4: $flatten\DUT.\Brain.$eq$i8008_core.v:2350$1049_Y
    5: $flatten\DUT.\Brain.$procmux$2235_CMP
    6: $flatten\DUT.\Brain.$procmux$2249_CMP
    7: $flatten\DUT.\Brain.$procmux$2250_CTRL
    8: $flatten\DUT.\Brain.$procmux$2331_CMP
    9: $flatten\DUT.\Brain.$procmux$2365_CTRL
   10: $flatten\DUT.\Brain.$procmux$2392_CTRL
   11: $flatten\DUT.\Brain.$procmux$2876_CTRL
   12: $flatten\DUT.\Brain.$procmux$3683_CTRL
   13: $flatten\DUT.\Brain.$procmux$3775_CTRL
   14: $flatten\DUT.\Brain.$procmux$3841_CTRL
   15: $auto$opt_reduce.cc:134:opt_pmux$5499
   16: $auto$opt_reduce.cc:134:opt_pmux$5467

  Output signals:
    0: $flatten\DUT.\Brain.$procmux$2227_CMP
    1: $flatten\DUT.\Brain.$procmux$2228_CMP
    2: $flatten\DUT.$eq$i8008_core.v:2066$1618_Y

  State encoding:
    0:      3'--1  <RESET STATE>
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 17'---1-----1---0--0   ->     0 3'100
      1:     0 17'----------1-0---0   ->     0 3'100
      2:     0 17'-----------1----0   ->     0 3'100
      3:     0 17'--000----1------0   ->     0 3'100
      4:     0 17'----1----1------0   ->     0 3'100
      5:     0 17'-1--------------0   ->     0 3'100
      6:     0 17'----------------1   ->     0 3'100
      7:     0 17'---1-----1---1--0   ->     2 3'100
      8:     0 17'----------1-1---0   ->     2 3'100
      9:     0 17'--1------1------0   ->     2 3'100
     10:     1 17'------1--1----0-0   ->     0 3'001
     11:     1 17'-------1-1----1-0   ->     0 3'001
     12:     1 17'-----------1----0   ->     0 3'001
     13:     1 17'--------11------0   ->     0 3'001
     14:     1 17'----------------1   ->     0 3'001
     15:     1 17'---------------10   ->     1 3'001
     16:     1 17'-------1-1----0-0   ->     1 3'001
     17:     1 17'------1--1----1-0   ->     1 3'001
     18:     1 17'------0001------0   ->     1 3'001
     19:     2 17'-----------1----0   ->     0 3'010
     20:     2 17'-----1---1------0   ->     0 3'010
     21:     2 17'----------------1   ->     0 3'010
     22:     2 17'1--------1------0   ->     1 3'010
     23:     2 17'---------------10   ->     2 3'010
     24:     2 17'0----0---1------0   ->     2 3'010

-------------------------------------

2.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\DUT.Brain.cycle$5610' from module `\top'.

2.12. Executing OPT pass (performing simple optimizations).

2.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

2.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

2.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~342 debug messages>

2.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.12.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$5079 ($dff) from module top (D = $add$i8008_core.v:1941$961_Y [1:0], Q = \display_cnt, rval = 2'00).
Adding EN signal on $flatten\dbg.$procdff$5139 ($dff) from module top (D = \dbg.wbdbg.wbdbgbusmaster.o_resp_data, Q = \dbg.wbdbg.resp_fifo_wr_data).
Adding EN signal on $flatten\dbg.$procdff$5138 ($dff) from module top (D = \dbg._0380_, Q = \dbg.wbdbg.uart_tx_data).
Adding SRST signal on $flatten\dbg.$procdff$5137 ($dff) from module top (D = \dbg._0292_, Q = \dbg.wbdbg.uart_tx_valid, rval = 1'0).
Adding EN signal on $flatten\dbg.$procdff$5135 ($dff) from module top (D = \dbg._0376_, Q = \dbg.wbdbg.transmit_data).
Adding SRST signal on $auto$ff.cc:266:slice$5710 ($dffe) from module top (D = \dbg._0374_ [39:36], Q = \dbg.wbdbg.transmit_data [39:36], rval = 4'0000).
Adding EN signal on $flatten\dbg.$procdff$5134 ($dff) from module top (D = \dbg._0033_, Q = \dbg.wbdbg.transmit_state).
Adding EN signal on $flatten\dbg.$procdff$5133 ($dff) from module top (D = 1'0, Q = \dbg.wbdbg.interrupt_1_rising).
Adding EN signal on $flatten\dbg.$procdff$5132 ($dff) from module top (D = 1'0, Q = \dbg.wbdbg.interrupt_2_rising).
Adding EN signal on $flatten\dbg.$procdff$5131 ($dff) from module top (D = 1'0, Q = \dbg.wbdbg.interrupt_3_rising).
Adding EN signal on $flatten\dbg.$procdff$5130 ($dff) from module top (D = 1'0, Q = \dbg.wbdbg.interrupt_4_rising).
Adding SRST signal on $flatten\dbg.$procdff$5129 ($dff) from module top (D = \dbg._0410_, Q = \dbg.wbdbg.cmd_reset, rval = 1'0).
Adding SRST signal on $flatten\dbg.$procdff$5128 ($dff) from module top (D = \dbg._0428_, Q = \dbg.wbdbg.cmd_fifo_wr_en, rval = 1'0).
Adding EN signal on $flatten\dbg.$procdff$5127 ($dff) from module top (D = { \dbg.wbdbg.recieve_data [35:8] \dbg.wbdbg.uart_rx.o_data }, Q = \dbg.wbdbg.cmd_fifo_wr_data).
Adding EN signal on $flatten\dbg.$procdff$5126 ($dff) from module top (D = \dbg.wbdbg.uart_rx.o_data, Q = \dbg.wbdbg.recieve_data [39:32]).
Adding EN signal on $flatten\dbg.$procdff$5126 ($dff) from module top (D = \dbg.wbdbg.uart_rx.o_data, Q = \dbg.wbdbg.recieve_data [31:24]).
Adding EN signal on $flatten\dbg.$procdff$5126 ($dff) from module top (D = \dbg.wbdbg.uart_rx.o_data, Q = \dbg.wbdbg.recieve_data [23:16]).
Adding EN signal on $flatten\dbg.$procdff$5126 ($dff) from module top (D = \dbg.wbdbg.uart_rx.o_data, Q = \dbg.wbdbg.recieve_data [7:0]).
Adding EN signal on $flatten\dbg.$procdff$5126 ($dff) from module top (D = \dbg.wbdbg.uart_rx.o_data, Q = \dbg.wbdbg.recieve_data [15:8]).
Adding EN signal on $flatten\dbg.$procdff$5125 ($dff) from module top (D = \dbg._0028_, Q = \dbg.wbdbg.recieve_state).
Adding SRST signal on $flatten\dbg.$procdff$5124 ($dff) from module top (D = \dbg._0416_, Q = \dbg.wbdbg.drop_timer, rval = 26'01011111010111100001000000).
Adding EN signal on $auto$ff.cc:266:slice$5807 ($sdff) from module top (D = \dbg._0107_ [25:0], Q = \dbg.wbdbg.drop_timer).
Adding EN signal on $flatten\dbg.$procdff$5122 ($dff) from module top (D = \dbg.wbdbg.cmd_fifo.o_rd_data, Q = \dbg.wbdbg.cmd_data).
Adding SRST signal on $flatten\dbg.$procdff$5120 ($dff) from module top (D = \dbg._0468_, Q = \dbg.wbdbg.cmd_fifo.wr_ptr, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$5810 ($sdff) from module top (D = \dbg._0126_ [3:0], Q = \dbg.wbdbg.cmd_fifo.wr_ptr).
Adding EN signal on $flatten\dbg.$procdff$5116 ($dff) from module top (D = \dbg._0135_, Q = \dbg.wbdbg.cmd_fifo.o_rd_data).
Adding SRST signal on $flatten\dbg.$procdff$5115 ($dff) from module top (D = \dbg._0102_, Q = \dbg.wbdbg.cmd_fifo.o_rd_valid, rval = 1'0).
Adding SRST signal on $flatten\dbg.$procdff$5114 ($dff) from module top (D = \dbg._0476_, Q = \dbg.wbdbg.cmd_fifo.rd_ptr, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$5822 ($sdff) from module top (D = \dbg._0127_ [3:0], Q = \dbg.wbdbg.cmd_fifo.rd_ptr).
Adding SRST signal on $flatten\dbg.$procdff$5113 ($dff) from module top (D = \dbg._0486_, Q = \dbg.wbdbg.cmd_fifo.len, rval = 5'00000).
Adding EN signal on $auto$ff.cc:266:slice$5824 ($sdff) from module top (D = \dbg._0486_, Q = \dbg.wbdbg.cmd_fifo.len).
Adding SRST signal on $flatten\dbg.$procdff$5112 ($dff) from module top (D = \dbg._0508_, Q = \dbg.wbdbg.resp_fifo.wr_ptr, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$5828 ($sdff) from module top (D = \dbg._0163_ [3:0], Q = \dbg.wbdbg.resp_fifo.wr_ptr).
Adding EN signal on $flatten\dbg.$procdff$5108 ($dff) from module top (D = \dbg._0172_, Q = \dbg.wbdbg.resp_fifo.o_rd_data).
Adding SRST signal on $flatten\dbg.$procdff$5107 ($dff) from module top (D = \dbg._0092_, Q = \dbg.wbdbg.resp_fifo.o_rd_valid, rval = 1'0).
Adding SRST signal on $flatten\dbg.$procdff$5106 ($dff) from module top (D = \dbg._0516_, Q = \dbg.wbdbg.resp_fifo.rd_ptr, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$5840 ($sdff) from module top (D = \dbg._0164_ [3:0], Q = \dbg.wbdbg.resp_fifo.rd_ptr).
Adding SRST signal on $flatten\dbg.$procdff$5105 ($dff) from module top (D = \dbg._0526_, Q = \dbg.wbdbg.resp_fifo.len, rval = 5'00000).
Adding EN signal on $auto$ff.cc:266:slice$5842 ($sdff) from module top (D = \dbg._0526_, Q = \dbg.wbdbg.resp_fifo.len).
Adding EN signal on $flatten\dbg.$procdff$5104 ($dff) from module top (D = \dbg._0218_, Q = \dbg.wbdbg.uart_rx.o_data).
Adding SRST signal on $flatten\dbg.$procdff$5103 ($dff) from module top (D = \dbg._0586_, Q = \dbg.wbdbg.uart_rx.o_valid, rval = 1'0).
Adding EN signal on $flatten\dbg.$procdff$5101 ($dff) from module top (D = \dbg._0189_, Q = \dbg.wbdbg.uart_rx.state).
Adding EN signal on $flatten\dbg.$procdff$5095 ($dff) from module top (D = \dbg._0228_, Q = \dbg.wbdbg.uart_tx.state).
Adding EN signal on $flatten\dbg.$procdff$5094 ($dff) from module top (D = \dbg.wbdbg.uart_tx_data, Q = \dbg.wbdbg.uart_tx.data_send).
Adding SRST signal on $flatten\dbg.$procdff$5093 ($dff) from module top (D = \dbg._0652_, Q = \dbg.wbdbg.wbdbgbusmaster.o_wb_cyc, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5877 ($sdff) from module top (D = \dbg._0650_, Q = \dbg.wbdbg.wbdbgbusmaster.o_wb_cyc).
Adding SRST signal on $flatten\dbg.$procdff$5092 ($dff) from module top (D = \dbg._0636_, Q = \dbg.wbdbg.wbdbgbusmaster.o_wb_stb, rval = 1'0).
Adding EN signal on $flatten\dbg.$procdff$5089 ($dff) from module top (D = \dbg._0272_, Q = \dbg.wbdbg.wbdbgbusmaster.o_wb_we).
Adding SRST signal on $flatten\dbg.$procdff$5087 ($dff) from module top (D = \dbg._0670_, Q = \dbg.wbdbg.wbdbgbusmaster.o_resp_valid, rval = 1'1).
Adding SRST signal on $flatten\dbg.$procdff$5086 ($dff) from module top (D = \dbg._0684_, Q = \dbg.wbdbg.wbdbgbusmaster.o_resp_data, rval = 36'010100000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$5886 ($sdff) from module top (D = \dbg._0684_, Q = \dbg.wbdbg.wbdbgbusmaster.o_resp_data).
Adding EN signal on $flatten\dbg.$procdff$5084 ($dff) from module top (D = \dbg.wbdbg.wbdbgbusmaster.o_wb_data [11:0], Q = \dbg.chip_inputs).
Adding EN signal on $flatten\dbg.$procdff$5083 ($dff) from module top (D = \dbg.wbdbg.wbdbgbusmaster.o_wb_data [13], Q = \dbg.chip_clock).
Adding EN signal on $flatten\dbg.$procdff$5082 ($dff) from module top (D = \dbg.wbdbg.wbdbgbusmaster.o_wb_data [12], Q = \dbg.chip_reset).
Adding SRST signal on $flatten\DUT.\regB.$procdff$5043 ($dff) from module top (D = $flatten\DUT.\regB.$procmux$1816_Y, Q = \DUT.regB.Q, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$5899 ($sdff) from module top (D = \DUT.Stack.bus, Q = \DUT.regB.Q).
Adding SRST signal on $flatten\DUT.\regA.$procdff$5043 ($dff) from module top (D = $flatten\DUT.\regA.$procmux$1816_Y, Q = \DUT.regA.Q, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$5901 ($sdff) from module top (D = \DUT.regA.d, Q = \DUT.regA.Q).
Adding SRST signal on $flatten\DUT.\Unit.\flag_reg.$procdff$5042 ($dff) from module top (D = $flatten\DUT.\Unit.\flag_reg.$procmux$1811_Y, Q = \DUT.Unit.flag_reg.Q, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$5903 ($sdff) from module top (D = { $flatten\DUT.\Unit.$ternary$i8008_core.v:2216$1026_Y $flatten\DUT.\Unit.$or$i8008_core.v:2214$1015_Y $flatten\DUT.\Unit.$or$i8008_core.v:2215$1019_Y }, Q = \DUT.Unit.flag_reg.Q [2:0]).
Adding EN signal on $auto$ff.cc:266:slice$5903 ($sdff) from module top (D = \DUT.Unit.flag_reg.d [3], Q = \DUT.Unit.flag_reg.Q [3]).
Adding SRST signal on $flatten\DUT.\SP_SEL.$procdff$5054 ($dff) from module top (D = $flatten\DUT.\SP_SEL.$procmux$1872_Y, Q = \DUT.SP_SEL.Q, rval = 3'000).
Adding EN signal on $auto$ff.cc:266:slice$5910 ($sdff) from module top (D = $flatten\DUT.\SP_SEL.$procmux$1872_Y, Q = \DUT.SP_SEL.Q).
Adding SRST signal on $flatten\DUT.\IR.$procdff$5043 ($dff) from module top (D = $flatten\DUT.\IR.$procmux$1816_Y, Q = \DUT.IR.Q, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$5914 ($sdff) from module top (D = \dbg.chip_inputs [7:0], Q = \DUT.IR.Q).
Adding SRST signal on $flatten\DUT.\Brain.$procdff$5077 ($dff) from module top (D = \DUT.Brain.next_state, Q = \DUT.Brain.state, rval = 3'010).
Adding SRST signal on $flatten\DUT.$procdff$5076 ($dff) from module top (D = $flatten\DUT.$procmux$2214_Y, Q = \DUT.S_Intr, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5917 ($sdff) from module top (D = \dbg.chip_inputs [8], Q = \DUT.S_Intr).
Adding SRST signal on $flatten\DUT.$procdff$5075 ($dff) from module top (D = $flatten\DUT.$or$i8008_core.v:2036$1614_Y, Q = \DUT.Intr, rval = 1'0).
Adding SRST signal on $flatten\DUT.$procdff$5074 ($dff) from module top (D = \dbg.chip_inputs [9], Q = \DUT.tempR, rval = 1'0).
Adding SRST signal on $flatten\DUT.$procdff$5073 ($dff) from module top (D = \DUT.tempR, Q = \DUT.Ready, rval = 1'0).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$5755 ($dffe) from module top.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$5744 ($dffe) from module top.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$5735 ($dffe) from module top.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$5728 ($dffe) from module top.

2.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 126 unused cells and 173 unused wires.
<suppressed ~256 debug messages>

2.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~27 debug messages>

2.12.9. Rerunning OPT passes. (Maybe there is more to do..)

2.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~308 debug messages>

2.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~24 debug messages>
Removed a total of 8 cells.

2.12.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$5717 ($sdffce) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$5717 ($sdffce) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$5717 ($sdffce) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$5717 ($sdffce) from module top.

2.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

2.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.12.16. Rerunning OPT passes. (Maybe there is more to do..)

2.12.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~308 debug messages>

2.12.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.12.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.12.20. Executing OPT_DFF pass (perform DFF optimizations).

2.12.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.12.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.12.23. Finished OPT passes. (There is nothing left to do.)

2.13. Executing WREDUCE pass (reducing word size of cells).
Removed top 29 address bits (of 32) from memory read port top.$flatten\DUT.\rf.$memrd$\rf$i8008_core.v:2660$1738 (DUT.rf.rf).
Removed top 31 bits (of 32) from port B of cell top.$add$i8008_core.v:1941$961 ($add).
Removed top 30 bits (of 32) from port Y of cell top.$add$i8008_core.v:1941$961 ($add).
Removed top 30 bits (of 32) from port A of cell top.$shl$i8008_core.v:1942$962 ($shl).
Removed top 28 bits (of 32) from port Y of cell top.$not$i8008_core.v:1942$963 ($not).
Removed top 28 bits (of 32) from port A of cell top.$not$i8008_core.v:1942$963 ($not).
Removed top 1 bits (of 2) from port B of cell top.$procmux$4257_CMP0 ($eq).
Removed top 4 bits (of 8) from FF cell top.$auto$ff.cc:266:slice$5785 ($dffe).
Removed top 18 bits (of 32) from FF cell top.$flatten\dbg.$procdff$5088 ($dff).
Removed top 2 bits (of 12) from FF cell top.$auto$ff.cc:266:slice$5890 ($dffe).
Removed top 4 bits (of 8) from mux cell top.$flatten\dbg.$procmux$4263 ($mux).
Removed top 2 bits (of 36) from mux cell top.$flatten\dbg.$ternary$i8008_core.v:1416$901 ($mux).
Removed top 2 bits (of 10) from mux cell top.$flatten\dbg.$ternary$i8008_core.v:1389$874 ($mux).
Removed top 2 bits (of 10) from mux cell top.$flatten\dbg.$ternary$i8008_core.v:1387$872 ($mux).
Removed top 2 bits (of 10) from mux cell top.$flatten\dbg.$ternary$i8008_core.v:1370$855 ($mux).
Removed top 2 bits (of 10) from mux cell top.$flatten\dbg.$ternary$i8008_core.v:1368$853 ($mux).
Removed top 2 bits (of 3) from port B of cell top.$flatten\dbg.$eq$i8008_core.v:1279$764 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\dbg.$eq$i8008_core.v:1276$761 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\dbg.$eq$i8008_core.v:1270$755 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$flatten\dbg.$eq$i8008_core.v:1266$751 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\dbg.$eq$i8008_core.v:1265$750 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\dbg.$eq$i8008_core.v:1264$749 ($eq).
Removed top 4 bits (of 40) from mux cell top.$flatten\dbg.$ternary$i8008_core.v:1246$745 ($mux).
Removed top 1 bits (of 4) from port B of cell top.$flatten\dbg.$eq$i8008_core.v:1130$629 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\dbg.$eq$i8008_core.v:1129$628 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\dbg.$eq$i8008_core.v:1128$627 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$flatten\dbg.$eq$i8008_core.v:1127$626 ($eq).
Removed top 30 bits (of 32) from port B of cell top.$flatten\dbg.$sub$i8008_core.v:1125$624 ($sub).
Removed top 27 bits (of 32) from port Y of cell top.$flatten\dbg.$sub$i8008_core.v:1125$624 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$flatten\dbg.$sub$i8008_core.v:1124$623 ($sub).
Removed top 22 bits (of 32) from port Y of cell top.$flatten\dbg.$sub$i8008_core.v:1124$623 ($sub).
Removed top 27 bits (of 32) from port B of cell top.$flatten\dbg.$shiftx$i8008_core.v:0$622 ($shiftx).
Removed top 3 bits (of 4) from port B of cell top.$flatten\dbg.$eq$i8008_core.v:1120$619 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$flatten\dbg.$add$i8008_core.v:1117$616 ($add).
Removed top 28 bits (of 32) from port Y of cell top.$flatten\dbg.$add$i8008_core.v:1117$616 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\dbg.$sub$i8008_core.v:1116$615 ($sub).
Removed top 22 bits (of 32) from port Y of cell top.$flatten\dbg.$sub$i8008_core.v:1116$615 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$flatten\dbg.$sub$i8008_core.v:1115$614 ($sub).
Removed top 27 bits (of 32) from port Y of cell top.$flatten\dbg.$sub$i8008_core.v:1115$614 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$flatten\dbg.$lt$i8008_core.v:1112$603 ($lt).
Converting cell top.$flatten\dbg.$neg$i8008_core.v:1109$600 ($neg) from signed to unsigned.
Removed top 1 bits (of 33) from port A of cell top.$flatten\dbg.$neg$i8008_core.v:1109$600 ($neg).
Removed top 31 bits (of 32) from port B of cell top.$flatten\dbg.$add$i8008_core.v:1103$594 ($add).
Removed top 28 bits (of 32) from port Y of cell top.$flatten\dbg.$add$i8008_core.v:1103$594 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\dbg.$sub$i8008_core.v:1102$593 ($sub).
Removed top 27 bits (of 32) from port Y of cell top.$flatten\dbg.$sub$i8008_core.v:1102$593 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$flatten\dbg.$add$i8008_core.v:1094$585 ($add).
Removed top 27 bits (of 32) from port Y of cell top.$flatten\dbg.$add$i8008_core.v:1094$585 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\dbg.$add$i8008_core.v:1093$584 ($add).
Removed top 28 bits (of 32) from port Y of cell top.$flatten\dbg.$add$i8008_core.v:1093$584 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\dbg.$add$i8008_core.v:1092$583 ($add).
Removed top 28 bits (of 32) from port Y of cell top.$flatten\dbg.$add$i8008_core.v:1092$583 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\dbg.$sub$i8008_core.v:1091$582 ($sub).
Removed top 27 bits (of 32) from port Y of cell top.$flatten\dbg.$sub$i8008_core.v:1091$582 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$flatten\dbg.$add$i8008_core.v:1083$574 ($add).
Removed top 27 bits (of 32) from port Y of cell top.$flatten\dbg.$add$i8008_core.v:1083$574 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\dbg.$add$i8008_core.v:1082$573 ($add).
Removed top 28 bits (of 32) from port Y of cell top.$flatten\dbg.$add$i8008_core.v:1082$573 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\dbg.$add$i8008_core.v:1081$572 ($add).
Removed top 28 bits (of 32) from port Y of cell top.$flatten\dbg.$add$i8008_core.v:1081$572 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\dbg.$sub$i8008_core.v:1080$571 ($sub).
Removed top 6 bits (of 32) from port Y of cell top.$flatten\dbg.$sub$i8008_core.v:1080$571 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$flatten\dbg.$gt$i8008_core.v:1044$535 ($gt).
Removed top 25 bits (of 26) from port B of cell top.$flatten\dbg.$eq$i8008_core.v:1043$534 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$flatten\dbg.$add$i8008_core.v:1038$529 ($add).
Removed top 29 bits (of 32) from port Y of cell top.$flatten\dbg.$add$i8008_core.v:1038$529 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\dbg.$add$i8008_core.v:1037$528 ($add).
Removed top 29 bits (of 32) from port Y of cell top.$flatten\dbg.$add$i8008_core.v:1037$528 ($add).
Removed top 2 bits (of 8) from mux cell top.$flatten\convert.$procmux$4967 ($mux).
Removed top 2 bits (of 8) from mux cell top.$flatten\convert.$procmux$4964 ($mux).
Removed top 1 bits (of 8) from mux cell top.$flatten\convert.$procmux$4961 ($mux).
Removed top 1 bits (of 8) from mux cell top.$flatten\convert.$procmux$4958 ($mux).
Removed top 1 bits (of 8) from mux cell top.$flatten\convert.$procmux$4955 ($mux).
Removed top 1 bits (of 8) from mux cell top.$flatten\convert.$procmux$4952 ($mux).
Removed top 1 bits (of 8) from mux cell top.$flatten\convert.$procmux$4949 ($mux).
Removed top 1 bits (of 8) from mux cell top.$flatten\convert.$procmux$4946 ($mux).
Removed top 1 bits (of 8) from mux cell top.$flatten\convert.$procmux$4943 ($mux).
Removed top 1 bits (of 8) from mux cell top.$flatten\convert.$procmux$4940 ($mux).
Removed top 1 bits (of 8) from mux cell top.$flatten\convert.$procmux$4937 ($mux).
Removed top 1 bits (of 8) from mux cell top.$flatten\convert.$procmux$4934 ($mux).
Removed top 1 bits (of 8) from mux cell top.$flatten\convert.$procmux$4931 ($mux).
Removed top 1 bits (of 8) from mux cell top.$flatten\convert.$procmux$4928 ($mux).
Removed top 1 bits (of 8) from mux cell top.$flatten\convert.$procmux$4925 ($mux).
Removed top 1 bits (of 8) from mux cell top.$flatten\convert.$procmux$4922 ($mux).
Removed top 1 bits (of 4) from port B of cell top.$flatten\convert.$eq$i8008_core.v:23$9 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\convert.$eq$i8008_core.v:21$8 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\convert.$eq$i8008_core.v:19$7 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\convert.$eq$i8008_core.v:17$6 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\convert.$eq$i8008_core.v:15$5 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\convert.$eq$i8008_core.v:13$4 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$flatten\convert.$eq$i8008_core.v:11$3 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$5714 ($ne).
Removed top 2 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5694 ($eq).
Removed top 2 bits (of 3) from mux cell top.$flatten\DUT.\Brain.$ternary$i8008_core.v:2269$1033 ($mux).
Removed top 2 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$eq$i8008_core.v:2278$1035 ($eq).
Removed top 2 bits (of 3) from mux cell top.$flatten\DUT.\Brain.$ternary$i8008_core.v:2368$1051 ($mux).
Removed top 1 bits (of 4) from port B of cell top.$flatten\DUT.\Brain.$eq$i8008_core.v:2479$1058 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\DUT.\Brain.$eq$i8008_core.v:2591$1066 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\DUT.\Brain.$eq$i8008_core.v:2591$1069 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\DUT.\Brain.$eq$i8008_core.v:2591$1070 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\DUT.\Brain.$eq$i8008_core.v:2591$1075 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\DUT.\Brain.$procmux$2233_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$flatten\DUT.\Brain.$procmux$2233_CMP1 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$flatten\DUT.\Brain.$procmux$2233_CMP2 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\DUT.\Brain.$procmux$2233_CMP3 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$flatten\DUT.\Brain.$procmux$2233_CMP4 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$flatten\DUT.\Brain.$procmux$2233_CMP5 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$flatten\DUT.\Brain.$procmux$2250_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\DUT.\Brain.$procmux$2250_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$procmux$2331_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5646 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\DUT.\Brain.$procmux$2754_CMP1 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\DUT.\Brain.$procmux$2754_CMP2 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\DUT.\Brain.$procmux$2876_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$procmux$3349_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$procmux$3349_CMP1 ($eq).
Removed top 3 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$procmux$3349_CMP2 ($eq).
Removed top 3 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$procmux$3349_CMP3 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\DUT.\Brain.$procmux$3351_CMP1 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\DUT.\Brain.$procmux$3397_CMP0 ($eq).
Removed top 4 bits (of 6) from port B of cell top.$flatten\DUT.\Brain.$procmux$3683_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$flatten\DUT.\Brain.$procmux$3683_CMP1 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\DUT.\Brain.$procmux$3684_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\DUT.\Brain.$procmux$4187_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$flatten\DUT.\Stack.$add$i8008_core.v:2719$1721 ($add).
Removed top 18 bits (of 32) from port Y of cell top.$flatten\DUT.\Stack.$add$i8008_core.v:2719$1721 ($add).
Removed top 3 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$5673 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$flatten\DUT.\SP_SEL.$add$i8008_core.v:2783$1726 ($add).
Removed top 29 bits (of 32) from port Y of cell top.$flatten\DUT.\SP_SEL.$add$i8008_core.v:2783$1726 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\DUT.\SP_SEL.$sub$i8008_core.v:2785$1729 ($sub).
Removed top 29 bits (of 32) from port Y of cell top.$flatten\DUT.\SP_SEL.$sub$i8008_core.v:2785$1729 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$flatten\DUT.\Unit.$add$i8008_core.v:2181$1003 ($add).
Removed top 24 bits (of 32) from port Y of cell top.$flatten\DUT.\Unit.$add$i8008_core.v:2181$1003 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\DUT.\Unit.$sub$i8008_core.v:2182$1004 ($sub).
Removed top 24 bits (of 32) from port Y of cell top.$flatten\DUT.\Unit.$sub$i8008_core.v:2182$1004 ($sub).
Removed top 1 bits (of 3) from port B of cell top.$flatten\DUT.\Unit.$procmux$4194_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\DUT.\Unit.$procmux$4195_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$flatten\DUT.\Unit.$procmux$4196_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\DUT.\Unit.$procmux$4228_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\DUT.\Unit.$procmux$4229_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$flatten\DUT.\Unit.$procmux$4230_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\DUT.$eq$i8008_core.v:2076$1624 ($eq).
Removed top 28 bits (of 32) from port Y of cell top.$shl$i8008_core.v:1942$962 ($shl).
Removed top 30 bits (of 32) from wire top.$add$i8008_core.v:1941$961_Y.
Removed top 1 bits (of 2) from wire top.$flatten\DUT.\Brain.$13\ctrl_signals[7:6].
Removed top 1 bits (of 2) from wire top.$flatten\DUT.\Brain.$17\ctrl_signals[33:32].
Removed top 2 bits (of 3) from wire top.$flatten\DUT.\Brain.$ternary$i8008_core.v:2269$1033_Y.
Removed top 2 bits (of 3) from wire top.$flatten\DUT.\Brain.$ternary$i8008_core.v:2368$1051_Y.
Removed top 29 bits (of 32) from wire top.$flatten\DUT.\SP_SEL.$add$i8008_core.v:2783$1726_Y.
Removed top 29 bits (of 32) from wire top.$flatten\DUT.\SP_SEL.$sub$i8008_core.v:2785$1729_Y.
Removed top 6 bits (of 14) from wire top.$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2715$1653_EN[13:0]$1669.
Removed top 24 bits (of 32) from wire top.$flatten\DUT.\Unit.$add$i8008_core.v:2181$1003_Y.
Removed top 24 bits (of 32) from wire top.$flatten\DUT.\Unit.$sub$i8008_core.v:2182$1004_Y.
Removed top 1 bits (of 8) from wire top.$flatten\convert.$10\seg[7:0].
Removed top 1 bits (of 8) from wire top.$flatten\convert.$11\seg[7:0].
Removed top 1 bits (of 8) from wire top.$flatten\convert.$12\seg[7:0].
Removed top 1 bits (of 8) from wire top.$flatten\convert.$13\seg[7:0].
Removed top 1 bits (of 8) from wire top.$flatten\convert.$14\seg[7:0].
Removed top 1 bits (of 8) from wire top.$flatten\convert.$15\seg[7:0].
Removed top 2 bits (of 8) from wire top.$flatten\convert.$1\seg[7:0].
Removed top 2 bits (of 8) from wire top.$flatten\convert.$2\seg[7:0].
Removed top 1 bits (of 8) from wire top.$flatten\convert.$3\seg[7:0].
Removed top 1 bits (of 8) from wire top.$flatten\convert.$4\seg[7:0].
Removed top 1 bits (of 8) from wire top.$flatten\convert.$5\seg[7:0].
Removed top 1 bits (of 8) from wire top.$flatten\convert.$6\seg[7:0].
Removed top 1 bits (of 8) from wire top.$flatten\convert.$7\seg[7:0].
Removed top 1 bits (of 8) from wire top.$flatten\convert.$8\seg[7:0].
Removed top 1 bits (of 8) from wire top.$flatten\convert.$9\seg[7:0].
Removed top 35 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:888$20_EN[35:0]$95.
Removed top 34 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:890$21_EN[35:0]$98.
Removed top 33 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:892$22_EN[35:0]$101.
Removed top 32 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:894$23_EN[35:0]$104.
Removed top 31 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:896$24_EN[35:0]$107.
Removed top 30 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:898$25_EN[35:0]$110.
Removed top 29 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:900$26_EN[35:0]$113.
Removed top 28 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:902$27_EN[35:0]$116.
Removed top 27 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:904$28_EN[35:0]$119.
Removed top 26 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:906$29_EN[35:0]$122.
Removed top 25 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:908$30_EN[35:0]$125.
Removed top 24 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:910$31_EN[35:0]$128.
Removed top 23 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:912$32_EN[35:0]$131.
Removed top 22 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:914$33_EN[35:0]$134.
Removed top 21 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:916$34_EN[35:0]$137.
Removed top 20 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:918$35_EN[35:0]$140.
Removed top 19 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:920$36_EN[35:0]$143.
Removed top 18 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:922$37_EN[35:0]$146.
Removed top 17 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:924$38_EN[35:0]$149.
Removed top 16 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:926$39_EN[35:0]$152.
Removed top 15 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:928$40_EN[35:0]$155.
Removed top 14 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:930$41_EN[35:0]$158.
Removed top 13 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:932$42_EN[35:0]$161.
Removed top 12 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:934$43_EN[35:0]$164.
Removed top 11 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:936$44_EN[35:0]$167.
Removed top 10 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:938$45_EN[35:0]$170.
Removed top 9 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:940$46_EN[35:0]$173.
Removed top 8 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:942$47_EN[35:0]$176.
Removed top 7 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:944$48_EN[35:0]$179.
Removed top 6 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:946$49_EN[35:0]$182.
Removed top 5 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:948$50_EN[35:0]$185.
Removed top 4 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:950$51_EN[35:0]$188.
Removed top 3 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:952$52_EN[35:0]$191.
Removed top 2 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:954$53_EN[35:0]$194.
Removed top 1 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.cmd_fifo.ram$i8008_core.v:956$54_EN[35:0]$197.
Removed top 17 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1000$74_EN[35:0]$367.
Removed top 16 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1002$75_EN[35:0]$370.
Removed top 15 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1004$76_EN[35:0]$373.
Removed top 14 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1006$77_EN[35:0]$376.
Removed top 13 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1008$78_EN[35:0]$379.
Removed top 12 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1010$79_EN[35:0]$382.
Removed top 11 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1012$80_EN[35:0]$385.
Removed top 10 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1014$81_EN[35:0]$388.
Removed top 9 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1016$82_EN[35:0]$391.
Removed top 8 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1018$83_EN[35:0]$394.
Removed top 7 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1020$84_EN[35:0]$397.
Removed top 6 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1022$85_EN[35:0]$400.
Removed top 5 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1024$86_EN[35:0]$403.
Removed top 4 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1026$87_EN[35:0]$406.
Removed top 3 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1028$88_EN[35:0]$409.
Removed top 2 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1030$89_EN[35:0]$412.
Removed top 1 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:1032$90_EN[35:0]$415.
Removed top 35 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:964$56_EN[35:0]$313.
Removed top 34 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:966$57_EN[35:0]$316.
Removed top 33 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:968$58_EN[35:0]$319.
Removed top 32 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:970$59_EN[35:0]$322.
Removed top 31 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:972$60_EN[35:0]$325.
Removed top 30 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:974$61_EN[35:0]$328.
Removed top 29 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:976$62_EN[35:0]$331.
Removed top 28 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:978$63_EN[35:0]$334.
Removed top 27 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:980$64_EN[35:0]$337.
Removed top 26 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:982$65_EN[35:0]$340.
Removed top 25 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:984$66_EN[35:0]$343.
Removed top 24 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:986$67_EN[35:0]$346.
Removed top 23 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:988$68_EN[35:0]$349.
Removed top 22 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:990$69_EN[35:0]$352.
Removed top 21 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:992$70_EN[35:0]$355.
Removed top 20 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:994$71_EN[35:0]$358.
Removed top 19 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:996$72_EN[35:0]$361.
Removed top 18 bits (of 36) from wire top.$flatten\dbg.$0$memwr$\wbdbg.resp_fifo.ram$i8008_core.v:998$73_EN[35:0]$364.
Removed top 4 bits (of 8) from wire top.$flatten\dbg.$procmux$4263_Y.
Removed top 2 bits (of 12) from wire top.chip_inputs.

2.14. Executing PEEPOPT pass (run peephole optimizers).

2.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 98 unused wires.
<suppressed ~1 debug messages>

2.16. Executing SHARE pass (SAT-based resource sharing).
Found 6 cells in module top that may be considered for resource sharing.
  Analyzing resource sharing options for $flatten\dbg.$shr$i8008_core.v:1113$611 ($shr):
    Found 1 activation_patterns using ctrl signal $flatten\dbg.$lt$i8008_core.v:1112$603_Y.
    Found 1 candidates: $flatten\dbg.$shr$i8008_core.v:1112$606
    Analyzing resource sharing with $flatten\dbg.$shr$i8008_core.v:1112$606 ($shr):
      Found 1 activation_patterns using ctrl signal $flatten\dbg.$lt$i8008_core.v:1112$603_Y.
      Activation pattern for cell $flatten\dbg.$shr$i8008_core.v:1113$611: $flatten\dbg.$lt$i8008_core.v:1112$603_Y = 1'0
      Activation pattern for cell $flatten\dbg.$shr$i8008_core.v:1112$606: $flatten\dbg.$lt$i8008_core.v:1112$603_Y = 1'0
      Size of SAT problem: 0 cells, 416 variables, 1155 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: $flatten\dbg.$lt$i8008_core.v:1112$603_Y = 1'0
  Analyzing resource sharing options for $flatten\dbg.$shr$i8008_core.v:1112$606 ($shr):
    Found 1 activation_patterns using ctrl signal $flatten\dbg.$lt$i8008_core.v:1112$603_Y.
    No candidates found.
  Analyzing resource sharing options for $flatten\dbg.$shl$i8008_core.v:1113$610 ($shl):
    Found 1 activation_patterns using ctrl signal $flatten\dbg.$lt$i8008_core.v:1112$603_Y.
    Found 1 candidates: $flatten\dbg.$shl$i8008_core.v:1112$605
    Analyzing resource sharing with $flatten\dbg.$shl$i8008_core.v:1112$605 ($shl):
      Found 1 activation_patterns using ctrl signal $flatten\dbg.$lt$i8008_core.v:1112$603_Y.
      Activation pattern for cell $flatten\dbg.$shl$i8008_core.v:1113$610: $flatten\dbg.$lt$i8008_core.v:1112$603_Y = 1'1
      Activation pattern for cell $flatten\dbg.$shl$i8008_core.v:1112$605: $flatten\dbg.$lt$i8008_core.v:1112$603_Y = 1'1
      Size of SAT problem: 0 cells, 416 variables, 1155 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: $flatten\dbg.$lt$i8008_core.v:1112$603_Y = 1'1
  Analyzing resource sharing options for $flatten\dbg.$shl$i8008_core.v:1112$605 ($shl):
    Found 1 activation_patterns using ctrl signal $flatten\dbg.$lt$i8008_core.v:1112$603_Y.
    No candidates found.
  Analyzing resource sharing options for $flatten\DUT.\rf.$memrd$\rf$i8008_core.v:2673$1764 ($memrd):
    Found 1 activation_patterns using ctrl signal { \DUT.Brain.ctrl_signals [11] \DUT.Brain.ctrl_signals [5] }.
    No candidates found.
  Analyzing resource sharing options for $flatten\DUT.\Stack.$memrd$\rf$i8008_core.v:2719$1720 ($memrd):
    Found 2 activation_patterns using ctrl signal { $flatten\DUT.\Stack.$logic_and$i8008_core.v:2716$1708_Y $flatten\DUT.\Stack.$logic_and$i8008_core.v:2714$1695_Y \DUT.Brain.ctrl_signals [5] \DUT.Brain.ctrl_signals [3] \dbg.chip_reset }.
    No candidates found.

2.17. Executing TECHMAP pass (map to technology primitives).

2.17.1. Executing Verilog-2005 frontend: /Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/cmp2lut.v
Parsing Verilog input from `/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

2.17.2. Continuing TECHMAP pass.
Using template $paramod$145abe87336b813af869805af52840f8eaed9f1a\_90_lut_cmp_ for cells of type $gt.
No more expansions possible.
<suppressed ~62 debug messages>

2.18. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

2.20. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $add$i8008_core.v:1941$961 ($add).
  creating $macc model for $flatten\DUT.\SP_SEL.$add$i8008_core.v:2783$1726 ($add).
  creating $macc model for $flatten\DUT.\SP_SEL.$sub$i8008_core.v:2785$1729 ($sub).
  creating $macc model for $flatten\DUT.\Stack.$add$i8008_core.v:2719$1721 ($add).
  creating $macc model for $flatten\DUT.\Unit.$add$i8008_core.v:2181$1003 ($add).
  creating $macc model for $flatten\DUT.\Unit.$add$i8008_core.v:2203$1005 ($add).
  creating $macc model for $flatten\DUT.\Unit.$add$i8008_core.v:2204$1007 ($add).
  creating $macc model for $flatten\DUT.\Unit.$sub$i8008_core.v:2182$1004 ($sub).
  creating $macc model for $flatten\DUT.\Unit.$sub$i8008_core.v:2205$1008 ($sub).
  creating $macc model for $flatten\DUT.\Unit.$sub$i8008_core.v:2206$1010 ($sub).
  creating $macc model for $flatten\dbg.$add$i8008_core.v:1037$528 ($add).
  creating $macc model for $flatten\dbg.$add$i8008_core.v:1038$529 ($add).
  creating $macc model for $flatten\dbg.$add$i8008_core.v:1081$572 ($add).
  creating $macc model for $flatten\dbg.$add$i8008_core.v:1082$573 ($add).
  creating $macc model for $flatten\dbg.$add$i8008_core.v:1083$574 ($add).
  creating $macc model for $flatten\dbg.$add$i8008_core.v:1092$583 ($add).
  creating $macc model for $flatten\dbg.$add$i8008_core.v:1093$584 ($add).
  creating $macc model for $flatten\dbg.$add$i8008_core.v:1094$585 ($add).
  creating $macc model for $flatten\dbg.$add$i8008_core.v:1103$594 ($add).
  creating $macc model for $flatten\dbg.$add$i8008_core.v:1117$616 ($add).
  creating $macc model for $flatten\dbg.$neg$i8008_core.v:1109$600 ($neg).
  creating $macc model for $flatten\dbg.$neg$i8008_core.v:1112$604 ($neg).
  creating $macc model for $flatten\dbg.$sub$i8008_core.v:1080$571 ($sub).
  creating $macc model for $flatten\dbg.$sub$i8008_core.v:1091$582 ($sub).
  creating $macc model for $flatten\dbg.$sub$i8008_core.v:1102$593 ($sub).
  creating $macc model for $flatten\dbg.$sub$i8008_core.v:1115$614 ($sub).
  creating $macc model for $flatten\dbg.$sub$i8008_core.v:1116$615 ($sub).
  creating $macc model for $flatten\dbg.$sub$i8008_core.v:1124$623 ($sub).
  creating $macc model for $flatten\dbg.$sub$i8008_core.v:1125$624 ($sub).
  creating $alu model for $macc $flatten\dbg.$sub$i8008_core.v:1125$624.
  creating $alu model for $macc $flatten\dbg.$sub$i8008_core.v:1124$623.
  creating $alu model for $macc $flatten\dbg.$sub$i8008_core.v:1116$615.
  creating $alu model for $macc $flatten\dbg.$sub$i8008_core.v:1115$614.
  creating $alu model for $macc $flatten\dbg.$sub$i8008_core.v:1102$593.
  creating $alu model for $macc $flatten\dbg.$sub$i8008_core.v:1091$582.
  creating $alu model for $macc $flatten\dbg.$sub$i8008_core.v:1080$571.
  creating $alu model for $macc $flatten\dbg.$neg$i8008_core.v:1112$604.
  creating $alu model for $macc $flatten\dbg.$neg$i8008_core.v:1109$600.
  creating $alu model for $macc $flatten\dbg.$add$i8008_core.v:1117$616.
  creating $alu model for $macc $flatten\dbg.$add$i8008_core.v:1103$594.
  creating $alu model for $macc $flatten\dbg.$add$i8008_core.v:1094$585.
  creating $alu model for $macc $flatten\dbg.$add$i8008_core.v:1093$584.
  creating $alu model for $macc $flatten\dbg.$add$i8008_core.v:1092$583.
  creating $alu model for $macc $flatten\dbg.$add$i8008_core.v:1083$574.
  creating $alu model for $macc $flatten\dbg.$add$i8008_core.v:1082$573.
  creating $alu model for $macc $flatten\dbg.$add$i8008_core.v:1081$572.
  creating $alu model for $macc $flatten\dbg.$add$i8008_core.v:1038$529.
  creating $alu model for $macc $flatten\dbg.$add$i8008_core.v:1037$528.
  creating $alu model for $macc $flatten\DUT.\Unit.$sub$i8008_core.v:2206$1010.
  creating $alu model for $macc $flatten\DUT.\Unit.$sub$i8008_core.v:2205$1008.
  creating $alu model for $macc $flatten\DUT.\Unit.$sub$i8008_core.v:2182$1004.
  creating $alu model for $macc $flatten\DUT.\Unit.$add$i8008_core.v:2204$1007.
  creating $alu model for $macc $flatten\DUT.\Unit.$add$i8008_core.v:2203$1005.
  creating $alu model for $macc $flatten\DUT.\Unit.$add$i8008_core.v:2181$1003.
  creating $alu model for $macc $flatten\DUT.\Stack.$add$i8008_core.v:2719$1721.
  creating $alu model for $macc $flatten\DUT.\SP_SEL.$sub$i8008_core.v:2785$1729.
  creating $alu model for $macc $flatten\DUT.\SP_SEL.$add$i8008_core.v:2783$1726.
  creating $alu model for $macc $add$i8008_core.v:1941$961.
  creating $alu model for $flatten\dbg.$lt$i8008_core.v:1112$603 ($lt): new $alu
  creating $alu cell for $flatten\dbg.$lt$i8008_core.v:1112$603: $auto$alumacc.cc:485:replace_alu$6027
  creating $alu cell for $add$i8008_core.v:1941$961: $auto$alumacc.cc:485:replace_alu$6040
  creating $alu cell for $flatten\DUT.\SP_SEL.$add$i8008_core.v:2783$1726: $auto$alumacc.cc:485:replace_alu$6043
  creating $alu cell for $flatten\DUT.\SP_SEL.$sub$i8008_core.v:2785$1729: $auto$alumacc.cc:485:replace_alu$6046
  creating $alu cell for $flatten\DUT.\Stack.$add$i8008_core.v:2719$1721: $auto$alumacc.cc:485:replace_alu$6049
  creating $alu cell for $flatten\DUT.\Unit.$add$i8008_core.v:2181$1003: $auto$alumacc.cc:485:replace_alu$6052
  creating $alu cell for $flatten\DUT.\Unit.$add$i8008_core.v:2203$1005: $auto$alumacc.cc:485:replace_alu$6055
  creating $alu cell for $flatten\DUT.\Unit.$add$i8008_core.v:2204$1007: $auto$alumacc.cc:485:replace_alu$6058
  creating $alu cell for $flatten\DUT.\Unit.$sub$i8008_core.v:2182$1004: $auto$alumacc.cc:485:replace_alu$6061
  creating $alu cell for $flatten\DUT.\Unit.$sub$i8008_core.v:2205$1008: $auto$alumacc.cc:485:replace_alu$6064
  creating $alu cell for $flatten\DUT.\Unit.$sub$i8008_core.v:2206$1010: $auto$alumacc.cc:485:replace_alu$6067
  creating $alu cell for $flatten\dbg.$add$i8008_core.v:1037$528: $auto$alumacc.cc:485:replace_alu$6070
  creating $alu cell for $flatten\dbg.$add$i8008_core.v:1038$529: $auto$alumacc.cc:485:replace_alu$6073
  creating $alu cell for $flatten\dbg.$add$i8008_core.v:1081$572: $auto$alumacc.cc:485:replace_alu$6076
  creating $alu cell for $flatten\dbg.$add$i8008_core.v:1082$573: $auto$alumacc.cc:485:replace_alu$6079
  creating $alu cell for $flatten\dbg.$add$i8008_core.v:1083$574: $auto$alumacc.cc:485:replace_alu$6082
  creating $alu cell for $flatten\dbg.$add$i8008_core.v:1092$583: $auto$alumacc.cc:485:replace_alu$6085
  creating $alu cell for $flatten\dbg.$add$i8008_core.v:1093$584: $auto$alumacc.cc:485:replace_alu$6088
  creating $alu cell for $flatten\dbg.$add$i8008_core.v:1094$585: $auto$alumacc.cc:485:replace_alu$6091
  creating $alu cell for $flatten\dbg.$add$i8008_core.v:1103$594: $auto$alumacc.cc:485:replace_alu$6094
  creating $alu cell for $flatten\dbg.$add$i8008_core.v:1117$616: $auto$alumacc.cc:485:replace_alu$6097
  creating $alu cell for $flatten\dbg.$neg$i8008_core.v:1109$600: $auto$alumacc.cc:485:replace_alu$6100
  creating $alu cell for $flatten\dbg.$neg$i8008_core.v:1112$604: $auto$alumacc.cc:485:replace_alu$6103
  creating $alu cell for $flatten\dbg.$sub$i8008_core.v:1080$571: $auto$alumacc.cc:485:replace_alu$6106
  creating $alu cell for $flatten\dbg.$sub$i8008_core.v:1091$582: $auto$alumacc.cc:485:replace_alu$6109
  creating $alu cell for $flatten\dbg.$sub$i8008_core.v:1102$593: $auto$alumacc.cc:485:replace_alu$6112
  creating $alu cell for $flatten\dbg.$sub$i8008_core.v:1115$614: $auto$alumacc.cc:485:replace_alu$6115
  creating $alu cell for $flatten\dbg.$sub$i8008_core.v:1116$615: $auto$alumacc.cc:485:replace_alu$6118
  creating $alu cell for $flatten\dbg.$sub$i8008_core.v:1124$623: $auto$alumacc.cc:485:replace_alu$6121
  creating $alu cell for $flatten\dbg.$sub$i8008_core.v:1125$624: $auto$alumacc.cc:485:replace_alu$6124
  created 30 $alu and 0 $macc cells.

2.21. Executing OPT pass (performing simple optimizations).

2.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~2 debug messages>

2.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.21.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~308 debug messages>

2.21.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.21.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.21.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\dbg.$procdff$5102 ($dff) from module top (D = \dbg._0224_ [9:8], Q = \dbg.wbdbg.uart_rx.counter [9:8], rval = 2'00).
Adding SRST signal on $flatten\dbg.$procdff$5096 ($dff) from module top (D = \dbg._0243_ [9:8], Q = \dbg.wbdbg.uart_tx.counter [9:8], rval = 2'00).

2.21.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 2 unused wires.
<suppressed ~2 debug messages>

2.21.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.21.9. Rerunning OPT passes. (Maybe there is more to do..)

2.21.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~308 debug messages>

2.21.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.21.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.21.13. Executing OPT_DFF pass (perform DFF optimizations).

2.21.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.21.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.21.16. Finished OPT passes. (There is nothing left to do.)

2.22. Executing MEMORY pass.

2.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 2534 transformations.

2.22.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 1309 transformations.

2.22.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing top.DUT.Stack.rf write port 0.
  Analyzing top.DUT.Stack.rf write port 1.
  Analyzing top.DUT.Stack.rf write port 2.
  Analyzing top.DUT.Stack.rf write port 3.
  Analyzing top.DUT.Stack.rf write port 4.
  Analyzing top.DUT.Stack.rf write port 5.
  Analyzing top.DUT.Stack.rf write port 6.
  Analyzing top.DUT.Stack.rf write port 7.
  Analyzing top.DUT.Stack.rf write port 8.
  Analyzing top.DUT.Stack.rf write port 9.
  Analyzing top.DUT.Stack.rf write port 10.
  Analyzing top.DUT.rf.rf write port 0.
  Analyzing top.DUT.rf.rf write port 1.
  Analyzing top.DUT.rf.rf write port 2.
  Analyzing top.DUT.rf.rf write port 3.
  Analyzing top.DUT.rf.rf write port 4.
  Analyzing top.DUT.rf.rf write port 5.
  Analyzing top.DUT.rf.rf write port 6.
  Analyzing top.DUT.rf.rf write port 7.
  Analyzing top.dbg.wbdbg.cmd_fifo.ram write port 0.
  Analyzing top.dbg.wbdbg.cmd_fifo.ram write port 1.
  Analyzing top.dbg.wbdbg.cmd_fifo.ram write port 2.
  Analyzing top.dbg.wbdbg.cmd_fifo.ram write port 3.
  Analyzing top.dbg.wbdbg.cmd_fifo.ram write port 4.
  Analyzing top.dbg.wbdbg.cmd_fifo.ram write port 5.
  Analyzing top.dbg.wbdbg.cmd_fifo.ram write port 6.
  Analyzing top.dbg.wbdbg.cmd_fifo.ram write port 7.
  Analyzing top.dbg.wbdbg.cmd_fifo.ram write port 8.
  Analyzing top.dbg.wbdbg.cmd_fifo.ram write port 9.
  Analyzing top.dbg.wbdbg.cmd_fifo.ram write port 10.
  Analyzing top.dbg.wbdbg.cmd_fifo.ram write port 11.
  Analyzing top.dbg.wbdbg.cmd_fifo.ram write port 12.
  Analyzing top.dbg.wbdbg.cmd_fifo.ram write port 13.
  Analyzing top.dbg.wbdbg.cmd_fifo.ram write port 14.
  Analyzing top.dbg.wbdbg.cmd_fifo.ram write port 15.
  Analyzing top.dbg.wbdbg.cmd_fifo.ram write port 16.
  Analyzing top.dbg.wbdbg.cmd_fifo.ram write port 17.
  Analyzing top.dbg.wbdbg.cmd_fifo.ram write port 18.
  Analyzing top.dbg.wbdbg.cmd_fifo.ram write port 19.
  Analyzing top.dbg.wbdbg.cmd_fifo.ram write port 20.
  Analyzing top.dbg.wbdbg.cmd_fifo.ram write port 21.
  Analyzing top.dbg.wbdbg.cmd_fifo.ram write port 22.
  Analyzing top.dbg.wbdbg.cmd_fifo.ram write port 23.
  Analyzing top.dbg.wbdbg.cmd_fifo.ram write port 24.
  Analyzing top.dbg.wbdbg.cmd_fifo.ram write port 25.
  Analyzing top.dbg.wbdbg.cmd_fifo.ram write port 26.
  Analyzing top.dbg.wbdbg.cmd_fifo.ram write port 27.
  Analyzing top.dbg.wbdbg.cmd_fifo.ram write port 28.
  Analyzing top.dbg.wbdbg.cmd_fifo.ram write port 29.
  Analyzing top.dbg.wbdbg.cmd_fifo.ram write port 30.
  Analyzing top.dbg.wbdbg.cmd_fifo.ram write port 31.
  Analyzing top.dbg.wbdbg.cmd_fifo.ram write port 32.
  Analyzing top.dbg.wbdbg.cmd_fifo.ram write port 33.
  Analyzing top.dbg.wbdbg.cmd_fifo.ram write port 34.
  Analyzing top.dbg.wbdbg.cmd_fifo.ram write port 35.
  Analyzing top.dbg.wbdbg.resp_fifo.ram write port 0.
  Analyzing top.dbg.wbdbg.resp_fifo.ram write port 1.
  Analyzing top.dbg.wbdbg.resp_fifo.ram write port 2.
  Analyzing top.dbg.wbdbg.resp_fifo.ram write port 3.
  Analyzing top.dbg.wbdbg.resp_fifo.ram write port 4.
  Analyzing top.dbg.wbdbg.resp_fifo.ram write port 5.
  Analyzing top.dbg.wbdbg.resp_fifo.ram write port 6.
  Analyzing top.dbg.wbdbg.resp_fifo.ram write port 7.
  Analyzing top.dbg.wbdbg.resp_fifo.ram write port 8.
  Analyzing top.dbg.wbdbg.resp_fifo.ram write port 9.
  Analyzing top.dbg.wbdbg.resp_fifo.ram write port 10.
  Analyzing top.dbg.wbdbg.resp_fifo.ram write port 11.
  Analyzing top.dbg.wbdbg.resp_fifo.ram write port 12.
  Analyzing top.dbg.wbdbg.resp_fifo.ram write port 13.
  Analyzing top.dbg.wbdbg.resp_fifo.ram write port 14.
  Analyzing top.dbg.wbdbg.resp_fifo.ram write port 15.
  Analyzing top.dbg.wbdbg.resp_fifo.ram write port 16.
  Analyzing top.dbg.wbdbg.resp_fifo.ram write port 17.
  Analyzing top.dbg.wbdbg.resp_fifo.ram write port 18.
  Analyzing top.dbg.wbdbg.resp_fifo.ram write port 19.
  Analyzing top.dbg.wbdbg.resp_fifo.ram write port 20.
  Analyzing top.dbg.wbdbg.resp_fifo.ram write port 21.
  Analyzing top.dbg.wbdbg.resp_fifo.ram write port 22.
  Analyzing top.dbg.wbdbg.resp_fifo.ram write port 23.
  Analyzing top.dbg.wbdbg.resp_fifo.ram write port 24.
  Analyzing top.dbg.wbdbg.resp_fifo.ram write port 25.
  Analyzing top.dbg.wbdbg.resp_fifo.ram write port 26.
  Analyzing top.dbg.wbdbg.resp_fifo.ram write port 27.
  Analyzing top.dbg.wbdbg.resp_fifo.ram write port 28.
  Analyzing top.dbg.wbdbg.resp_fifo.ram write port 29.
  Analyzing top.dbg.wbdbg.resp_fifo.ram write port 30.
  Analyzing top.dbg.wbdbg.resp_fifo.ram write port 31.
  Analyzing top.dbg.wbdbg.resp_fifo.ram write port 32.
  Analyzing top.dbg.wbdbg.resp_fifo.ram write port 33.
  Analyzing top.dbg.wbdbg.resp_fifo.ram write port 34.
  Analyzing top.dbg.wbdbg.resp_fifo.ram write port 35.

2.22.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

2.22.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `\DUT.Stack.rf'[0] in module `\top': no output FF found.
Checking read port `\DUT.rf.rf'[0] in module `\top': no output FF found.
Checking read port `\DUT.rf.rf'[1] in module `\top': FF found, but with a mux select that doesn't seem to correspond to transparency logic.
Checking read port `\dbg.wbdbg.cmd_fifo.ram'[0] in module `\top': merging output FF to cell.
    Write port 0: non-transparent.
    Write port 1: non-transparent.
    Write port 2: non-transparent.
    Write port 3: non-transparent.
    Write port 4: non-transparent.
    Write port 5: non-transparent.
    Write port 6: non-transparent.
    Write port 7: non-transparent.
    Write port 8: non-transparent.
    Write port 9: non-transparent.
    Write port 10: non-transparent.
    Write port 11: non-transparent.
    Write port 12: non-transparent.
    Write port 13: non-transparent.
    Write port 14: non-transparent.
    Write port 15: non-transparent.
    Write port 16: non-transparent.
    Write port 17: non-transparent.
    Write port 18: non-transparent.
    Write port 19: non-transparent.
    Write port 20: non-transparent.
    Write port 21: non-transparent.
    Write port 22: non-transparent.
    Write port 23: non-transparent.
    Write port 24: non-transparent.
    Write port 25: non-transparent.
    Write port 26: non-transparent.
    Write port 27: non-transparent.
    Write port 28: non-transparent.
    Write port 29: non-transparent.
    Write port 30: non-transparent.
    Write port 31: non-transparent.
    Write port 32: non-transparent.
    Write port 33: non-transparent.
    Write port 34: non-transparent.
    Write port 35: non-transparent.
Checking read port `\dbg.wbdbg.resp_fifo.ram'[0] in module `\top': merging output FF to cell.
    Write port 0: non-transparent.
    Write port 1: non-transparent.
    Write port 2: non-transparent.
    Write port 3: non-transparent.
    Write port 4: non-transparent.
    Write port 5: non-transparent.
    Write port 6: non-transparent.
    Write port 7: non-transparent.
    Write port 8: non-transparent.
    Write port 9: non-transparent.
    Write port 10: non-transparent.
    Write port 11: non-transparent.
    Write port 12: non-transparent.
    Write port 13: non-transparent.
    Write port 14: non-transparent.
    Write port 15: non-transparent.
    Write port 16: non-transparent.
    Write port 17: non-transparent.
    Write port 18: non-transparent.
    Write port 19: non-transparent.
    Write port 20: non-transparent.
    Write port 21: non-transparent.
    Write port 22: non-transparent.
    Write port 23: non-transparent.
    Write port 24: non-transparent.
    Write port 25: non-transparent.
    Write port 26: non-transparent.
    Write port 27: non-transparent.
    Write port 28: non-transparent.
    Write port 29: non-transparent.
    Write port 30: non-transparent.
    Write port 31: non-transparent.
    Write port 32: non-transparent.
    Write port 33: non-transparent.
    Write port 34: non-transparent.
    Write port 35: non-transparent.
Checking read port address `\DUT.Stack.rf'[0] in module `\top': merged address FF to cell.
Checking read port address `\DUT.rf.rf'[0] in module `\top': no address FF found.
Checking read port address `\DUT.rf.rf'[1] in module `\top': no address FF found.

2.22.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2 unused cells and 74 unused wires.
<suppressed ~5 debug messages>

2.22.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating write ports of memory top.DUT.Stack.rf by address:
  Merging ports 0, 1 (address 3'000).
  Merging ports 0, 2 (address 3'000).
  Merging ports 0, 3 (address 3'000).
  Merging ports 0, 4 (address 3'000).
  Merging ports 6, 7 (address 3'110).
  Merging ports 8, 9 (address \DUT.SP_SEL.Q).
  Merging ports 8, 10 (address \DUT.SP_SEL.Q).
Consolidating write ports of memory top.DUT.Stack.rf by address:
  Merging ports 1, 2 (address 3'101).
Consolidating write ports of memory top.DUT.Stack.rf by address:
Consolidating read ports of memory top.DUT.rf.rf by address:
Consolidating write ports of memory top.DUT.rf.rf by address:
  Merging ports 0, 1 (address 3'000).
  Merging ports 0, 2 (address 3'000).
  Merging ports 0, 3 (address 3'000).
  Merging ports 0, 4 (address 3'000).
Consolidating write ports of memory top.DUT.rf.rf by address:
Consolidating write ports of memory top.dbg.wbdbg.cmd_fifo.ram by address:
  Merging ports 0, 1 (address \dbg.wbdbg.cmd_fifo.wr_ptr).
  Merging ports 0, 2 (address \dbg.wbdbg.cmd_fifo.wr_ptr).
  Merging ports 0, 3 (address \dbg.wbdbg.cmd_fifo.wr_ptr).
  Merging ports 0, 4 (address \dbg.wbdbg.cmd_fifo.wr_ptr).
  Merging ports 0, 5 (address \dbg.wbdbg.cmd_fifo.wr_ptr).
  Merging ports 0, 6 (address \dbg.wbdbg.cmd_fifo.wr_ptr).
  Merging ports 0, 7 (address \dbg.wbdbg.cmd_fifo.wr_ptr).
  Merging ports 0, 8 (address \dbg.wbdbg.cmd_fifo.wr_ptr).
  Merging ports 0, 9 (address \dbg.wbdbg.cmd_fifo.wr_ptr).
  Merging ports 0, 10 (address \dbg.wbdbg.cmd_fifo.wr_ptr).
  Merging ports 0, 11 (address \dbg.wbdbg.cmd_fifo.wr_ptr).
  Merging ports 0, 12 (address \dbg.wbdbg.cmd_fifo.wr_ptr).
  Merging ports 0, 13 (address \dbg.wbdbg.cmd_fifo.wr_ptr).
  Merging ports 0, 14 (address \dbg.wbdbg.cmd_fifo.wr_ptr).
  Merging ports 0, 15 (address \dbg.wbdbg.cmd_fifo.wr_ptr).
  Merging ports 0, 16 (address \dbg.wbdbg.cmd_fifo.wr_ptr).
  Merging ports 0, 17 (address \dbg.wbdbg.cmd_fifo.wr_ptr).
  Merging ports 0, 18 (address \dbg.wbdbg.cmd_fifo.wr_ptr).
  Merging ports 0, 19 (address \dbg.wbdbg.cmd_fifo.wr_ptr).
  Merging ports 0, 20 (address \dbg.wbdbg.cmd_fifo.wr_ptr).
  Merging ports 0, 21 (address \dbg.wbdbg.cmd_fifo.wr_ptr).
  Merging ports 0, 22 (address \dbg.wbdbg.cmd_fifo.wr_ptr).
  Merging ports 0, 23 (address \dbg.wbdbg.cmd_fifo.wr_ptr).
  Merging ports 0, 24 (address \dbg.wbdbg.cmd_fifo.wr_ptr).
  Merging ports 0, 25 (address \dbg.wbdbg.cmd_fifo.wr_ptr).
  Merging ports 0, 26 (address \dbg.wbdbg.cmd_fifo.wr_ptr).
  Merging ports 0, 27 (address \dbg.wbdbg.cmd_fifo.wr_ptr).
  Merging ports 0, 28 (address \dbg.wbdbg.cmd_fifo.wr_ptr).
  Merging ports 0, 29 (address \dbg.wbdbg.cmd_fifo.wr_ptr).
  Merging ports 0, 30 (address \dbg.wbdbg.cmd_fifo.wr_ptr).
  Merging ports 0, 31 (address \dbg.wbdbg.cmd_fifo.wr_ptr).
  Merging ports 0, 32 (address \dbg.wbdbg.cmd_fifo.wr_ptr).
  Merging ports 0, 33 (address \dbg.wbdbg.cmd_fifo.wr_ptr).
  Merging ports 0, 34 (address \dbg.wbdbg.cmd_fifo.wr_ptr).
  Merging ports 0, 35 (address \dbg.wbdbg.cmd_fifo.wr_ptr).
Consolidating write ports of memory top.dbg.wbdbg.resp_fifo.ram by address:
  Merging ports 0, 1 (address \dbg.wbdbg.resp_fifo.wr_ptr).
  Merging ports 0, 2 (address \dbg.wbdbg.resp_fifo.wr_ptr).
  Merging ports 0, 3 (address \dbg.wbdbg.resp_fifo.wr_ptr).
  Merging ports 0, 4 (address \dbg.wbdbg.resp_fifo.wr_ptr).
  Merging ports 0, 5 (address \dbg.wbdbg.resp_fifo.wr_ptr).
  Merging ports 0, 6 (address \dbg.wbdbg.resp_fifo.wr_ptr).
  Merging ports 0, 7 (address \dbg.wbdbg.resp_fifo.wr_ptr).
  Merging ports 0, 8 (address \dbg.wbdbg.resp_fifo.wr_ptr).
  Merging ports 0, 9 (address \dbg.wbdbg.resp_fifo.wr_ptr).
  Merging ports 0, 10 (address \dbg.wbdbg.resp_fifo.wr_ptr).
  Merging ports 0, 11 (address \dbg.wbdbg.resp_fifo.wr_ptr).
  Merging ports 0, 12 (address \dbg.wbdbg.resp_fifo.wr_ptr).
  Merging ports 0, 13 (address \dbg.wbdbg.resp_fifo.wr_ptr).
  Merging ports 0, 14 (address \dbg.wbdbg.resp_fifo.wr_ptr).
  Merging ports 0, 15 (address \dbg.wbdbg.resp_fifo.wr_ptr).
  Merging ports 0, 16 (address \dbg.wbdbg.resp_fifo.wr_ptr).
  Merging ports 0, 17 (address \dbg.wbdbg.resp_fifo.wr_ptr).
  Merging ports 0, 18 (address \dbg.wbdbg.resp_fifo.wr_ptr).
  Merging ports 0, 19 (address \dbg.wbdbg.resp_fifo.wr_ptr).
  Merging ports 0, 20 (address \dbg.wbdbg.resp_fifo.wr_ptr).
  Merging ports 0, 21 (address \dbg.wbdbg.resp_fifo.wr_ptr).
  Merging ports 0, 22 (address \dbg.wbdbg.resp_fifo.wr_ptr).
  Merging ports 0, 23 (address \dbg.wbdbg.resp_fifo.wr_ptr).
  Merging ports 0, 24 (address \dbg.wbdbg.resp_fifo.wr_ptr).
  Merging ports 0, 25 (address \dbg.wbdbg.resp_fifo.wr_ptr).
  Merging ports 0, 26 (address \dbg.wbdbg.resp_fifo.wr_ptr).
  Merging ports 0, 27 (address \dbg.wbdbg.resp_fifo.wr_ptr).
  Merging ports 0, 28 (address \dbg.wbdbg.resp_fifo.wr_ptr).
  Merging ports 0, 29 (address \dbg.wbdbg.resp_fifo.wr_ptr).
  Merging ports 0, 30 (address \dbg.wbdbg.resp_fifo.wr_ptr).
  Merging ports 0, 31 (address \dbg.wbdbg.resp_fifo.wr_ptr).
  Merging ports 0, 32 (address \dbg.wbdbg.resp_fifo.wr_ptr).
  Merging ports 0, 33 (address \dbg.wbdbg.resp_fifo.wr_ptr).
  Merging ports 0, 34 (address \dbg.wbdbg.resp_fifo.wr_ptr).
  Merging ports 0, 35 (address \dbg.wbdbg.resp_fifo.wr_ptr).
Consolidating write ports of memory top.DUT.Stack.rf using sat-based resource sharing:
Consolidating write ports of memory top.DUT.rf.rf using sat-based resource sharing:
  Checking group clocked with posedge \dbg.chip_clock, width 8: ports 1, 2, 3.
  Common input cone for all EN signals: 31 cells.
  Size of unconstrained SAT problem: 233 variables, 660 clauses
  According to SAT solver sharing of port 1 with port 2 is not possible.
  Merging port 3 into port 1.

2.22.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

2.22.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 85 unused cells and 93 unused wires.
<suppressed ~98 debug messages>

2.22.10. Executing MEMORY_COLLECT pass (generating $mem cells).

2.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.24. Executing MEMORY_LIBMAP pass (mapping memories to cells).
using FF mapping for memory top.DUT.Stack.rf
using FF mapping for memory top.DUT.rf.rf
mapping memory top.dbg.wbdbg.cmd_fifo.ram via $__ICE40_RAM4K_
mapping memory top.dbg.wbdbg.resp_fifo.ram via $__ICE40_RAM4K_
<suppressed ~130 debug messages>

2.25. Executing TECHMAP pass (map to technology primitives).

2.25.1. Executing Verilog-2005 frontend: /Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K_'.
Successfully finished Verilog frontend.

2.25.2. Executing Verilog-2005 frontend: /Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/spram_map.v
Parsing Verilog input from `/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/spram_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_SPRAM_'.
Successfully finished Verilog frontend.

2.25.3. Continuing TECHMAP pass.
Using template $paramod$a1f6b5309207cf102bfb625dccbd224ad06df61d\$__ICE40_RAM4K_ for cells of type $__ICE40_RAM4K_.
No more expansions possible.
<suppressed ~33 debug messages>

2.26. Executing ICE40_BRAMINIT pass.

2.27. Executing OPT pass (performing simple optimizations).

2.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~597 debug messages>

2.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.27.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$5867 ($dffe) from module top (D = \dbg._0630_, Q = \dbg.wbdbg.uart_tx.state, rval = 4'0001).
Adding SRST signal on $auto$ff.cc:266:slice$5860 ($dffe) from module top (D = \dbg._0596_, Q = \dbg.wbdbg.uart_rx.state, rval = 4'0001).
Adding SRST signal on $auto$ff.cc:266:slice$5800 ($dffe) from module top (D = \dbg._0059_ [2:0], Q = \dbg.wbdbg.recieve_state, rval = 3'000).
Adding SRST signal on $auto$ff.cc:266:slice$5719 ($dffe) from module top (D = \dbg._0350_, Q = \dbg.wbdbg.transmit_state, rval = 3'001).

2.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 15 unused cells and 296 unused wires.
<suppressed ~25 debug messages>

2.27.5. Rerunning OPT passes. (Removed registers in this run.)

2.27.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.27.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

2.27.8. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$mem.cc:1614:emulate_read_first$6440 ($dff) from module top (D = \dbg._0162_, Q = $auto$mem.cc:1611:emulate_read_first$6437, rval = 36'000000000000000000000000000000000000).
Adding SRST signal on $auto$mem.cc:1614:emulate_read_first$6240 ($dff) from module top (D = \dbg._0125_, Q = $auto$mem.cc:1611:emulate_read_first$6237, rval = 36'000000000000000000000000000000000000).
Adding SRST signal on $auto$ff.cc:266:slice$6697 ($sdffce) from module top (D = \dbg._0058_ [2:1], Q = \dbg.wbdbg.transmit_state [2:1], rval = 2'00).
Adding SRST signal on $auto$ff.cc:266:slice$6691 ($sdffce) from module top (D = \dbg._0203_ [3:1], Q = \dbg.wbdbg.uart_rx.state [3:1], rval = 3'000).
Adding SRST signal on $auto$ff.cc:266:slice$6690 ($sdffce) from module top (D = \dbg._0233_ [3:1], Q = \dbg.wbdbg.uart_tx.state [3:1], rval = 3'000).

2.27.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2 unused cells and 7 unused wires.
<suppressed ~9 debug messages>

2.27.10. Rerunning OPT passes. (Removed registers in this run.)

2.27.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.27.13. Executing OPT_DFF pass (perform DFF optimizations).

2.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.27.15. Finished fast OPT passes.

2.28. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory \DUT.Stack.rf in module \top:
  created 8 $dff cells and 0 static cells of width 14.
Extracted addr FF from read port 0 of top.DUT.Stack.rf: $\DUT.Stack.rf$rdreg[0]
  read interface: 1 $dff and 7 $mux cells.
  write interface: 32 write mux blocks.
Mapping memory \DUT.rf.rf in module \top:
  created 8 $dff cells and 0 static cells of width 8.
  read interface: 0 $dff and 14 $mux cells.
  write interface: 24 write mux blocks.

2.29. Executing OPT pass (performing simple optimizations).

2.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~86 debug messages>

2.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $auto$memory_share.cc:453:consolidate_wr_using_sat$6234: $auto$rtlil.cc:2403:ReduceOr$6228 -> 1'1
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~167 debug messages>

2.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$2375:
      Old ports: A=3'111, B=3'010, Y=$flatten\DUT.\Brain.$13\next_state[2:0]
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\Brain.$13\next_state[2:0] [0]
      New connections: $flatten\DUT.\Brain.$13\next_state[2:0] [2:1] = { $flatten\DUT.\Brain.$13\next_state[2:0] [0] 1'1 }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$2403:
      Old ports: A=3'010, B=3'111, Y=$flatten\DUT.\Brain.$12\next_state[2:0]
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\Brain.$12\next_state[2:0] [0]
      New connections: $flatten\DUT.\Brain.$12\next_state[2:0] [2:1] = { $flatten\DUT.\Brain.$12\next_state[2:0] [0] 1'1 }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$2535:
      Old ports: A=3'000, B=3'101, Y=$flatten\DUT.\Brain.$70\ctrl_signals[14:11] [3:1]
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\Brain.$70\ctrl_signals[14:11] [1]
      New connections: $flatten\DUT.\Brain.$70\ctrl_signals[14:11] [3:2] = { $flatten\DUT.\Brain.$70\ctrl_signals[14:11] [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$2717:
      Old ports: A=3'000, B=3'110, Y=$flatten\DUT.\Brain.$66\ctrl_signals[14:11] [3:1]
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\Brain.$66\ctrl_signals[14:11] [2]
      New connections: { $flatten\DUT.\Brain.$66\ctrl_signals[14:11] [3] $flatten\DUT.\Brain.$66\ctrl_signals[14:11] [1] } = { $flatten\DUT.\Brain.$66\ctrl_signals[14:11] [2] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$2874:
      Old ports: A=3'111, B=3'010, Y=$flatten\DUT.\Brain.$9\next_state[2:0]
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\Brain.$9\next_state[2:0] [0]
      New connections: $flatten\DUT.\Brain.$9\next_state[2:0] [2:1] = { $flatten\DUT.\Brain.$9\next_state[2:0] [0] 1'1 }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$3201:
      Old ports: A=3'000, B=3'110, Y=$flatten\DUT.\Brain.$40\ctrl_signals[14:11] [3:1]
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\Brain.$40\ctrl_signals[14:11] [2]
      New connections: { $flatten\DUT.\Brain.$40\ctrl_signals[14:11] [3] $flatten\DUT.\Brain.$40\ctrl_signals[14:11] [1] } = { $flatten\DUT.\Brain.$40\ctrl_signals[14:11] [2] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$3260:
      Old ports: A=3'000, B=3'101, Y=$flatten\DUT.\Brain.$45\ctrl_signals[14:11] [3:1]
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\Brain.$45\ctrl_signals[14:11] [1]
      New connections: $flatten\DUT.\Brain.$45\ctrl_signals[14:11] [3:2] = { $flatten\DUT.\Brain.$45\ctrl_signals[14:11] [1] 1'0 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3318: \DUT.Brain.cycle [2:1]
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$3494:
      Old ports: A=3'101, B=3'010, Y=$flatten\DUT.\Brain.$7\next_state[2:0]
      New ports: A=2'01, B=2'10, Y=$flatten\DUT.\Brain.$7\next_state[2:0] [1:0]
      New connections: $flatten\DUT.\Brain.$7\next_state[2:0] [2] = $flatten\DUT.\Brain.$7\next_state[2:0] [0]
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$3789:
      Old ports: A=3'011, B=3'110, Y=$flatten\DUT.\Brain.$5\next_state[2:0]
      New ports: A=2'01, B=2'10, Y={ $flatten\DUT.\Brain.$5\next_state[2:0] [2] $flatten\DUT.\Brain.$5\next_state[2:0] [0] }
      New connections: $flatten\DUT.\Brain.$5\next_state[2:0] [1] = 1'1
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$4000:
      Old ports: A=3'010, B=3'111, Y=$flatten\DUT.\Brain.$6\next_state[2:0]
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\Brain.$6\next_state[2:0] [0]
      New connections: $flatten\DUT.\Brain.$6\next_state[2:0] [2:1] = { $flatten\DUT.\Brain.$6\next_state[2:0] [0] 1'1 }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$4107:
      Old ports: A=9'000000000, B={ $auto$opt_reduce.cc:134:opt_pmux$5505 $flatten\DUT.\Brain.$27\ctrl_signals[24:16] [7:2] $auto$opt_reduce.cc:134:opt_pmux$5479 $auto$opt_reduce.cc:134:opt_pmux$5505 }, Y=$flatten\DUT.\Brain.$4\ctrl_signals[24:16]
      New ports: A=8'00000000, B={ $flatten\DUT.\Brain.$27\ctrl_signals[24:16] [7:2] $auto$opt_reduce.cc:134:opt_pmux$5479 $auto$opt_reduce.cc:134:opt_pmux$5505 }, Y=$flatten\DUT.\Brain.$4\ctrl_signals[24:16] [7:0]
      New connections: $flatten\DUT.\Brain.$4\ctrl_signals[24:16] [8] = $flatten\DUT.\Brain.$4\ctrl_signals[24:16] [0]
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$4160: \DUT.Brain.cycle [0]
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$ternary$i8008_core.v:2414$1053:
      Old ports: A=2'01, B=2'11, Y=$flatten\DUT.\Brain.$ternary$i8008_core.v:2414$1053_Y
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\Brain.$ternary$i8008_core.v:2414$1053_Y [1]
      New connections: $flatten\DUT.\Brain.$ternary$i8008_core.v:2414$1053_Y [0] = 1'1
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$ternary$i8008_core.v:2715$1706:
      Old ports: A=\DUT.Stack.bus, B={ 2'00 \DUT.Stack.bus [5:3] 3'000 }, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2715$1653_DATA[13:0]$1668 [7:0]
      New ports: A={ \DUT.Stack.bus [7:6] \DUT.Stack.bus [2:0] }, B=5'00000, Y={ $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2715$1653_DATA[13:0]$1668 [7:6] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2715$1653_DATA[13:0]$1668 [2:0] }
      New connections: $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2715$1653_DATA[13:0]$1668 [5:3] = \DUT.Stack.bus [5:3]
    Consolidated identical input bits for $mux cell $flatten\convert.$procmux$4967:
      Old ports: A=6'111111, B=6'000000, Y=$auto$wreduce.cc:455:run$5942 [5:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:455:run$5942 [0]
      New connections: $auto$wreduce.cc:455:run$5942 [5:1] = { $auto$wreduce.cc:455:run$5942 [0] $auto$wreduce.cc:455:run$5942 [0] $auto$wreduce.cc:455:run$5942 [0] $auto$wreduce.cc:455:run$5942 [0] $auto$wreduce.cc:455:run$5942 [0] }
    Consolidated identical input bits for $mux cell $flatten\dbg.$ternary$i8008_core.v:1304$789:
      Old ports: A=36'000000000000000000000000000000000000, B=36'111111111111111111111111111111111111, Y=\dbg._0125_
      New ports: A=1'0, B=1'1, Y=\dbg._0125_ [0]
      New connections: \dbg._0125_ [35:1] = { \dbg._0125_ [0] \dbg._0125_ [0] \dbg._0125_ [0] \dbg._0125_ [0] \dbg._0125_ [0] \dbg._0125_ [0] \dbg._0125_ [0] \dbg._0125_ [0] \dbg._0125_ [0] \dbg._0125_ [0] \dbg._0125_ [0] \dbg._0125_ [0] \dbg._0125_ [0] \dbg._0125_ [0] \dbg._0125_ [0] \dbg._0125_ [0] \dbg._0125_ [0] \dbg._0125_ [0] \dbg._0125_ [0] \dbg._0125_ [0] \dbg._0125_ [0] \dbg._0125_ [0] \dbg._0125_ [0] \dbg._0125_ [0] \dbg._0125_ [0] \dbg._0125_ [0] \dbg._0125_ [0] \dbg._0125_ [0] \dbg._0125_ [0] \dbg._0125_ [0] \dbg._0125_ [0] \dbg._0125_ [0] \dbg._0125_ [0] \dbg._0125_ [0] \dbg._0125_ [0] }
    Consolidated identical input bits for $mux cell $flatten\dbg.$ternary$i8008_core.v:1324$809:
      Old ports: A=36'000000000000000000000000000000000000, B=36'111111111111111111111111111111111111, Y=\dbg._0162_
      New ports: A=1'0, B=1'1, Y=\dbg._0162_ [0]
      New connections: \dbg._0162_ [35:1] = { \dbg._0162_ [0] \dbg._0162_ [0] \dbg._0162_ [0] \dbg._0162_ [0] \dbg._0162_ [0] \dbg._0162_ [0] \dbg._0162_ [0] \dbg._0162_ [0] \dbg._0162_ [0] \dbg._0162_ [0] \dbg._0162_ [0] \dbg._0162_ [0] \dbg._0162_ [0] \dbg._0162_ [0] \dbg._0162_ [0] \dbg._0162_ [0] \dbg._0162_ [0] \dbg._0162_ [0] \dbg._0162_ [0] \dbg._0162_ [0] \dbg._0162_ [0] \dbg._0162_ [0] \dbg._0162_ [0] \dbg._0162_ [0] \dbg._0162_ [0] \dbg._0162_ [0] \dbg._0162_ [0] \dbg._0162_ [0] \dbg._0162_ [0] \dbg._0162_ [0] \dbg._0162_ [0] \dbg._0162_ [0] \dbg._0162_ [0] \dbg._0162_ [0] \dbg._0162_ [0] }
    Consolidated identical input bits for $mux cell $flatten\dbg.$ternary$i8008_core.v:1368$853:
      Old ports: A=8'10001011, B=8'00001010, Y=\dbg._0578_ [7:0]
      New ports: A=1'1, B=1'0, Y=\dbg._0578_ [0]
      New connections: \dbg._0578_ [7:1] = { \dbg._0578_ [0] 6'000101 }
    Consolidated identical input bits for $mux cell $flatten\dbg.$ternary$i8008_core.v:1370$855:
      Old ports: A=8'11010000, B=8'00001010, Y=\dbg._0582_ [7:0]
      New ports: A=2'10, B=2'01, Y={ \dbg._0582_ [4] \dbg._0582_ [1] }
      New connections: { \dbg._0582_ [7:5] \dbg._0582_ [3:2] \dbg._0582_ [0] } = { \dbg._0582_ [4] \dbg._0582_ [4] 1'0 \dbg._0582_ [1] 2'00 }
    Consolidated identical input bits for $mux cell $flatten\dbg.$ternary$i8008_core.v:1387$872:
      Old ports: A=8'10001011, B=8'00001010, Y=\dbg._0616_ [7:0]
      New ports: A=1'1, B=1'0, Y=\dbg._0616_ [0]
      New connections: \dbg._0616_ [7:1] = { \dbg._0616_ [0] 6'000101 }
    Consolidated identical input bits for $mux cell $flatten\dbg.$ternary$i8008_core.v:1389$874:
      Old ports: A=8'00001010, B=8'10001011, Y=\dbg._0620_ [7:0]
      New ports: A=1'0, B=1'1, Y=\dbg._0620_ [0]
      New connections: \dbg._0620_ [7:1] = { \dbg._0620_ [0] 6'000101 }
    Consolidated identical input bits for $mux cell $flatten\dbg.$ternary$i8008_core.v:1416$901:
      Old ports: A={ 23'0100000000000000000000x \DUT.Brain.state \DUT.Stack.bus }, B=34'1000000000000000000000000000000000, Y=\dbg._0680_ [33:0]
      New ports: A={ 3'01x \DUT.Brain.state \DUT.Stack.bus }, B=14'10000000000000, Y={ \dbg._0680_ [33:32] \dbg._0680_ [11:0] }
      New connections: \dbg._0680_ [31:12] = 20'00000000000000000000
    Consolidated identical input bits for $mux cell $flatten\dbg.$ternary$i8008_core.v:1417$902:
      Old ports: A=36'001100000000000000000000000000000000, B={ 2'00 \dbg._0680_ [33:0] }, Y=\dbg._0684_
      New ports: A=34'1100000000000000000000000000000000, B=\dbg._0680_ [33:0], Y=\dbg._0684_ [33:0]
      New connections: \dbg._0684_ [35:34] = 2'00
  Optimizing cells in module \top.
    Consolidated identical input bits for $pmux cell $flatten\DUT.\Brain.$procmux$2427:
      Old ports: A=3'111, B={ 3'010 $flatten\DUT.\Brain.$12\next_state[2:0] $flatten\DUT.\Brain.$13\next_state[2:0] }, Y=$flatten\DUT.\Brain.$11\next_state[2:0]
      New ports: A=1'1, B={ 1'0 $flatten\DUT.\Brain.$12\next_state[2:0] [0] $flatten\DUT.\Brain.$13\next_state[2:0] [0] }, Y=$flatten\DUT.\Brain.$11\next_state[2:0] [0]
      New connections: $flatten\DUT.\Brain.$11\next_state[2:0] [2:1] = { $flatten\DUT.\Brain.$11\next_state[2:0] [0] 1'1 }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$3809:
      Old ports: A=$flatten\DUT.\Brain.$5\next_state[2:0], B=3'010, Y=$flatten\DUT.\Brain.$4\next_state[2:0]
      New ports: A={ $flatten\DUT.\Brain.$5\next_state[2:0] [2] $flatten\DUT.\Brain.$5\next_state[2:0] [0] }, B=2'00, Y={ $flatten\DUT.\Brain.$4\next_state[2:0] [2] $flatten\DUT.\Brain.$4\next_state[2:0] [0] }
      New connections: $flatten\DUT.\Brain.$4\next_state[2:0] [1] = 1'1
    Consolidated identical input bits for $mux cell $flatten\convert.$procmux$4964:
      Old ports: A=$auto$wreduce.cc:455:run$5942 [5:0], B=6'111001, Y=$auto$wreduce.cc:455:run$5943 [5:0]
      New ports: A={ $auto$wreduce.cc:455:run$5942 [0] $auto$wreduce.cc:455:run$5942 [0] }, B=2'01, Y=$auto$wreduce.cc:455:run$5943 [1:0]
      New connections: $auto$wreduce.cc:455:run$5943 [5:2] = { $auto$wreduce.cc:455:run$5943 [0] $auto$wreduce.cc:455:run$5943 [0] $auto$wreduce.cc:455:run$5943 [0] $auto$wreduce.cc:455:run$5943 [1] }
    Consolidated identical input bits for $mux cell $flatten\dbg.$ternary$i8008_core.v:1417$902:
      Old ports: A=34'1100000000000000000000000000000000, B=\dbg._0680_ [33:0], Y=\dbg._0684_ [33:0]
      New ports: A=14'11000000000000, B={ \dbg._0680_ [33:32] \dbg._0680_ [11:0] }, Y={ \dbg._0684_ [33:32] \dbg._0684_ [11:0] }
      New connections: \dbg._0684_ [31:12] = 20'00000000000000000000
  Optimizing cells in module \top.
    Consolidated identical input bits for $pmux cell $flatten\DUT.\Brain.$procmux$3840:
      Old ports: A=3'111, B={ $flatten\DUT.\Brain.$4\next_state[2:0] $flatten\DUT.\Brain.$6\next_state[2:0] 3'010 }, Y=$flatten\DUT.\Brain.$3\next_state[2:0]
      New ports: A=2'11, B={ $flatten\DUT.\Brain.$4\next_state[2:0] [2] $flatten\DUT.\Brain.$4\next_state[2:0] [0] $flatten\DUT.\Brain.$6\next_state[2:0] [0] $flatten\DUT.\Brain.$6\next_state[2:0] [0] 2'00 }, Y={ $flatten\DUT.\Brain.$3\next_state[2:0] [2] $flatten\DUT.\Brain.$3\next_state[2:0] [0] }
      New connections: $flatten\DUT.\Brain.$3\next_state[2:0] [1] = 1'1
    Consolidated identical input bits for $mux cell $flatten\convert.$procmux$4961:
      Old ports: A={ 1'1 $auto$wreduce.cc:455:run$5943 [5:0] }, B=7'0100100, Y=$auto$wreduce.cc:455:run$5944 [6:0]
      New ports: A={ 1'1 $auto$wreduce.cc:455:run$5943 [0] $auto$wreduce.cc:455:run$5943 [1] $auto$wreduce.cc:455:run$5943 [1:0] }, B=5'01100, Y={ $auto$wreduce.cc:455:run$5944 [6:5] $auto$wreduce.cc:455:run$5944 [2:0] }
      New connections: $auto$wreduce.cc:455:run$5944 [4:3] = { $auto$wreduce.cc:455:run$5944 [0] $auto$wreduce.cc:455:run$5944 [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\convert.$procmux$4958:
      Old ports: A=$auto$wreduce.cc:455:run$5944 [6:0], B=7'0110000, Y=$auto$wreduce.cc:455:run$5945 [6:0]
      New ports: A={ $auto$wreduce.cc:455:run$5944 [6:5] $auto$wreduce.cc:455:run$5944 [0] $auto$wreduce.cc:455:run$5944 [2:0] }, B=6'011000, Y={ $auto$wreduce.cc:455:run$5945 [6:4] $auto$wreduce.cc:455:run$5945 [2:0] }
      New connections: $auto$wreduce.cc:455:run$5945 [3] = $auto$wreduce.cc:455:run$5945 [0]
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\convert.$procmux$4955:
      Old ports: A=$auto$wreduce.cc:455:run$5945 [6:0], B=7'0011001, Y=$auto$wreduce.cc:455:run$5946 [6:0]
      New ports: A={ $auto$wreduce.cc:455:run$5945 [6:4] $auto$wreduce.cc:455:run$5945 [2:0] }, B=6'001001, Y={ $auto$wreduce.cc:455:run$5946 [6:4] $auto$wreduce.cc:455:run$5946 [2:0] }
      New connections: $auto$wreduce.cc:455:run$5946 [3] = $auto$wreduce.cc:455:run$5946 [0]
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\convert.$procmux$4952:
      Old ports: A=$auto$wreduce.cc:455:run$5946 [6:0], B=7'0010010, Y=$auto$wreduce.cc:455:run$5947 [6:0]
      New ports: A={ $auto$wreduce.cc:455:run$5946 [6:4] $auto$wreduce.cc:455:run$5946 [2:0] }, B=6'001010, Y={ $auto$wreduce.cc:455:run$5947 [6:4] $auto$wreduce.cc:455:run$5947 [2:0] }
      New connections: $auto$wreduce.cc:455:run$5947 [3] = $auto$wreduce.cc:455:run$5947 [0]
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\convert.$procmux$4949:
      Old ports: A=$auto$wreduce.cc:455:run$5947 [6:0], B=7'0000010, Y=$auto$wreduce.cc:455:run$5948 [6:0]
      New ports: A={ $auto$wreduce.cc:455:run$5947 [6:4] $auto$wreduce.cc:455:run$5947 [2:0] }, B=6'000010, Y={ $auto$wreduce.cc:455:run$5948 [6:4] $auto$wreduce.cc:455:run$5948 [2:0] }
      New connections: $auto$wreduce.cc:455:run$5948 [3] = $auto$wreduce.cc:455:run$5948 [0]
  Optimizing cells in module \top.
Performed a total of 34 changes.

2.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

2.29.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $\DUT.Stack.rf$rdreg[0] ($dff) from module top (D = $auto$rtlil.cc:2496:Mux$6214, Q = $\DUT.Stack.rf$rdreg[0]$q, rval = 3'000).

2.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 120 unused wires.
<suppressed ~2 debug messages>

2.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.29.9. Rerunning OPT passes. (Maybe there is more to do..)

2.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~167 debug messages>

2.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.29.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $memory\DUT.rf.rf[7]$6933 ($dff) from module top (D = $auto$rtlil.cc:2496:Mux$6232, Q = \DUT.rf.rf[7]).
Adding SRST signal on $memory\DUT.rf.rf[6]$6931 ($dff) from module top (D = $memory\DUT.rf.rf$wrmux[6][1][0]$y$7112, Q = \DUT.rf.rf[6], rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$7139 ($sdff) from module top (D = $auto$rtlil.cc:2496:Mux$6232, Q = \DUT.rf.rf[6]).
Adding EN signal on $memory\DUT.rf.rf[5]$6929 ($dff) from module top (D = $auto$rtlil.cc:2496:Mux$6232, Q = \DUT.rf.rf[5]).
Adding EN signal on $memory\DUT.rf.rf[4]$6927 ($dff) from module top (D = $memory\DUT.rf.rf$wrmux[4][1][0]$y$7076, Q = \DUT.rf.rf[4]).
Adding EN signal on $memory\DUT.rf.rf[3]$6925 ($dff) from module top (D = $memory\DUT.rf.rf$wrmux[3][1][0]$y$7056, Q = \DUT.rf.rf[3]).
Adding EN signal on $memory\DUT.rf.rf[2]$6923 ($dff) from module top (D = $memory\DUT.rf.rf$wrmux[2][1][0]$y$7038, Q = \DUT.rf.rf[2]).
Adding EN signal on $memory\DUT.rf.rf[1]$6921 ($dff) from module top (D = $memory\DUT.rf.rf$wrmux[1][1][0]$y$7016, Q = \DUT.rf.rf[1]).
Adding EN signal on $memory\DUT.rf.rf[0]$6919 ($dff) from module top (D = $memory\DUT.rf.rf$wrmux[0][1][0]$y$6994, Q = \DUT.rf.rf[0]).
Adding EN signal on $memory\DUT.Stack.rf[7]$6726 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[7][2][8]$y$6918, Q = \DUT.Stack.rf[7] [13:8]).
Adding EN signal on $memory\DUT.Stack.rf[7]$6726 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[7][2][0]$y$6914, Q = \DUT.Stack.rf[7] [7:0]).
Adding EN signal on $memory\DUT.Stack.rf[6]$6724 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[6][2][0]$y$6896, Q = \DUT.Stack.rf[6] [7:0]).
Adding EN signal on $memory\DUT.Stack.rf[6]$6724 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[6][2][8]$y$6900, Q = \DUT.Stack.rf[6] [13:8]).
Adding EN signal on $memory\DUT.Stack.rf[5]$6722 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[5][2][0]$y$6876, Q = \DUT.Stack.rf[5] [7:0]).
Adding EN signal on $memory\DUT.Stack.rf[5]$6722 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[5][2][8]$y$6880, Q = \DUT.Stack.rf[5] [13:8]).
Adding EN signal on $memory\DUT.Stack.rf[4]$6720 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[4][2][8]$y$6862, Q = \DUT.Stack.rf[4] [13:8]).
Adding EN signal on $memory\DUT.Stack.rf[4]$6720 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[4][2][0]$y$6858, Q = \DUT.Stack.rf[4] [7:0]).
Adding EN signal on $memory\DUT.Stack.rf[3]$6718 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[3][2][8]$y$6838, Q = \DUT.Stack.rf[3] [13:8]).
Adding EN signal on $memory\DUT.Stack.rf[3]$6718 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[3][2][0]$y$6834, Q = \DUT.Stack.rf[3] [7:0]).
Adding EN signal on $memory\DUT.Stack.rf[2]$6716 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[2][2][8]$y$6820, Q = \DUT.Stack.rf[2] [13:8]).
Adding EN signal on $memory\DUT.Stack.rf[2]$6716 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[2][2][0]$y$6816, Q = \DUT.Stack.rf[2] [7:0]).
Adding EN signal on $memory\DUT.Stack.rf[1]$6714 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[1][2][0]$y$6794, Q = \DUT.Stack.rf[1] [7:0]).
Adding EN signal on $memory\DUT.Stack.rf[1]$6714 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[1][2][8]$y$6798, Q = \DUT.Stack.rf[1] [13:8]).
Adding EN signal on $memory\DUT.Stack.rf[0]$6712 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[0][2][0]$y$6774, Q = \DUT.Stack.rf[0] [7:0]).
Adding EN signal on $memory\DUT.Stack.rf[0]$6712 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[0][2][8]$y$6778, Q = \DUT.Stack.rf[0] [13:8]).
Adding SRST signal on $auto$ff.cc:266:slice$6134 ($dff) from module top (D = \dbg._0243_ [6:1], Q = \dbg.wbdbg.uart_tx.counter [6:1], rval = 6'000101).
Adding SRST signal on $auto$ff.cc:266:slice$6130 ($dff) from module top (D = \dbg._0580_ [0], Q = \dbg.wbdbg.uart_rx.counter [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6130 ($dff) from module top (D = { \dbg._0224_ [5] \dbg._0224_ [2] }, Q = { \dbg.wbdbg.uart_rx.counter [5] \dbg.wbdbg.uart_rx.counter [2] }, rval = 2'00).
Setting constant 0-bit at position 12 on $auto$ff.cc:266:slice$5887 ($sdffe) from module top.
Setting constant 0-bit at position 13 on $auto$ff.cc:266:slice$5887 ($sdffe) from module top.
Setting constant 0-bit at position 14 on $auto$ff.cc:266:slice$5887 ($sdffe) from module top.
Setting constant 0-bit at position 15 on $auto$ff.cc:266:slice$5887 ($sdffe) from module top.
Setting constant 0-bit at position 16 on $auto$ff.cc:266:slice$5887 ($sdffe) from module top.
Setting constant 0-bit at position 17 on $auto$ff.cc:266:slice$5887 ($sdffe) from module top.
Setting constant 0-bit at position 18 on $auto$ff.cc:266:slice$5887 ($sdffe) from module top.
Setting constant 0-bit at position 19 on $auto$ff.cc:266:slice$5887 ($sdffe) from module top.
Setting constant 0-bit at position 20 on $auto$ff.cc:266:slice$5887 ($sdffe) from module top.
Setting constant 0-bit at position 21 on $auto$ff.cc:266:slice$5887 ($sdffe) from module top.
Setting constant 0-bit at position 22 on $auto$ff.cc:266:slice$5887 ($sdffe) from module top.
Setting constant 0-bit at position 23 on $auto$ff.cc:266:slice$5887 ($sdffe) from module top.
Setting constant 0-bit at position 24 on $auto$ff.cc:266:slice$5887 ($sdffe) from module top.
Setting constant 0-bit at position 25 on $auto$ff.cc:266:slice$5887 ($sdffe) from module top.
Setting constant 0-bit at position 26 on $auto$ff.cc:266:slice$5887 ($sdffe) from module top.
Setting constant 0-bit at position 27 on $auto$ff.cc:266:slice$5887 ($sdffe) from module top.
Setting constant 0-bit at position 28 on $auto$ff.cc:266:slice$5887 ($sdffe) from module top.
Setting constant 0-bit at position 29 on $auto$ff.cc:266:slice$5887 ($sdffe) from module top.
Setting constant 0-bit at position 30 on $auto$ff.cc:266:slice$5887 ($sdffe) from module top.
Setting constant 0-bit at position 31 on $auto$ff.cc:266:slice$5887 ($sdffe) from module top.
Setting constant 0-bit at position 35 on $auto$ff.cc:266:slice$5887 ($sdffe) from module top.

2.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 4 unused cells and 4 unused wires.
<suppressed ~5 debug messages>

2.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~21 debug messages>

2.29.16. Rerunning OPT passes. (Maybe there is more to do..)

2.29.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~165 debug messages>

2.29.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory\DUT.Stack.rf$wrmux[0][0][0]$6753:
      Old ports: A=14'x, B=14'00000000000000, Y=$memory\DUT.Stack.rf$wrmux[0][0][0]$y$6754
      New ports: A=1'x, B=1'0, Y=$memory\DUT.Stack.rf$wrmux[0][0][0]$y$6754 [0]
      New connections: $memory\DUT.Stack.rf$wrmux[0][0][0]$y$6754 [13:1] = { $memory\DUT.Stack.rf$wrmux[0][0][0]$y$6754 [0] $memory\DUT.Stack.rf$wrmux[0][0][0]$y$6754 [0] $memory\DUT.Stack.rf$wrmux[0][0][0]$y$6754 [0] $memory\DUT.Stack.rf$wrmux[0][0][0]$y$6754 [0] $memory\DUT.Stack.rf$wrmux[0][0][0]$y$6754 [0] $memory\DUT.Stack.rf$wrmux[0][0][0]$y$6754 [0] $memory\DUT.Stack.rf$wrmux[0][0][0]$y$6754 [0] $memory\DUT.Stack.rf$wrmux[0][0][0]$y$6754 [0] $memory\DUT.Stack.rf$wrmux[0][0][0]$y$6754 [0] $memory\DUT.Stack.rf$wrmux[0][0][0]$y$6754 [0] $memory\DUT.Stack.rf$wrmux[0][0][0]$y$6754 [0] $memory\DUT.Stack.rf$wrmux[0][0][0]$y$6754 [0] $memory\DUT.Stack.rf$wrmux[0][0][0]$y$6754 [0] }
    Consolidated identical input bits for $mux cell $memory\DUT.Stack.rf$wrmux[1][0][0]$6781:
      Old ports: A=14'x, B=14'00000000000000, Y=$memory\DUT.Stack.rf$wrmux[1][0][0]$y$6782
      New ports: A=1'x, B=1'0, Y=$memory\DUT.Stack.rf$wrmux[1][0][0]$y$6782 [0]
      New connections: $memory\DUT.Stack.rf$wrmux[1][0][0]$y$6782 [13:1] = { $memory\DUT.Stack.rf$wrmux[1][0][0]$y$6782 [0] $memory\DUT.Stack.rf$wrmux[1][0][0]$y$6782 [0] $memory\DUT.Stack.rf$wrmux[1][0][0]$y$6782 [0] $memory\DUT.Stack.rf$wrmux[1][0][0]$y$6782 [0] $memory\DUT.Stack.rf$wrmux[1][0][0]$y$6782 [0] $memory\DUT.Stack.rf$wrmux[1][0][0]$y$6782 [0] $memory\DUT.Stack.rf$wrmux[1][0][0]$y$6782 [0] $memory\DUT.Stack.rf$wrmux[1][0][0]$y$6782 [0] $memory\DUT.Stack.rf$wrmux[1][0][0]$y$6782 [0] $memory\DUT.Stack.rf$wrmux[1][0][0]$y$6782 [0] $memory\DUT.Stack.rf$wrmux[1][0][0]$y$6782 [0] $memory\DUT.Stack.rf$wrmux[1][0][0]$y$6782 [0] $memory\DUT.Stack.rf$wrmux[1][0][0]$y$6782 [0] }
    Consolidated identical input bits for $mux cell $memory\DUT.Stack.rf$wrmux[2][0][0]$6801:
      Old ports: A=14'x, B=14'00000000000000, Y=$memory\DUT.Stack.rf$wrmux[2][0][0]$y$6802
      New ports: A=1'x, B=1'0, Y=$memory\DUT.Stack.rf$wrmux[2][0][0]$y$6802 [0]
      New connections: $memory\DUT.Stack.rf$wrmux[2][0][0]$y$6802 [13:1] = { $memory\DUT.Stack.rf$wrmux[2][0][0]$y$6802 [0] $memory\DUT.Stack.rf$wrmux[2][0][0]$y$6802 [0] $memory\DUT.Stack.rf$wrmux[2][0][0]$y$6802 [0] $memory\DUT.Stack.rf$wrmux[2][0][0]$y$6802 [0] $memory\DUT.Stack.rf$wrmux[2][0][0]$y$6802 [0] $memory\DUT.Stack.rf$wrmux[2][0][0]$y$6802 [0] $memory\DUT.Stack.rf$wrmux[2][0][0]$y$6802 [0] $memory\DUT.Stack.rf$wrmux[2][0][0]$y$6802 [0] $memory\DUT.Stack.rf$wrmux[2][0][0]$y$6802 [0] $memory\DUT.Stack.rf$wrmux[2][0][0]$y$6802 [0] $memory\DUT.Stack.rf$wrmux[2][0][0]$y$6802 [0] $memory\DUT.Stack.rf$wrmux[2][0][0]$y$6802 [0] $memory\DUT.Stack.rf$wrmux[2][0][0]$y$6802 [0] }
    Consolidated identical input bits for $mux cell $memory\DUT.Stack.rf$wrmux[3][0][0]$6823:
      Old ports: A=14'x, B=14'00000000000000, Y=$memory\DUT.Stack.rf$wrmux[3][0][0]$y$6824
      New ports: A=1'x, B=1'0, Y=$memory\DUT.Stack.rf$wrmux[3][0][0]$y$6824 [0]
      New connections: $memory\DUT.Stack.rf$wrmux[3][0][0]$y$6824 [13:1] = { $memory\DUT.Stack.rf$wrmux[3][0][0]$y$6824 [0] $memory\DUT.Stack.rf$wrmux[3][0][0]$y$6824 [0] $memory\DUT.Stack.rf$wrmux[3][0][0]$y$6824 [0] $memory\DUT.Stack.rf$wrmux[3][0][0]$y$6824 [0] $memory\DUT.Stack.rf$wrmux[3][0][0]$y$6824 [0] $memory\DUT.Stack.rf$wrmux[3][0][0]$y$6824 [0] $memory\DUT.Stack.rf$wrmux[3][0][0]$y$6824 [0] $memory\DUT.Stack.rf$wrmux[3][0][0]$y$6824 [0] $memory\DUT.Stack.rf$wrmux[3][0][0]$y$6824 [0] $memory\DUT.Stack.rf$wrmux[3][0][0]$y$6824 [0] $memory\DUT.Stack.rf$wrmux[3][0][0]$y$6824 [0] $memory\DUT.Stack.rf$wrmux[3][0][0]$y$6824 [0] $memory\DUT.Stack.rf$wrmux[3][0][0]$y$6824 [0] }
    Consolidated identical input bits for $mux cell $memory\DUT.Stack.rf$wrmux[4][0][0]$6841:
      Old ports: A=14'x, B=14'00000000000000, Y=$memory\DUT.Stack.rf$wrmux[4][0][0]$y$6842
      New ports: A=1'x, B=1'0, Y=$memory\DUT.Stack.rf$wrmux[4][0][0]$y$6842 [0]
      New connections: $memory\DUT.Stack.rf$wrmux[4][0][0]$y$6842 [13:1] = { $memory\DUT.Stack.rf$wrmux[4][0][0]$y$6842 [0] $memory\DUT.Stack.rf$wrmux[4][0][0]$y$6842 [0] $memory\DUT.Stack.rf$wrmux[4][0][0]$y$6842 [0] $memory\DUT.Stack.rf$wrmux[4][0][0]$y$6842 [0] $memory\DUT.Stack.rf$wrmux[4][0][0]$y$6842 [0] $memory\DUT.Stack.rf$wrmux[4][0][0]$y$6842 [0] $memory\DUT.Stack.rf$wrmux[4][0][0]$y$6842 [0] $memory\DUT.Stack.rf$wrmux[4][0][0]$y$6842 [0] $memory\DUT.Stack.rf$wrmux[4][0][0]$y$6842 [0] $memory\DUT.Stack.rf$wrmux[4][0][0]$y$6842 [0] $memory\DUT.Stack.rf$wrmux[4][0][0]$y$6842 [0] $memory\DUT.Stack.rf$wrmux[4][0][0]$y$6842 [0] $memory\DUT.Stack.rf$wrmux[4][0][0]$y$6842 [0] }
    Consolidated identical input bits for $mux cell $memory\DUT.Stack.rf$wrmux[5][1][0]$6869:
      Old ports: A=14'x, B=14'00000000000000, Y=$memory\DUT.Stack.rf$wrmux[5][1][0]$y$6870
      New ports: A=1'x, B=1'0, Y=$memory\DUT.Stack.rf$wrmux[5][1][0]$y$6870 [0]
      New connections: $memory\DUT.Stack.rf$wrmux[5][1][0]$y$6870 [13:1] = { $memory\DUT.Stack.rf$wrmux[5][1][0]$y$6870 [0] $memory\DUT.Stack.rf$wrmux[5][1][0]$y$6870 [0] $memory\DUT.Stack.rf$wrmux[5][1][0]$y$6870 [0] $memory\DUT.Stack.rf$wrmux[5][1][0]$y$6870 [0] $memory\DUT.Stack.rf$wrmux[5][1][0]$y$6870 [0] $memory\DUT.Stack.rf$wrmux[5][1][0]$y$6870 [0] $memory\DUT.Stack.rf$wrmux[5][1][0]$y$6870 [0] $memory\DUT.Stack.rf$wrmux[5][1][0]$y$6870 [0] $memory\DUT.Stack.rf$wrmux[5][1][0]$y$6870 [0] $memory\DUT.Stack.rf$wrmux[5][1][0]$y$6870 [0] $memory\DUT.Stack.rf$wrmux[5][1][0]$y$6870 [0] $memory\DUT.Stack.rf$wrmux[5][1][0]$y$6870 [0] $memory\DUT.Stack.rf$wrmux[5][1][0]$y$6870 [0] }
    Consolidated identical input bits for $mux cell $memory\DUT.Stack.rf$wrmux[6][1][0]$6887:
      Old ports: A=14'x, B=14'00000000000000, Y=$memory\DUT.Stack.rf$wrmux[6][1][0]$y$6888
      New ports: A=1'x, B=1'0, Y=$memory\DUT.Stack.rf$wrmux[6][1][0]$y$6888 [0]
      New connections: $memory\DUT.Stack.rf$wrmux[6][1][0]$y$6888 [13:1] = { $memory\DUT.Stack.rf$wrmux[6][1][0]$y$6888 [0] $memory\DUT.Stack.rf$wrmux[6][1][0]$y$6888 [0] $memory\DUT.Stack.rf$wrmux[6][1][0]$y$6888 [0] $memory\DUT.Stack.rf$wrmux[6][1][0]$y$6888 [0] $memory\DUT.Stack.rf$wrmux[6][1][0]$y$6888 [0] $memory\DUT.Stack.rf$wrmux[6][1][0]$y$6888 [0] $memory\DUT.Stack.rf$wrmux[6][1][0]$y$6888 [0] $memory\DUT.Stack.rf$wrmux[6][1][0]$y$6888 [0] $memory\DUT.Stack.rf$wrmux[6][1][0]$y$6888 [0] $memory\DUT.Stack.rf$wrmux[6][1][0]$y$6888 [0] $memory\DUT.Stack.rf$wrmux[6][1][0]$y$6888 [0] $memory\DUT.Stack.rf$wrmux[6][1][0]$y$6888 [0] $memory\DUT.Stack.rf$wrmux[6][1][0]$y$6888 [0] }
    Consolidated identical input bits for $mux cell $memory\DUT.Stack.rf$wrmux[7][1][0]$6907:
      Old ports: A=14'x, B=14'00000000000000, Y=$memory\DUT.Stack.rf$wrmux[7][1][0]$y$6908
      New ports: A=1'x, B=1'0, Y=$memory\DUT.Stack.rf$wrmux[7][1][0]$y$6908 [0]
      New connections: $memory\DUT.Stack.rf$wrmux[7][1][0]$y$6908 [13:1] = { $memory\DUT.Stack.rf$wrmux[7][1][0]$y$6908 [0] $memory\DUT.Stack.rf$wrmux[7][1][0]$y$6908 [0] $memory\DUT.Stack.rf$wrmux[7][1][0]$y$6908 [0] $memory\DUT.Stack.rf$wrmux[7][1][0]$y$6908 [0] $memory\DUT.Stack.rf$wrmux[7][1][0]$y$6908 [0] $memory\DUT.Stack.rf$wrmux[7][1][0]$y$6908 [0] $memory\DUT.Stack.rf$wrmux[7][1][0]$y$6908 [0] $memory\DUT.Stack.rf$wrmux[7][1][0]$y$6908 [0] $memory\DUT.Stack.rf$wrmux[7][1][0]$y$6908 [0] $memory\DUT.Stack.rf$wrmux[7][1][0]$y$6908 [0] $memory\DUT.Stack.rf$wrmux[7][1][0]$y$6908 [0] $memory\DUT.Stack.rf$wrmux[7][1][0]$y$6908 [0] $memory\DUT.Stack.rf$wrmux[7][1][0]$y$6908 [0] }
    Consolidated identical input bits for $mux cell $memory\DUT.rf.rf$wrmux[0][0][0]$6979:
      Old ports: A=8'x, B=8'00000000, Y=$memory\DUT.rf.rf$wrmux[0][0][0]$y$6980
      New ports: A=1'x, B=1'0, Y=$memory\DUT.rf.rf$wrmux[0][0][0]$y$6980 [0]
      New connections: $memory\DUT.rf.rf$wrmux[0][0][0]$y$6980 [7:1] = { $memory\DUT.rf.rf$wrmux[0][0][0]$y$6980 [0] $memory\DUT.rf.rf$wrmux[0][0][0]$y$6980 [0] $memory\DUT.rf.rf$wrmux[0][0][0]$y$6980 [0] $memory\DUT.rf.rf$wrmux[0][0][0]$y$6980 [0] $memory\DUT.rf.rf$wrmux[0][0][0]$y$6980 [0] $memory\DUT.rf.rf$wrmux[0][0][0]$y$6980 [0] $memory\DUT.rf.rf$wrmux[0][0][0]$y$6980 [0] }
    Consolidated identical input bits for $mux cell $memory\DUT.rf.rf$wrmux[1][0][0]$7007:
      Old ports: A=8'x, B=8'00000000, Y=$memory\DUT.rf.rf$wrmux[1][0][0]$y$7008
      New ports: A=1'x, B=1'0, Y=$memory\DUT.rf.rf$wrmux[1][0][0]$y$7008 [0]
      New connections: $memory\DUT.rf.rf$wrmux[1][0][0]$y$7008 [7:1] = { $memory\DUT.rf.rf$wrmux[1][0][0]$y$7008 [0] $memory\DUT.rf.rf$wrmux[1][0][0]$y$7008 [0] $memory\DUT.rf.rf$wrmux[1][0][0]$y$7008 [0] $memory\DUT.rf.rf$wrmux[1][0][0]$y$7008 [0] $memory\DUT.rf.rf$wrmux[1][0][0]$y$7008 [0] $memory\DUT.rf.rf$wrmux[1][0][0]$y$7008 [0] $memory\DUT.rf.rf$wrmux[1][0][0]$y$7008 [0] }
    Consolidated identical input bits for $mux cell $memory\DUT.rf.rf$wrmux[2][0][0]$7027:
      Old ports: A=8'x, B=8'00000000, Y=$memory\DUT.rf.rf$wrmux[2][0][0]$y$7028
      New ports: A=1'x, B=1'0, Y=$memory\DUT.rf.rf$wrmux[2][0][0]$y$7028 [0]
      New connections: $memory\DUT.rf.rf$wrmux[2][0][0]$y$7028 [7:1] = { $memory\DUT.rf.rf$wrmux[2][0][0]$y$7028 [0] $memory\DUT.rf.rf$wrmux[2][0][0]$y$7028 [0] $memory\DUT.rf.rf$wrmux[2][0][0]$y$7028 [0] $memory\DUT.rf.rf$wrmux[2][0][0]$y$7028 [0] $memory\DUT.rf.rf$wrmux[2][0][0]$y$7028 [0] $memory\DUT.rf.rf$wrmux[2][0][0]$y$7028 [0] $memory\DUT.rf.rf$wrmux[2][0][0]$y$7028 [0] }
    Consolidated identical input bits for $mux cell $memory\DUT.rf.rf$wrmux[3][0][0]$7049:
      Old ports: A=8'x, B=8'00000000, Y=$memory\DUT.rf.rf$wrmux[3][0][0]$y$7050
      New ports: A=1'x, B=1'0, Y=$memory\DUT.rf.rf$wrmux[3][0][0]$y$7050 [0]
      New connections: $memory\DUT.rf.rf$wrmux[3][0][0]$y$7050 [7:1] = { $memory\DUT.rf.rf$wrmux[3][0][0]$y$7050 [0] $memory\DUT.rf.rf$wrmux[3][0][0]$y$7050 [0] $memory\DUT.rf.rf$wrmux[3][0][0]$y$7050 [0] $memory\DUT.rf.rf$wrmux[3][0][0]$y$7050 [0] $memory\DUT.rf.rf$wrmux[3][0][0]$y$7050 [0] $memory\DUT.rf.rf$wrmux[3][0][0]$y$7050 [0] $memory\DUT.rf.rf$wrmux[3][0][0]$y$7050 [0] }
    Consolidated identical input bits for $mux cell $memory\DUT.rf.rf$wrmux[4][0][0]$7065:
      Old ports: A=8'x, B=8'00000000, Y=$memory\DUT.rf.rf$wrmux[4][0][0]$y$7066
      New ports: A=1'x, B=1'0, Y=$memory\DUT.rf.rf$wrmux[4][0][0]$y$7066 [0]
      New connections: $memory\DUT.rf.rf$wrmux[4][0][0]$y$7066 [7:1] = { $memory\DUT.rf.rf$wrmux[4][0][0]$y$7066 [0] $memory\DUT.rf.rf$wrmux[4][0][0]$y$7066 [0] $memory\DUT.rf.rf$wrmux[4][0][0]$y$7066 [0] $memory\DUT.rf.rf$wrmux[4][0][0]$y$7066 [0] $memory\DUT.rf.rf$wrmux[4][0][0]$y$7066 [0] $memory\DUT.rf.rf$wrmux[4][0][0]$y$7066 [0] $memory\DUT.rf.rf$wrmux[4][0][0]$y$7066 [0] }
  Optimizing cells in module \top.
Performed a total of 13 changes.

2.29.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~42 debug messages>
Removed a total of 14 cells.

2.29.20. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 12 on $auto$ff.cc:266:slice$5703 ($dffe) from module top.
Setting constant 0-bit at position 13 on $auto$ff.cc:266:slice$5703 ($dffe) from module top.
Setting constant 0-bit at position 14 on $auto$ff.cc:266:slice$5703 ($dffe) from module top.
Setting constant 0-bit at position 15 on $auto$ff.cc:266:slice$5703 ($dffe) from module top.
Setting constant 0-bit at position 16 on $auto$ff.cc:266:slice$5703 ($dffe) from module top.
Setting constant 0-bit at position 17 on $auto$ff.cc:266:slice$5703 ($dffe) from module top.
Setting constant 0-bit at position 18 on $auto$ff.cc:266:slice$5703 ($dffe) from module top.
Setting constant 0-bit at position 19 on $auto$ff.cc:266:slice$5703 ($dffe) from module top.
Setting constant 0-bit at position 20 on $auto$ff.cc:266:slice$5703 ($dffe) from module top.
Setting constant 0-bit at position 21 on $auto$ff.cc:266:slice$5703 ($dffe) from module top.
Setting constant 0-bit at position 22 on $auto$ff.cc:266:slice$5703 ($dffe) from module top.
Setting constant 0-bit at position 23 on $auto$ff.cc:266:slice$5703 ($dffe) from module top.
Setting constant 0-bit at position 24 on $auto$ff.cc:266:slice$5703 ($dffe) from module top.
Setting constant 0-bit at position 25 on $auto$ff.cc:266:slice$5703 ($dffe) from module top.
Setting constant 0-bit at position 26 on $auto$ff.cc:266:slice$5703 ($dffe) from module top.
Setting constant 0-bit at position 27 on $auto$ff.cc:266:slice$5703 ($dffe) from module top.
Setting constant 0-bit at position 28 on $auto$ff.cc:266:slice$5703 ($dffe) from module top.
Setting constant 0-bit at position 29 on $auto$ff.cc:266:slice$5703 ($dffe) from module top.
Setting constant 0-bit at position 30 on $auto$ff.cc:266:slice$5703 ($dffe) from module top.
Setting constant 0-bit at position 31 on $auto$ff.cc:266:slice$5703 ($dffe) from module top.
Setting constant 0-bit at position 35 on $auto$ff.cc:266:slice$5703 ($dffe) from module top.

2.29.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 14 unused wires.
<suppressed ~1 debug messages>

2.29.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.29.23. Rerunning OPT passes. (Maybe there is more to do..)

2.29.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~158 debug messages>

2.29.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.29.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.29.27. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 12 on $auto$mem.cc:1612:emulate_read_first$6438 ($dff) from module top.
Setting constant 0-bit at position 13 on $auto$mem.cc:1612:emulate_read_first$6438 ($dff) from module top.
Setting constant 0-bit at position 14 on $auto$mem.cc:1612:emulate_read_first$6438 ($dff) from module top.
Setting constant 0-bit at position 15 on $auto$mem.cc:1612:emulate_read_first$6438 ($dff) from module top.
Setting constant 0-bit at position 16 on $auto$mem.cc:1612:emulate_read_first$6438 ($dff) from module top.
Setting constant 0-bit at position 17 on $auto$mem.cc:1612:emulate_read_first$6438 ($dff) from module top.
Setting constant 0-bit at position 18 on $auto$mem.cc:1612:emulate_read_first$6438 ($dff) from module top.
Setting constant 0-bit at position 19 on $auto$mem.cc:1612:emulate_read_first$6438 ($dff) from module top.
Setting constant 0-bit at position 20 on $auto$mem.cc:1612:emulate_read_first$6438 ($dff) from module top.
Setting constant 0-bit at position 21 on $auto$mem.cc:1612:emulate_read_first$6438 ($dff) from module top.
Setting constant 0-bit at position 22 on $auto$mem.cc:1612:emulate_read_first$6438 ($dff) from module top.
Setting constant 0-bit at position 23 on $auto$mem.cc:1612:emulate_read_first$6438 ($dff) from module top.
Setting constant 0-bit at position 24 on $auto$mem.cc:1612:emulate_read_first$6438 ($dff) from module top.
Setting constant 0-bit at position 25 on $auto$mem.cc:1612:emulate_read_first$6438 ($dff) from module top.
Setting constant 0-bit at position 26 on $auto$mem.cc:1612:emulate_read_first$6438 ($dff) from module top.
Setting constant 0-bit at position 27 on $auto$mem.cc:1612:emulate_read_first$6438 ($dff) from module top.
Setting constant 0-bit at position 28 on $auto$mem.cc:1612:emulate_read_first$6438 ($dff) from module top.
Setting constant 0-bit at position 29 on $auto$mem.cc:1612:emulate_read_first$6438 ($dff) from module top.
Setting constant 0-bit at position 30 on $auto$mem.cc:1612:emulate_read_first$6438 ($dff) from module top.
Setting constant 0-bit at position 31 on $auto$mem.cc:1612:emulate_read_first$6438 ($dff) from module top.
Setting constant 0-bit at position 35 on $auto$mem.cc:1612:emulate_read_first$6438 ($dff) from module top.

2.29.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.29.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.29.30. Rerunning OPT passes. (Maybe there is more to do..)

2.29.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~158 debug messages>

2.29.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.29.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.29.34. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 12 on $auto$mem.cc:1135:emulate_transparency$6442 ($dffe) from module top.
Setting constant 0-bit at position 13 on $auto$mem.cc:1135:emulate_transparency$6442 ($dffe) from module top.
Setting constant 0-bit at position 14 on $auto$mem.cc:1135:emulate_transparency$6442 ($dffe) from module top.
Setting constant 0-bit at position 15 on $auto$mem.cc:1135:emulate_transparency$6442 ($dffe) from module top.
Setting constant 0-bit at position 16 on $auto$mem.cc:1135:emulate_transparency$6442 ($dffe) from module top.
Setting constant 0-bit at position 17 on $auto$mem.cc:1135:emulate_transparency$6442 ($dffe) from module top.
Setting constant 0-bit at position 18 on $auto$mem.cc:1135:emulate_transparency$6442 ($dffe) from module top.
Setting constant 0-bit at position 19 on $auto$mem.cc:1135:emulate_transparency$6442 ($dffe) from module top.
Setting constant 0-bit at position 20 on $auto$mem.cc:1135:emulate_transparency$6442 ($dffe) from module top.
Setting constant 0-bit at position 21 on $auto$mem.cc:1135:emulate_transparency$6442 ($dffe) from module top.
Setting constant 0-bit at position 22 on $auto$mem.cc:1135:emulate_transparency$6442 ($dffe) from module top.
Setting constant 0-bit at position 23 on $auto$mem.cc:1135:emulate_transparency$6442 ($dffe) from module top.
Setting constant 0-bit at position 24 on $auto$mem.cc:1135:emulate_transparency$6442 ($dffe) from module top.
Setting constant 0-bit at position 25 on $auto$mem.cc:1135:emulate_transparency$6442 ($dffe) from module top.
Setting constant 0-bit at position 26 on $auto$mem.cc:1135:emulate_transparency$6442 ($dffe) from module top.
Setting constant 0-bit at position 27 on $auto$mem.cc:1135:emulate_transparency$6442 ($dffe) from module top.
Setting constant 0-bit at position 28 on $auto$mem.cc:1135:emulate_transparency$6442 ($dffe) from module top.
Setting constant 0-bit at position 29 on $auto$mem.cc:1135:emulate_transparency$6442 ($dffe) from module top.
Setting constant 0-bit at position 30 on $auto$mem.cc:1135:emulate_transparency$6442 ($dffe) from module top.
Setting constant 0-bit at position 31 on $auto$mem.cc:1135:emulate_transparency$6442 ($dffe) from module top.
Setting constant 0-bit at position 35 on $auto$mem.cc:1135:emulate_transparency$6442 ($dffe) from module top.

2.29.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.29.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.29.37. Rerunning OPT passes. (Maybe there is more to do..)

2.29.38. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~158 debug messages>

2.29.39. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.29.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.29.41. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$5718 ($dffe) from module top (D = $auto$mem.cc:1151:emulate_transparency$6445 [13], Q = \dbg.wbdbg.transmit_data [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5718 ($dffe) from module top (D = $auto$mem.cc:1151:emulate_transparency$6445 [15], Q = \dbg.wbdbg.transmit_data [15], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5718 ($dffe) from module top (D = $auto$mem.cc:1151:emulate_transparency$6445 [16], Q = \dbg.wbdbg.transmit_data [16], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5718 ($dffe) from module top (D = $auto$mem.cc:1151:emulate_transparency$6445 [17], Q = \dbg.wbdbg.transmit_data [17], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5718 ($dffe) from module top (D = $auto$mem.cc:1151:emulate_transparency$6445 [18], Q = \dbg.wbdbg.transmit_data [18], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5718 ($dffe) from module top (D = $auto$mem.cc:1151:emulate_transparency$6445 [31], Q = \dbg.wbdbg.transmit_data [31], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5718 ($dffe) from module top (D = $auto$mem.cc:1151:emulate_transparency$6445 [30], Q = \dbg.wbdbg.transmit_data [30], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5718 ($dffe) from module top (D = $auto$mem.cc:1151:emulate_transparency$6445 [29], Q = \dbg.wbdbg.transmit_data [29], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5718 ($dffe) from module top (D = $auto$mem.cc:1151:emulate_transparency$6445 [28], Q = \dbg.wbdbg.transmit_data [28], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5718 ($dffe) from module top (D = $auto$mem.cc:1151:emulate_transparency$6445 [27], Q = \dbg.wbdbg.transmit_data [27], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5718 ($dffe) from module top (D = $auto$mem.cc:1151:emulate_transparency$6445 [26], Q = \dbg.wbdbg.transmit_data [26], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5718 ($dffe) from module top (D = $auto$mem.cc:1151:emulate_transparency$6445 [25], Q = \dbg.wbdbg.transmit_data [25], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5718 ($dffe) from module top (D = $auto$mem.cc:1151:emulate_transparency$6445 [24], Q = \dbg.wbdbg.transmit_data [24], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5718 ($dffe) from module top (D = $auto$mem.cc:1151:emulate_transparency$6445 [23], Q = \dbg.wbdbg.transmit_data [23], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5718 ($dffe) from module top (D = $auto$mem.cc:1151:emulate_transparency$6445 [22], Q = \dbg.wbdbg.transmit_data [22], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5718 ($dffe) from module top (D = $auto$mem.cc:1151:emulate_transparency$6445 [21], Q = \dbg.wbdbg.transmit_data [21], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5718 ($dffe) from module top (D = $auto$mem.cc:1151:emulate_transparency$6445 [20], Q = \dbg.wbdbg.transmit_data [20], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5718 ($dffe) from module top (D = $auto$mem.cc:1151:emulate_transparency$6445 [14], Q = \dbg.wbdbg.transmit_data [14], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5718 ($dffe) from module top (D = $auto$mem.cc:1151:emulate_transparency$6445 [19], Q = \dbg.wbdbg.transmit_data [19], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5718 ($dffe) from module top (D = $auto$mem.cc:1151:emulate_transparency$6445 [12], Q = \dbg.wbdbg.transmit_data [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5718 ($dffe) from module top (D = $auto$mem.cc:1151:emulate_transparency$6445 [35], Q = \dbg.wbdbg.transmit_data [35], rval = 1'0).

2.29.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 21 unused cells and 0 unused wires.
<suppressed ~21 debug messages>

2.29.43. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~21 debug messages>

2.29.44. Rerunning OPT passes. (Maybe there is more to do..)

2.29.45. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~137 debug messages>

2.29.46. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.29.47. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.29.48. Executing OPT_DFF pass (perform DFF optimizations).

2.29.49. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.29.50. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.29.51. Finished OPT passes. (There is nothing left to do.)

2.30. Executing ICE40_WRAPCARRY pass (wrap carries).

2.31. Executing TECHMAP pass (map to technology primitives).

2.31.1. Executing Verilog-2005 frontend: /Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/techmap.v
Parsing Verilog input from `/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.31.2. Executing Verilog-2005 frontend: /Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

2.31.3. Continuing TECHMAP pass.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_80_ice40_alu for cells of type $alu.
Using template $paramod$constmap:4edb66e0d088a61c7edd1b98fbc82bc43943c3a9$paramod$244b2c5d4fd64a2cf8f8849abfe8960b103dffcd\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$c2e415ef15bc3ccd2723772353a6b450d3d76206\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $logic_or.
Using template $paramod$1a9b2adc0e90ccf2d22dba8d72430d10741e65ed\_80_ice40_alu for cells of type $alu.
Using template $paramod$constmap:5cb70b3ab130d323186fb05365b64f9830cd7998$paramod$1a113abfe50dfb5a1fd917c5cefa667fe43865bf\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod$dde52db7035cb02b3cc5e73865788532339e3bcb\_80_ice40_alu for cells of type $alu.
Using template $paramod$99501223b6f7e5af250351eeb57edb5403a5ad0b\_80_ice40_alu for cells of type $alu.
Using template $paramod$1eb759649286d7485bd82f4dfc30385bade4b4b3\_80_ice40_alu for cells of type $alu.
Using template $paramod$constmap:92b06b5a8b86d5cecb92c0600747e371f589a4a3$paramod$f34958768ccf0a960ecaf4e0d85ee8e69db6a2ba\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$e3e2a2ae1e4d598b5e0e0be67cc1104653ecf8c1\_80_ice40_alu for cells of type $alu.
Using template $paramod$constmap:92b06b5a8b86d5cecb92c0600747e371f589a4a3$paramod$23ffcff783aeb6e46e0862da29d73f7fc1d67f3c\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Analyzing pattern of constant bits for this cell:
  Constant input on bit 0 of port A: 1'1
Creating constmapped module `$paramod$constmap:51fb3526f3621c6ba109a6fa670766d42e57f474$paramod$f34958768ccf0a960ecaf4e0d85ee8e69db6a2ba\_90_shift_ops_shr_shl_sshl_sshr'.

2.31.38. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$constmap:51fb3526f3621c6ba109a6fa670766d42e57f474$paramod$f34958768ccf0a960ecaf4e0d85ee8e69db6a2ba\_90_shift_ops_shr_shl_sshl_sshr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~1211 debug messages>

2.31.39. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$constmap:51fb3526f3621c6ba109a6fa670766d42e57f474$paramod$f34958768ccf0a960ecaf4e0d85ee8e69db6a2ba\_90_shift_ops_shr_shl_sshl_sshr.
<suppressed ~30 debug messages>
Removed 0 unused cells and 7 unused wires.
Using template $paramod$constmap:51fb3526f3621c6ba109a6fa670766d42e57f474$paramod$f34958768ccf0a960ecaf4e0d85ee8e69db6a2ba\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Analyzing pattern of constant bits for this cell:
  Constant input on bit 0 of port A: 1'1
Creating constmapped module `$paramod$constmap:51fb3526f3621c6ba109a6fa670766d42e57f474$paramod$23ffcff783aeb6e46e0862da29d73f7fc1d67f3c\_90_shift_ops_shr_shl_sshl_sshr'.

2.31.40. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$constmap:51fb3526f3621c6ba109a6fa670766d42e57f474$paramod$23ffcff783aeb6e46e0862da29d73f7fc1d67f3c\_90_shift_ops_shr_shl_sshl_sshr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

2.31.41. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$constmap:51fb3526f3621c6ba109a6fa670766d42e57f474$paramod$23ffcff783aeb6e46e0862da29d73f7fc1d67f3c\_90_shift_ops_shr_shl_sshl_sshr.
<suppressed ~49 debug messages>
Removed 0 unused cells and 9 unused wires.
Using template $paramod$constmap:51fb3526f3621c6ba109a6fa670766d42e57f474$paramod$23ffcff783aeb6e46e0862da29d73f7fc1d67f3c\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$9f53511a6616d1b893f9d4267848c15e4d483779\_80_ice40_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_80_ice40_alu for cells of type $alu.
Using template $paramod$672a140277c71df8314410f22acc08d55222c3c7\_80_ice40_alu for cells of type $alu.
Using template $paramod$dc04b7d98e503a7bab16fce2df70e6e2c5ca34d6\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $lut.
Using template $paramod$48b3704fc1cf0b5e1e600913b1ce52e541d4fc3c\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $ne.
Using template $paramod$c5c783b17ab1d780abfad8cfe6563a0a7b47a3b0\_90_pmux for cells of type $pmux.
Using template $paramod$d629d85c8826a74239b9178d1930215a43b0ceb0\_90_pmux for cells of type $pmux.
Using template $paramod$97565c3687be688407d1272a293bd9d0ae6852dc\_90_pmux for cells of type $pmux.
Using template $paramod$521ce43182eecb9f60c72393a788160d2c356bf5\_90_pmux for cells of type $pmux.
Using template $paramod$bf2533632d512eac76dd186c0da49367e29b8e98\_90_pmux for cells of type $pmux.
Using template $paramod$d31bf4d7d72e59528d18fbd4f322e9d608532043\_90_pmux for cells of type $pmux.
Using template $paramod$85df5dc01c7df96a7d8e5f1fdf76ce9ac452af63\_90_pmux for cells of type $pmux.
Using template $paramod$32e7c4d6f92ff4337599ece53082d2e88a82a9f2\_90_pmux for cells of type $pmux.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_80_ice40_alu for cells of type $alu.
Using template $paramod$b8c0a997bce700f23568a5ada79cc6781d1f5ca0\_80_ice40_alu for cells of type $alu.
Using template $paramod$713617589782cfade849bb573b5c36106c4b708f\_80_ice40_alu for cells of type $alu.
Using template $paramod$4ccbe221165818e15f326ddee3d1183c7924e12f\_80_ice40_alu for cells of type $alu.
Using template $paramod$53700bbee849b2010ad0b60a61ccd204a10e24ca\_80_ice40_alu for cells of type $alu.
Using template $paramod$403a3c2fa431a154c52a6a5429d7a6260b5d144f\_80_ice40_alu for cells of type $alu.
Using template $paramod$6f67705c43e5e94c02b6ebb52209ce5aa5ade4c1\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_xor.
Using template $paramod$b3b6ac92d800c6f07aa48f510f923d86a674e5a7\_90_pmux for cells of type $pmux.
Using template $paramod$d7387fdb214042e5ef2d69a3f74948694b4bb65e\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $dlatch.
Using template $paramod$e830d104b5de63a966ae948f6aff012e63986700\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
No more expansions possible.
<suppressed ~1572 debug messages>

2.32. Executing OPT pass (performing simple optimizations).

2.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1535 debug messages>

2.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~2853 debug messages>
Removed a total of 951 cells.

2.32.3. Executing OPT_DFF pass (perform DFF optimizations).

2.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 399 unused cells and 2234 unused wires.
<suppressed ~421 debug messages>

2.32.5. Finished fast OPT passes.

2.33. Executing ICE40_OPT pass (performing simple optimizations).

2.33.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6027.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6027.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6043.slice[0].carry: CO=\DUT.SP_SEL.Q [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6046.slice[0].carry: CO=\DUT.SP_SEL.Q [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6049.slice[0].carry: CO=\DUT.Stack.rs [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6052.slice[0].carry: CO=\DUT.regA.Q [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6055.slice[8].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6061.slice[0].carry: CO=\DUT.regA.Q [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6064.slice[8].carry: CO=$auto$alumacc.cc:485:replace_alu$6064.C [8]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6070.slice[0].carry: CO=\dbg.wbdbg.transmit_state [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6073.slice[0].carry: CO=\dbg.wbdbg.recieve_state [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6076.slice[0].carry: CO=\dbg.wbdbg.cmd_fifo.wr_ptr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6079.slice[0].carry: CO=\dbg.wbdbg.cmd_fifo.rd_ptr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6082.slice[0].carry: CO=\dbg.wbdbg.cmd_fifo.len [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6085.slice[0].carry: CO=\dbg.wbdbg.resp_fifo.wr_ptr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6088.slice[0].carry: CO=\dbg.wbdbg.resp_fifo.rd_ptr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6091.slice[0].carry: CO=\dbg.wbdbg.resp_fifo.len [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6094.slice[0].carry: CO=\dbg.wbdbg.uart_rx.state [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6097.slice[0].carry: CO=\dbg.wbdbg.uart_tx.state [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6100.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6100.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6100.slice[32].carry: CO=$auto$alumacc.cc:485:replace_alu$6100.C [32]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6103.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6027.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6106.slice[0].carry: CO=\dbg.wbdbg.drop_timer [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6109.slice[0].carry: CO=\dbg.wbdbg.cmd_fifo.len [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6112.slice[0].carry: CO=\dbg.wbdbg.resp_fifo.len [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6115.slice[0].carry: CO=\dbg.wbdbg.uart_rx.state [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6115.slice[4].carry: CO=$auto$alumacc.cc:485:replace_alu$6115.C [4]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6118.slice[0].carry: CO=\dbg.wbdbg.uart_rx.counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6121.slice[0].carry: CO=\dbg.wbdbg.uart_tx.counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6124.slice[0].carry: CO=\dbg.wbdbg.uart_tx.state [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6124.slice[3].carry: CO=$auto$alumacc.cc:485:replace_alu$6124.C [3]

2.33.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~128 debug messages>

2.33.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

2.33.4. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$8581 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [5], Q = \DUT.Stack.rf[4] [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8580 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [4], Q = \DUT.Stack.rf[4] [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8579 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [3], Q = \DUT.Stack.rf[4] [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8578 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [2], Q = \DUT.Stack.rf[4] [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8577 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [1], Q = \DUT.Stack.rf[4] [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8576 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [0], Q = \DUT.Stack.rf[4] [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8478 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [5], Q = \DUT.Stack.rf[2] [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8477 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [4], Q = \DUT.Stack.rf[2] [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8476 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [3], Q = \DUT.Stack.rf[2] [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8475 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [2], Q = \DUT.Stack.rf[2] [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8474 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [1], Q = \DUT.Stack.rf[2] [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8473 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [0], Q = \DUT.Stack.rf[2] [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8422 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [7], Q = \DUT.Stack.rf[6] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8421 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [6], Q = \DUT.Stack.rf[6] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8420 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [5], Q = \DUT.Stack.rf[6] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8419 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [4], Q = \DUT.Stack.rf[6] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8418 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [3], Q = \DUT.Stack.rf[6] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8417 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [2], Q = \DUT.Stack.rf[6] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8416 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [1], Q = \DUT.Stack.rf[6] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8415 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [0], Q = \DUT.Stack.rf[6] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8382 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [7], Q = \DUT.Stack.rf[5] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8381 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [6], Q = \DUT.Stack.rf[5] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8380 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [5], Q = \DUT.Stack.rf[5] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8379 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [4], Q = \DUT.Stack.rf[5] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8378 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [3], Q = \DUT.Stack.rf[5] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8377 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [2], Q = \DUT.Stack.rf[5] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8376 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [1], Q = \DUT.Stack.rf[5] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8375 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [0], Q = \DUT.Stack.rf[5] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8285 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [7], Q = \DUT.Stack.rf[4] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8284 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [6], Q = \DUT.Stack.rf[4] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8283 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [5], Q = \DUT.Stack.rf[4] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8282 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [4], Q = \DUT.Stack.rf[4] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8281 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [3], Q = \DUT.Stack.rf[4] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8280 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [2], Q = \DUT.Stack.rf[4] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8279 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [1], Q = \DUT.Stack.rf[4] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8278 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [0], Q = \DUT.Stack.rf[4] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8253 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [5], Q = \DUT.Stack.rf[5] [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8252 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [4], Q = \DUT.Stack.rf[5] [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8251 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [3], Q = \DUT.Stack.rf[5] [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8250 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [2], Q = \DUT.Stack.rf[5] [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8249 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [1], Q = \DUT.Stack.rf[5] [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8248 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [0], Q = \DUT.Stack.rf[5] [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8195 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [5], Q = \DUT.Stack.rf[6] [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8194 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [4], Q = \DUT.Stack.rf[6] [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8193 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [3], Q = \DUT.Stack.rf[6] [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8192 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [2], Q = \DUT.Stack.rf[6] [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8191 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [1], Q = \DUT.Stack.rf[6] [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8190 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [0], Q = \DUT.Stack.rf[6] [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8182 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [7], Q = \DUT.Stack.rf[7] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8181 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [6], Q = \DUT.Stack.rf[7] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8180 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [5], Q = \DUT.Stack.rf[7] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8179 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [4], Q = \DUT.Stack.rf[7] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8178 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [3], Q = \DUT.Stack.rf[7] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8177 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [2], Q = \DUT.Stack.rf[7] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8176 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [1], Q = \DUT.Stack.rf[7] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8175 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [0], Q = \DUT.Stack.rf[7] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8124 ($_SDFF_PP0_) from module top (D = $flatten\DUT.\Brain.$procmux$4140.Y_B [2], Q = \DUT.Brain.state [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$8123 ($_SDFF_PP1_) from module top (D = $flatten\DUT.\Brain.$procmux$4140.Y_B [1], Q = \DUT.Brain.state [1], rval = 1'1).
Adding SRST signal on $auto$ff.cc:266:slice$8122 ($_SDFF_PP0_) from module top (D = $flatten\DUT.\Brain.$procmux$4140.Y_B [0], Q = \DUT.Brain.state [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7925 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [7], Q = \DUT.Stack.rf[3] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7924 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [6], Q = \DUT.Stack.rf[3] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7923 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [5], Q = \DUT.Stack.rf[3] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7922 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [4], Q = \DUT.Stack.rf[3] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7921 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [3], Q = \DUT.Stack.rf[3] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7920 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [2], Q = \DUT.Stack.rf[3] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7919 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [1], Q = \DUT.Stack.rf[3] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7918 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [0], Q = \DUT.Stack.rf[3] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7730 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [7], Q = \DUT.Stack.rf[1] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7729 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [6], Q = \DUT.Stack.rf[1] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7728 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [5], Q = \DUT.Stack.rf[1] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7727 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [4], Q = \DUT.Stack.rf[1] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7726 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [3], Q = \DUT.Stack.rf[1] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7725 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [2], Q = \DUT.Stack.rf[1] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7724 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [1], Q = \DUT.Stack.rf[1] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7723 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [0], Q = \DUT.Stack.rf[1] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7673 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [7], Q = \DUT.Stack.rf[0] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7672 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [6], Q = \DUT.Stack.rf[0] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7671 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [5], Q = \DUT.Stack.rf[0] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7670 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [4], Q = \DUT.Stack.rf[0] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7669 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [3], Q = \DUT.Stack.rf[0] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7668 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [2], Q = \DUT.Stack.rf[0] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7667 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [1], Q = \DUT.Stack.rf[0] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7666 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [0], Q = \DUT.Stack.rf[0] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7639 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [5], Q = \DUT.Stack.rf[7] [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7638 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [4], Q = \DUT.Stack.rf[7] [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7637 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [3], Q = \DUT.Stack.rf[7] [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7636 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [2], Q = \DUT.Stack.rf[7] [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7635 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [1], Q = \DUT.Stack.rf[7] [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7634 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [0], Q = \DUT.Stack.rf[7] [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7630 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6232 [7], Q = \DUT.rf.rf[0] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7629 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6232 [6], Q = \DUT.rf.rf[0] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7628 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6232 [5], Q = \DUT.rf.rf[0] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7627 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6232 [4], Q = \DUT.rf.rf[0] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7626 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6232 [3], Q = \DUT.rf.rf[0] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7625 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6232 [2], Q = \DUT.rf.rf[0] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7624 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6232 [1], Q = \DUT.rf.rf[0] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7623 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6232 [0], Q = \DUT.rf.rf[0] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7621 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6232 [7], Q = \DUT.rf.rf[1] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7620 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6232 [6], Q = \DUT.rf.rf[1] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7619 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6232 [5], Q = \DUT.rf.rf[1] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7618 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6232 [4], Q = \DUT.rf.rf[1] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7617 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6232 [3], Q = \DUT.rf.rf[1] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7616 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6232 [2], Q = \DUT.rf.rf[1] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7615 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6232 [1], Q = \DUT.rf.rf[1] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7614 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6232 [0], Q = \DUT.rf.rf[1] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7611 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6232 [7], Q = \DUT.rf.rf[2] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7610 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6232 [6], Q = \DUT.rf.rf[2] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7609 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6232 [5], Q = \DUT.rf.rf[2] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7608 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6232 [4], Q = \DUT.rf.rf[2] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7607 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6232 [3], Q = \DUT.rf.rf[2] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7606 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6232 [2], Q = \DUT.rf.rf[2] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7605 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6232 [1], Q = \DUT.rf.rf[2] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7604 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6232 [0], Q = \DUT.rf.rf[2] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7601 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6232 [7], Q = \DUT.rf.rf[3] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7600 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6232 [6], Q = \DUT.rf.rf[3] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7599 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6232 [5], Q = \DUT.rf.rf[3] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7598 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6232 [4], Q = \DUT.rf.rf[3] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7597 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6232 [3], Q = \DUT.rf.rf[3] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7596 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6232 [2], Q = \DUT.rf.rf[3] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7595 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6232 [1], Q = \DUT.rf.rf[3] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7594 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6232 [0], Q = \DUT.rf.rf[3] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7592 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6232 [7], Q = \DUT.rf.rf[4] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7591 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6232 [6], Q = \DUT.rf.rf[4] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7590 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6232 [5], Q = \DUT.rf.rf[4] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7589 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6232 [4], Q = \DUT.rf.rf[4] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7588 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6232 [3], Q = \DUT.rf.rf[4] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7587 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6232 [2], Q = \DUT.rf.rf[4] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7586 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6232 [1], Q = \DUT.rf.rf[4] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7585 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6232 [0], Q = \DUT.rf.rf[4] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7509 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [5], Q = \DUT.Stack.rf[1] [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7508 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [4], Q = \DUT.Stack.rf[1] [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7507 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [3], Q = \DUT.Stack.rf[1] [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7506 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [2], Q = \DUT.Stack.rf[1] [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7505 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [1], Q = \DUT.Stack.rf[1] [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7504 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [0], Q = \DUT.Stack.rf[1] [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7409 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [5], Q = \DUT.Stack.rf[0] [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7408 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [4], Q = \DUT.Stack.rf[0] [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7407 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [3], Q = \DUT.Stack.rf[0] [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7406 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [2], Q = \DUT.Stack.rf[0] [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7405 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [1], Q = \DUT.Stack.rf[0] [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7404 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [0], Q = \DUT.Stack.rf[0] [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$11133 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [7], Q = \DUT.Stack.rf[2] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$11132 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [6], Q = \DUT.Stack.rf[2] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$11131 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [5], Q = \DUT.Stack.rf[2] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$11130 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [4], Q = \DUT.Stack.rf[2] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$11129 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [3], Q = \DUT.Stack.rf[2] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$11128 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [2], Q = \DUT.Stack.rf[2] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$11127 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [1], Q = \DUT.Stack.rf[2] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$11126 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6220 [0], Q = \DUT.Stack.rf[2] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$10155 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [5], Q = \DUT.Stack.rf[3] [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$10154 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [4], Q = \DUT.Stack.rf[3] [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$10153 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [3], Q = \DUT.Stack.rf[3] [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$10152 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [2], Q = \DUT.Stack.rf[3] [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$10151 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [1], Q = \DUT.Stack.rf[3] [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$10150 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$6224 [0], Q = \DUT.Stack.rf[3] [8], rval = 1'0).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$7425 ($_SDFFE_PP0P_) from module top.

2.33.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 156 unused cells and 41 unused wires.
<suppressed ~158 debug messages>

2.33.6. Rerunning OPT passes. (Removed registers in this run.)

2.33.7. Running ICE40 specific optimizations.

2.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

2.33.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

2.33.10. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$8224 ($_DFFE_PP_) from module top.

2.33.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

2.33.12. Rerunning OPT passes. (Removed registers in this run.)

2.33.13. Running ICE40 specific optimizations.

2.33.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.33.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.33.16. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$7444 ($_DFF_P_) from module top.

2.33.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.33.18. Rerunning OPT passes. (Removed registers in this run.)

2.33.19. Running ICE40 specific optimizations.

2.33.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.33.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.33.22. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$7778 ($_DFFE_PP_) from module top.

2.33.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.33.24. Rerunning OPT passes. (Removed registers in this run.)

2.33.25. Running ICE40 specific optimizations.

2.33.26. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.33.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.33.28. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$9949 ($_DFFE_PP_) from module top (D = $auto$mem.cc:1151:emulate_transparency$6445 [11], Q = \dbg.wbdbg.transmit_data [11], rval = 1'0).

2.33.29. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 0 unused wires.
<suppressed ~1 debug messages>

2.33.30. Rerunning OPT passes. (Removed registers in this run.)

2.33.31. Running ICE40 specific optimizations.

2.33.32. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

2.33.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.33.34. Executing OPT_DFF pass (perform DFF optimizations).

2.33.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.33.36. Rerunning OPT passes. (Removed registers in this run.)

2.33.37. Running ICE40 specific optimizations.

2.33.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.33.39. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.33.40. Executing OPT_DFF pass (perform DFF optimizations).

2.33.41. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.33.42. Finished OPT passes. (There is nothing left to do.)

2.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

2.35. Executing TECHMAP pass (map to technology primitives).

2.35.1. Executing Verilog-2005 frontend: /Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

2.35.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_SDFFCE_PP0P_ for cells of type $_SDFFCE_PP0P_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template \$_SDFFCE_PP1P_ for cells of type $_SDFFCE_PP1P_.
Using template \$_SDFF_PP1_ for cells of type $_SDFF_PP1_.
No more expansions possible.
<suppressed ~584 debug messages>

2.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping top.$auto$alumacc.cc:485:replace_alu$6043.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$6046.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$6049.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$6052.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$6055.slice[8].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$6061.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$6064.slice[8].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$6070.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$6073.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$6076.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$6079.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$6082.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$6085.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$6088.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$6091.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$6094.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$6097.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$6100.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$6100.slice[32].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$6103.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$6106.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$6109.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$6112.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$6115.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$6115.slice[4].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$6118.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$6121.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$6124.slice[0].carry ($lut).

2.38. Executing ICE40_OPT pass (performing simple optimizations).

2.38.1. Running ICE40 specific optimizations.

2.38.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~595 debug messages>

2.38.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~783 debug messages>
Removed a total of 261 cells.

2.38.4. Executing OPT_DFF pass (perform DFF optimizations).

2.38.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 3386 unused wires.
<suppressed ~2 debug messages>

2.38.6. Rerunning OPT passes. (Removed registers in this run.)

2.38.7. Running ICE40 specific optimizations.

2.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~4 debug messages>

2.38.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.38.10. Executing OPT_DFF pass (perform DFF optimizations).

2.38.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.38.12. Rerunning OPT passes. (Removed registers in this run.)

2.38.13. Running ICE40 specific optimizations.

2.38.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.38.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.38.16. Executing OPT_DFF pass (perform DFF optimizations).

2.38.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.38.18. Finished OPT passes. (There is nothing left to do.)

2.39. Executing TECHMAP pass (map to technology primitives).

2.39.1. Executing Verilog-2005 frontend: /Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

2.39.2. Continuing TECHMAP pass.

2.39.3. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping \$_DLATCH_N_.$ternary$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/latches_map.v:4$16752 ($mux).
Mapping \$_DLATCH_N_.$logic_not$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/latches_map.v:4$16751 ($logic_not).
<suppressed ~4 debug messages>

2.39.4. Executing OPT pass (performing simple optimizations).

2.39.4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module \$_DLATCH_N_.
<suppressed ~1 debug messages>

2.39.4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\$_DLATCH_N_'.
Removed a total of 0 cells.

2.39.4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \$_DLATCH_N_..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

2.39.4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \$_DLATCH_N_.
Performed a total of 0 changes.

2.39.4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\$_DLATCH_N_'.
Removed a total of 0 cells.

2.39.4.6. Executing OPT_DFF pass (perform DFF optimizations).

2.39.4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \$_DLATCH_N_..
Removed 1 unused cells and 2 unused wires.
<suppressed ~2 debug messages>

2.39.4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module \$_DLATCH_N_.

2.39.4.9. Rerunning OPT passes. (Maybe there is more to do..)

2.39.4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \$_DLATCH_N_..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

2.39.4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \$_DLATCH_N_.
Performed a total of 0 changes.

2.39.4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\$_DLATCH_N_'.
Removed a total of 0 cells.

2.39.4.13. Executing OPT_DFF pass (perform DFF optimizations).

2.39.4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \$_DLATCH_N_..

2.39.4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module \$_DLATCH_N_.

2.39.4.16. Finished OPT passes. (There is nothing left to do.)
Using template \$_DLATCH_N_ for cells of type $_DLATCH_N_.
No more expansions possible.
<suppressed ~8 debug messages>

2.40. Executing ABC pass (technology mapping using ABC).

2.40.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Breaking loop using new signal $abcloop$16757: \DUT.Stack.bus [3] -> \dbg._0680_ [3]
                                               \DUT.Stack.bus [3] -> $auto$rtlil.cc:2496:Mux$6232 [3]
                                               \DUT.Stack.bus [3] -> $auto$rtlil.cc:2496:Mux$6224 [3]
                                               \DUT.Stack.bus [3] -> $auto$rtlil.cc:2496:Mux$6220 [3]
                                               \DUT.Stack.bus [3] -> \DUT.regA.d [3]
                                               \DUT.Stack.bus [3] -> $procmux$4254.B_AND_S [7]
Breaking loop using new signal $abcloop$16758: \DUT.Stack.bus [5] -> \dbg._0680_ [5]
                                               \DUT.Stack.bus [5] -> $auto$rtlil.cc:2496:Mux$6232 [5]
                                               \DUT.Stack.bus [5] -> $auto$rtlil.cc:2496:Mux$6224 [5]
                                               \DUT.Stack.bus [5] -> $auto$rtlil.cc:2496:Mux$6220 [5]
                                               \DUT.Stack.bus [5] -> \DUT.regA.d [5]
                                               \DUT.Stack.bus [5] -> $procmux$4254.B_AND_S [1]
Breaking loop using new signal $abcloop$16759: \DUT.Stack.bus [2] -> \dbg._0680_ [2]
                                               \DUT.Stack.bus [2] -> $auto$rtlil.cc:2496:Mux$6232 [2]
                                               \DUT.Stack.bus [2] -> $auto$rtlil.cc:2496:Mux$6224 [2]
                                               \DUT.Stack.bus [2] -> \DUT.regA.d [2]
                                               \DUT.Stack.bus [2] -> $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2715$1653_DATA[13:0]$1668 [2]
                                               \DUT.Stack.bus [2] -> $procmux$4254.B_AND_S [6]
Breaking loop using new signal $abcloop$16760: \DUT.Stack.bus [1] -> \dbg._0680_ [1]
                                               \DUT.Stack.bus [1] -> $auto$rtlil.cc:2496:Mux$6232 [1]
                                               \DUT.Stack.bus [1] -> $auto$rtlil.cc:2496:Mux$6224 [1]
                                               \DUT.Stack.bus [1] -> \DUT.regA.d [1]
                                               \DUT.Stack.bus [1] -> $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2715$1653_DATA[13:0]$1668 [1]
                                               \DUT.Stack.bus [1] -> $procmux$4254.B_AND_S [5]
Breaking loop using new signal $abcloop$16761: \DUT.Stack.bus [0] -> \dbg._0680_ [0]
                                               \DUT.Stack.bus [0] -> $auto$rtlil.cc:2496:Mux$6232 [0]
                                               \DUT.Stack.bus [0] -> $auto$rtlil.cc:2496:Mux$6224 [0]
                                               \DUT.Stack.bus [0] -> \DUT.regA.d [0]
                                               \DUT.Stack.bus [0] -> $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2715$1653_DATA[13:0]$1668 [0]
                                               \DUT.Stack.bus [0] -> $procmux$4254.B_AND_S [4]
Breaking loop using new signal $abcloop$16762: \DUT.Stack.bus [4] -> \dbg._0680_ [4]
                                               \DUT.Stack.bus [4] -> $auto$rtlil.cc:2496:Mux$6232 [4]
                                               \DUT.Stack.bus [4] -> $auto$rtlil.cc:2496:Mux$6224 [4]
                                               \DUT.Stack.bus [4] -> $auto$rtlil.cc:2496:Mux$6220 [4]
                                               \DUT.Stack.bus [4] -> \DUT.regA.d [4]
                                               \DUT.Stack.bus [4] -> $procmux$4254.B_AND_S [0]
Breaking loop using new signal $abcloop$16763: \DUT.Stack.bus [7] -> \dbg._0680_ [7]
                                               \DUT.Stack.bus [7] -> $auto$rtlil.cc:2496:Mux$6232 [7]
                                               \DUT.Stack.bus [7] -> \DUT.regA.d [7]
                                               \DUT.Stack.bus [7] -> $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2715$1653_DATA[13:0]$1668 [7]
                                               \DUT.Stack.bus [7] -> $procmux$4254.B_AND_S [3]
Breaking loop using new signal $abcloop$16764: \DUT.Stack.bus [6] -> \dbg._0680_ [6]
                                               \DUT.Stack.bus [6] -> $auto$rtlil.cc:2496:Mux$6232 [6]
                                               \DUT.Stack.bus [6] -> \DUT.regA.d [6]
                                               \DUT.Stack.bus [6] -> $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:2715$1653_DATA[13:0]$1668 [6]
                                               \DUT.Stack.bus [6] -> $procmux$4254.B_AND_S [2]
Breaking loop using new signal $abcloop$16765: \DUT.Unit.d [0] -> $flatten\DUT.$3\bus[7:0] [0]
                                               \DUT.Unit.d [0] -> $flatten\DUT.\Unit.$procmux$4227.Y [0]
                                               \DUT.Unit.d [0] -> \DUT.Unit.d [0]
Breaking loop using new signal $abcloop$16766: \DUT.Unit.d [7] -> $flatten\DUT.$3\bus[7:0] [7]
                                               \DUT.Unit.d [7] -> $flatten\DUT.\Unit.$procmux$4227.Y [7]
                                               \DUT.Unit.d [7] -> \DUT.Unit.d [7]
Breaking loop using new signal $abcloop$16767: \DUT.Unit.d [3] -> $flatten\DUT.$3\bus[7:0] [3]
                                               \DUT.Unit.d [3] -> $flatten\DUT.\Unit.$procmux$4227.Y [3]
                                               \DUT.Unit.d [3] -> \DUT.Unit.d [3]
Breaking loop using new signal $abcloop$16768: \DUT.Unit.d [2] -> $flatten\DUT.$3\bus[7:0] [2]
                                               \DUT.Unit.d [2] -> $flatten\DUT.\Unit.$procmux$4227.Y [2]
                                               \DUT.Unit.d [2] -> \DUT.Unit.d [2]
Breaking loop using new signal $abcloop$16769: \DUT.Unit.d [6] -> $flatten\DUT.$3\bus[7:0] [6]
                                               \DUT.Unit.d [6] -> $flatten\DUT.\Unit.$procmux$4227.Y [6]
                                               \DUT.Unit.d [6] -> \DUT.Unit.d [6]
Breaking loop using new signal $abcloop$16770: \DUT.Unit.d [5] -> $flatten\DUT.$3\bus[7:0] [5]
                                               \DUT.Unit.d [5] -> $flatten\DUT.\Unit.$procmux$4227.Y [5]
                                               \DUT.Unit.d [5] -> \DUT.Unit.d [5]
Breaking loop using new signal $abcloop$16771: \DUT.Unit.d [4] -> $flatten\DUT.$3\bus[7:0] [4]
                                               \DUT.Unit.d [4] -> $flatten\DUT.\Unit.$procmux$4227.Y [4]
                                               \DUT.Unit.d [4] -> \DUT.Unit.d [4]
Breaking loop using new signal $abcloop$16772: \DUT.Unit.d [1] -> $flatten\DUT.$3\bus[7:0] [1]
                                               \DUT.Unit.d [1] -> $flatten\DUT.\Unit.$procmux$4227.Y [1]
                                               \DUT.Unit.d [1] -> \DUT.Unit.d [1]
Extracted 2271 gates and 2919 wires to a netlist network with 646 inputs and 358 outputs.

2.40.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + &get -n 
ABC: + &fraig -x 
ABC: + &put 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress <abc-temp-dir>/input.blif 
ABC: Total number of equiv classes                =     547.
ABC: Participating nodes from both networks       =    1261.
ABC: Participating nodes from the first network   =     548. (  63.94 % of nodes)
ABC: Participating nodes from the second network  =     713. (  83.20 % of nodes)
ABC: Node pairs (any polarity)                    =     548. (  63.94 % of names can be moved)
ABC: Node pairs (same polarity)                   =     487. (  56.83 % of names can be moved)
ABC: Total runtime =     0.10 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

2.40.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      856
ABC RESULTS:        internal signals:     1915
ABC RESULTS:           input signals:      646
ABC RESULTS:          output signals:      358
Removing temp directory.

2.41. Executing ICE40_WRAPCARRY pass (wrap carries).

2.42. Executing TECHMAP pass (map to technology primitives).

2.42.1. Executing Verilog-2005 frontend: /Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

2.42.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 57 unused cells and 1966 unused wires.

2.43. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     1070
  1-LUT               85
  2-LUT              186
  3-LUT              396
  4-LUT              403
  with \SB_CARRY    (#0)  191
  with \SB_CARRY    (#1)  188

Eliminating LUTs.
Number of LUTs:     1070
  1-LUT               85
  2-LUT              186
  3-LUT              396
  4-LUT              403
  with \SB_CARRY    (#0)  191
  with \SB_CARRY    (#1)  188

Combining LUTs.
Number of LUTs:     1046
  1-LUT               69
  2-LUT              178
  3-LUT              388
  4-LUT              411
  with \SB_CARRY    (#0)  191
  with \SB_CARRY    (#1)  188

Eliminated 0 LUTs.
Combined 24 LUTs.
<suppressed ~7789 debug messages>

2.44. Executing TECHMAP pass (map to technology primitives).

2.44.1. Executing Verilog-2005 frontend: /Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

2.44.2. Continuing TECHMAP pass.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod$4282def8dbd6df3d1248ad282c629bee684502c2\$lut for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod$1bf62ab10e48d71d6497bccacf5c70420c470fe9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod$6e238df02989b317f10820a22773676e71120644\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod$11ec7271d8e6e5aeaace08c13e4c601f10e31038\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod$608f40069c27841a5b3bdf03643a34bdc8974072\$lut for cells of type $lut.
Using template $paramod$b4f85a6321a00b090afc4e21d68e7b99eb94d149\$lut for cells of type $lut.
Using template $paramod$179512a187da069f3b79ef6612a41e494e7d54b6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100000 for cells of type $lut.
Using template $paramod$de3d8c0ac9a85f776878d56395b6e0bf04ae72e7\$lut for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod$bf60f6ec407ee294958b6566514fc3125ec42258\$lut for cells of type $lut.
Using template $paramod$5898ae4e52b22eca363a418fa94151158a507d30\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000111 for cells of type $lut.
Using template $paramod$71d951b20e73043168c1656217d126e617052faa\$lut for cells of type $lut.
Using template $paramod$762dcdf49521c1aa2145fa6746ab6d57dd5df22e\$lut for cells of type $lut.
Using template $paramod$7a9d9396461df152f697894fa3b294ad1b285e08\$lut for cells of type $lut.
Using template $paramod$d6d3aaeac1b9aa2c4b652c48e0deb565040dda72\$lut for cells of type $lut.
Using template $paramod$49308c380d4434ff502cc9276068deff427c75f2\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod$6e46ec5a196ba1a24b8e69ab094cadc07c13ac1f\$lut for cells of type $lut.
Using template $paramod$7295da7c5b19f528a428229f2570e0a23ad372af\$lut for cells of type $lut.
Using template $paramod$a50be0e6fa3a01511bb234559cb74fb8bd3e2061\$lut for cells of type $lut.
Using template $paramod$d35161d1d7976dcc02e7c7d51172431be85143b4\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000111 for cells of type $lut.
Using template $paramod$f3e1547c4b47e64c590e75cf09078b2507c8cc75\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1011 for cells of type $lut.
Using template $paramod$fe9a0158d0352193457c4f5b6282ac86d35fb3ee\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110000 for cells of type $lut.
Using template $paramod$d6cf0a4b6f6ccd87588da28c41b5b6c258da2509\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01101111 for cells of type $lut.
Using template $paramod$e5759512db67494ff77fbdfc66dff4006376568f\$lut for cells of type $lut.
Using template $paramod$adac5163f2ca606e303e4fcb6e4ac1a8cfe9825d\$lut for cells of type $lut.
Using template $paramod$bdb7f9ed72fd4f5c7ad81c376f2d8a5c72a0098d\$lut for cells of type $lut.
Using template $paramod$2f99e7dde0142f5eb4336d05fd90a596d3f2e038\$lut for cells of type $lut.
Using template $paramod$e49f6e3576ef1a6d2f58c54414dbb786af8cc869\$lut for cells of type $lut.
Using template $paramod$973818279bc95792902f3c09371fd2407d04a2a5\$lut for cells of type $lut.
Using template $paramod$ea0faad69a26c91786a25961ea149d0e0961eb1f\$lut for cells of type $lut.
Using template $paramod$b38f14cbf649de888742c8d9c245315a16ac4233\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01111111 for cells of type $lut.
Using template $paramod$310dc7912bb5756ab08137f6868c0abbecf66466\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10111111 for cells of type $lut.
Using template $paramod$cde3aa23c1efa60a470cf0f0281347d6ba585afa\$lut for cells of type $lut.
Using template $paramod$246006d276d15b0766d6d890a33a28800bfa7295\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001011 for cells of type $lut.
Using template $paramod$d53578aacfd93124244778d88be0e90eb09c1b1b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0111 for cells of type $lut.
Using template $paramod$b93d1ea7a612a32c185108f67a153d44ffb9aac2\$lut for cells of type $lut.
Using template $paramod$2d07c1a6c53c7b878509360922c4fa5ebedc3011\$lut for cells of type $lut.
Using template $paramod$94ac66a11090dca84889e55fcf03297912a5b7ec\$lut for cells of type $lut.
Using template $paramod$2d8ecce5c907513cebcd38ab5efe0fc26fc03464\$lut for cells of type $lut.
Using template $paramod$43779580bfffd5d5a9f321249a174febf1dac288\$lut for cells of type $lut.
Using template $paramod$82b4a585d1edcb5c6e755dc9bd3392228a1c1304\$lut for cells of type $lut.
Using template $paramod$5c32c59025c0b98f20e63f249d83e7ebb4b085e3\$lut for cells of type $lut.
Using template $paramod$a670b08a47dd8a34f954c50cd06e9996d77e8467\$lut for cells of type $lut.
Using template $paramod$6b0849254d6c87461fb93e37cc18f089f61eb912\$lut for cells of type $lut.
Using template $paramod$81d8a60fd95b1a9f9ef71c12a774ae6988cb9fd5\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110000 for cells of type $lut.
Using template $paramod$048d4aa2263b685fba6c6b0d38f6224df0dc3042\$lut for cells of type $lut.
Using template $paramod$5a621b016c894274d07edef48c49b401a15fd796\$lut for cells of type $lut.
Using template $paramod$b4d0f4738a5ce50c7f36c2aa2ecc09cfb874f2b6\$lut for cells of type $lut.
Using template $paramod$ae9b8abdb4f811ce37985dd5106af9cd21223954\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001010 for cells of type $lut.
Using template $paramod$fceb3a526de44b8f6b38e567360f59f7cf5878fb\$lut for cells of type $lut.
Using template $paramod$9d707d218adbd63b6f9a0c79d7ee037306fb6296\$lut for cells of type $lut.
Using template $paramod$12879138d1e376f344e47ea40be66b776233be75\$lut for cells of type $lut.
Using template $paramod$ed10455c824c2a3761aabdeb1e31dad905f66e6e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111000 for cells of type $lut.
Using template $paramod$359fe4e746656bf9c72aecaff84fc7bdea9f55a5\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
Using template $paramod$ab8bb87959c5d7cfa27886cee1355b38e054a61a\$lut for cells of type $lut.
Using template $paramod$c4c148354f86d2131dbfed31e2e01cbbb5aefda7\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001101 for cells of type $lut.
Using template $paramod$8c24dc0cdd336b7fb88bbf7eed45cec5cbae862b\$lut for cells of type $lut.
Using template $paramod$e9c77024ca501b890c641f9c0b10e27242db8730\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101111 for cells of type $lut.
Using template $paramod$0f52647588235a7349ddd3f3432c9ac1e33ad9e1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101100 for cells of type $lut.
Using template $paramod$a4df2b5be2b644499880e088a11556935f22b401\$lut for cells of type $lut.
Using template $paramod$3039c7f41767c4672f4e3f22ad78f16d42720fbf\$lut for cells of type $lut.
Using template $paramod$8b24407096beec47292ddeb1567a058197a320b9\$lut for cells of type $lut.
Using template $paramod$0de052767abdccc3aefc818722bdc3c7850d25d6\$lut for cells of type $lut.
Using template $paramod$20798777255c214e32de3304ce8faa1fdfa2f474\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010000 for cells of type $lut.
Using template $paramod$f63fe32f78d5f3c5de711945c592c8c5ec2303ae\$lut for cells of type $lut.
Using template $paramod$a3cdc1eb771a2c6a16f64da161e11100ac409d2b\$lut for cells of type $lut.
Using template $paramod$e5e9da8fed769f971686eed8c5eea50e61f73aaa\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000101 for cells of type $lut.
Using template $paramod$052ca015f1400ebf950f85d5f181f7a5865c336c\$lut for cells of type $lut.
Using template $paramod$6d23198eb2b8f79a41c7626605a61009695893b1\$lut for cells of type $lut.
Using template $paramod$bb4fff1cc3b827238aa40993cafede1c5beecbe3\$lut for cells of type $lut.
Using template $paramod$70ebb6cf5bc7d63c5c1a98ccefefa2af79e8f2a9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111110 for cells of type $lut.
Using template $paramod$53ce561f80f32d4298a3beadc88b6c5c78293221\$lut for cells of type $lut.
Using template $paramod$933f4f3e373a784da64d137def3625bdd36d1695\$lut for cells of type $lut.
Using template $paramod$a15fd389a2f54cb7b94707b25934d226e68d9e2e\$lut for cells of type $lut.
Using template $paramod$7530caf4999f4bf8b546f9698d152c1f32a30bc0\$lut for cells of type $lut.
Using template $paramod$e96de5e9fcce737e52eacf39c70c8f533dc27d63\$lut for cells of type $lut.
Using template $paramod$aff3a645bb9f572421a4f0f49cf8987ceb4bcdc5\$lut for cells of type $lut.
Using template $paramod$9e397ebe328dd6e99655d7894c835c6e05d9ca3f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00111010 for cells of type $lut.
Using template $paramod$d4fae2c0d9ad2966369cd4e39b81c71bcd1327c9\$lut for cells of type $lut.
Using template $paramod$1843b3c15f2447d117e2d5de9b00f791ef5f9fa3\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10010000 for cells of type $lut.
Using template $paramod$d4351ff5831f17027c376f95f6a20679eeba9d81\$lut for cells of type $lut.
Using template $paramod$7c83cdd3fab11059b2f4d686e682542bd63a212c\$lut for cells of type $lut.
Using template $paramod$ad498e625474ac4669814135092d9e5967a65c4b\$lut for cells of type $lut.
Using template $paramod$0bd56cf5130d265bdf3651844aad5160126b46af\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010011 for cells of type $lut.
Using template $paramod$774861bf9b1885d60265e6ddea1c95a32f095489\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110100 for cells of type $lut.
Using template $paramod$068476c0c710ac8dbe39ffa3fa53ad378a613e11\$lut for cells of type $lut.
Using template $paramod$3f6b582516596b8d724aacd3bc2fee7037ba44df\$lut for cells of type $lut.
Using template $paramod$b1617bf5db1c34d37abe281234e8f3be6b6d6c19\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001111 for cells of type $lut.
No more expansions possible.
<suppressed ~2726 debug messages>
Removed 0 unused cells and 2367 unused wires.

2.45. Executing AUTONAME pass.
Renamed 33928 objects in module top (62 iterations).
<suppressed ~2331 debug messages>

2.46. Executing HIERARCHY pass (managing design hierarchy).

2.46.1. Analyzing design hierarchy..
Top module:  \top

2.46.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

2.47. Printing statistics.

=== top ===

   Number of wires:               1109
   Number of wire bits:           6360
   Number of public wires:        1109
   Number of public wire bits:    6360
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1835
     SB_CARRY                      221
     SB_DFF                         72
     SB_DFFE                       161
     SB_DFFESR                     290
     SB_DFFESS                       5
     SB_DFFSR                       30
     SB_DFFSS                        4
     SB_LUT4                      1046
     SB_PLL40_CORE                   1
     SB_RAM40_4K                     5

2.48. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

2.49. Executing JSON backend.

Warnings: 10 unique messages, 10 total
End of script. Logfile hash: c7cd082350, CPU: user 9.76s system 0.14s
Yosys 0.25+97 (git sha1 221036c5b, x86_64-apple-darwin20.2-clang 10.0.0-4ubuntu1 -fPIC -Os)
Time spent: 19% 52x opt_expr (2 sec), 14% 39x opt_clean (1 sec), ...
