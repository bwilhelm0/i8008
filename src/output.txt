
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.25+97 (git sha1 221036c5b, x86_64-apple-darwin20.2-clang 10.0.0-4ubuntu1 -fPIC -Os)


-- Running command `read_verilog -sv debugbus.sv i8008_core.sv; synth_ice40 -json build/synthesis.json -top top' --

1. Executing Verilog-2005 frontend: debugbus.sv
Parsing SystemVerilog input from `debugbus.sv' to AST representation.
Warning: Encountered `parallel_case' comment! Such legacy hot comments are supported by Yosys, but are not part of any formal language specification. Using the Verilog `parallel_case' attribute or the SystemVerilog `unique' or `priority' keywords is recommended!
Generating RTLIL representation for module `\debug_harness'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: i8008_core.sv
Parsing SystemVerilog input from `i8008_core.sv' to AST representation.
Generating RTLIL representation for module `\top'.
Generating RTLIL representation for module `\i8008_core'.
Generating RTLIL representation for module `\ALU'.
Generating RTLIL representation for module `\fsm_decoder'.
Generating RTLIL representation for module `\reg_file'.
Generating RTLIL representation for module `\stack'.
Generating RTLIL representation for module `\Stabilizer'.
Generating RTLIL representation for module `\Register'.
Generating RTLIL representation for module `\FlagRegister'.
Generating RTLIL representation for module `\Counter'.
Successfully finished Verilog frontend.

3. Executing SYNTH_ICE40 pass.

3.1. Executing Verilog-2005 frontend: /Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

3.2. Executing HIERARCHY pass (managing design hierarchy).

3.2.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \i8008_core
Used module:         \fsm_decoder
Used module:         \stack
Used module:         \Counter
Used module:         \reg_file
Used module:         \ALU
Used module:             \FlagRegister
Used module:         \Register
Used module:         \Stabilizer
Parameter \WIDTH = 8
Parameter \STACK_HEIGHT = 8

3.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\i8008_core'.
Parameter \WIDTH = 8
Parameter \STACK_HEIGHT = 8
Generating RTLIL representation for module `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core'.
Parameter \WIDTH = 14
Parameter \HEIGHT = 8

3.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\stack'.
Parameter \WIDTH = 14
Parameter \HEIGHT = 8
Generating RTLIL representation for module `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack'.
Parameter \WIDTH = 3

3.2.4. Executing AST frontend in derive mode using pre-parsed AST for module `\Counter'.
Parameter \WIDTH = 3
Generating RTLIL representation for module `$paramod\Counter\WIDTH=s32'00000000000000000000000000000011'.
Parameter \WIDTH = 8
Parameter \HEIGHT = 7

3.2.5. Executing AST frontend in derive mode using pre-parsed AST for module `\reg_file'.
Parameter \WIDTH = 8
Parameter \HEIGHT = 7
Generating RTLIL representation for module `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file'.
Parameter \WIDTH = 8

3.2.6. Executing AST frontend in derive mode using pre-parsed AST for module `\Register'.
Parameter \WIDTH = 8
Generating RTLIL representation for module `$paramod\Register\WIDTH=s32'00000000000000000000000000001000'.
Parameter \WIDTH = 8
Found cached RTLIL representation for module `$paramod\Register\WIDTH=s32'00000000000000000000000000001000'.
Parameter \WIDTH = 8
Found cached RTLIL representation for module `$paramod\Register\WIDTH=s32'00000000000000000000000000001000'.
Parameter \WIDTH = 8
Found cached RTLIL representation for module `$paramod\Register\WIDTH=s32'00000000000000000000000000001000'.
Parameter \WIDTH = 4

3.2.7. Executing AST frontend in derive mode using pre-parsed AST for module `\FlagRegister'.
Parameter \WIDTH = 4
Generating RTLIL representation for module `$paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100'.

3.2.8. Analyzing design hierarchy..
Top module:  \top
Used module:     $paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core
Used module:         \fsm_decoder
Used module:         \stack
Used module:         \Counter
Used module:         \reg_file
Used module:         \ALU
Used module:             $paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100
Used module:         \Register
Used module:         \Stabilizer
Parameter \WIDTH = 14
Parameter \HEIGHT = 8
Found cached RTLIL representation for module `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack'.
Parameter \WIDTH = 3
Found cached RTLIL representation for module `$paramod\Counter\WIDTH=s32'00000000000000000000000000000011'.
Parameter \WIDTH = 8
Parameter \HEIGHT = 7
Found cached RTLIL representation for module `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file'.
Parameter \WIDTH = 8
Found cached RTLIL representation for module `$paramod\Register\WIDTH=s32'00000000000000000000000000001000'.
Parameter \WIDTH = 8
Found cached RTLIL representation for module `$paramod\Register\WIDTH=s32'00000000000000000000000000001000'.
Parameter \WIDTH = 8
Found cached RTLIL representation for module `$paramod\Register\WIDTH=s32'00000000000000000000000000001000'.
Parameter \WIDTH = 8
Found cached RTLIL representation for module `$paramod\Register\WIDTH=s32'00000000000000000000000000001000'.

3.2.9. Analyzing design hierarchy..
Top module:  \top
Used module:     $paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core
Used module:         \fsm_decoder
Used module:         $paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack
Used module:         $paramod\Counter\WIDTH=s32'00000000000000000000000000000011
Used module:         $paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file
Used module:         \ALU
Used module:             $paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100
Used module:         $paramod\Register\WIDTH=s32'00000000000000000000000000001000
Used module:         \Stabilizer

3.2.10. Analyzing design hierarchy..
Top module:  \top
Used module:     $paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core
Used module:         \fsm_decoder
Used module:         $paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack
Used module:         $paramod\Counter\WIDTH=s32'00000000000000000000000000000011
Used module:         $paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file
Used module:         \ALU
Used module:             $paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100
Used module:         $paramod\Register\WIDTH=s32'00000000000000000000000000001000
Used module:         \Stabilizer
Removing unused module `\Counter'.
Removing unused module `\FlagRegister'.
Removing unused module `\Register'.
Removing unused module `\stack'.
Removing unused module `\reg_file'.
Removing unused module `\i8008_core'.
Removing unused module `\debug_harness'.
Removed 7 unused modules.

3.3. Executing PROC pass (convert processes to netlists).

3.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1414$1342 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1353$1335 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1273$1331 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1212$1324 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1138$1321 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1088$1318 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1017$1315 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:967$1312 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:803$1304 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:742$1297 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:662$1293 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:601$1286 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:527$1283 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:477$1280 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:406$1277 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:356$1274 in module SB_DFFSR.
Marked 1 switch rules as full_case in process $proc$i8008_core.sv:772$1547 in module $paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100.
Marked 1 switch rules as full_case in process $proc$i8008_core.sv:758$1546 in module $paramod\Register\WIDTH=s32'00000000000000000000000000001000.
Marked 1 switch rules as full_case in process $proc$i8008_core.sv:689$1537 in module $paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.
Marked 3 switch rules as full_case in process $proc$i8008_core.sv:786$1530 in module $paramod\Counter\WIDTH=s32'00000000000000000000000000000011.
Marked 3 switch rules as full_case in process $proc$i8008_core.sv:725$1494 in module $paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.
Marked 1 switch rules as full_case in process $proc$i8008_core.sv:660$1042 in module fsm_decoder.
Removed 4 dead cases from process $proc$i8008_core.sv:0$982 in module fsm_decoder.
Marked 8 switch rules as full_case in process $proc$i8008_core.sv:0$982 in module fsm_decoder.
Removed 1 dead cases from process $proc$i8008_core.sv:0$978 in module fsm_decoder.
Removed 1 dead cases from process $proc$i8008_core.sv:0$953 in module ALU.
Marked 1 switch rules as full_case in process $proc$i8008_core.sv:0$953 in module ALU.
Marked 7 switch rules as full_case in process $proc$i8008_core.sv:0$1482 in module $paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.
Removed a total of 6 dead cases.

3.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 10 redundant assignments.
Promoted 62 assignments to connections.

3.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1345'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1341'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1334'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1330'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1323'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1320'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1317'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1314'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1311'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1309'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1307'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1303'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1296'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1292'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1285'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1282'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1279'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1276'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1273'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1271'.
  Set init value: \Q = 1'0

3.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1414$1342'.
Found async reset \R in `\SB_DFFNER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1273$1331'.
Found async reset \S in `\SB_DFFNS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1138$1321'.
Found async reset \R in `\SB_DFFNR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1017$1315'.
Found async reset \S in `\SB_DFFES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:803$1304'.
Found async reset \R in `\SB_DFFER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:662$1293'.
Found async reset \S in `\SB_DFFS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:527$1283'.
Found async reset \R in `\SB_DFFR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:406$1277'.

3.3.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~68 debug messages>

3.3.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SB_DFFNES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1345'.
Creating decoders for process `\SB_DFFNES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1414$1342'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1341'.
Creating decoders for process `\SB_DFFNESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1353$1335'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1334'.
Creating decoders for process `\SB_DFFNER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1273$1331'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1330'.
Creating decoders for process `\SB_DFFNESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1212$1324'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1323'.
Creating decoders for process `\SB_DFFNS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1138$1321'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1320'.
Creating decoders for process `\SB_DFFNSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1088$1318'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1317'.
Creating decoders for process `\SB_DFFNR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1017$1315'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1314'.
Creating decoders for process `\SB_DFFNSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:967$1312'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1311'.
Creating decoders for process `\SB_DFFNE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:922$1310'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1309'.
Creating decoders for process `\SB_DFFN.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:882$1308'.
Creating decoders for process `\SB_DFFES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1307'.
Creating decoders for process `\SB_DFFES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:803$1304'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1303'.
Creating decoders for process `\SB_DFFESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:742$1297'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1296'.
Creating decoders for process `\SB_DFFER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:662$1293'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1292'.
Creating decoders for process `\SB_DFFESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:601$1286'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1285'.
Creating decoders for process `\SB_DFFS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:527$1283'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1282'.
Creating decoders for process `\SB_DFFSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:477$1280'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1279'.
Creating decoders for process `\SB_DFFR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:406$1277'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1276'.
Creating decoders for process `\SB_DFFSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:356$1274'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1273'.
Creating decoders for process `\SB_DFFE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:311$1272'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1271'.
Creating decoders for process `\SB_DFF.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:271$1270'.
Creating decoders for process `$paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100.$proc$i8008_core.sv:772$1547'.
     1/1: $0\Q[3:0]
Creating decoders for process `$paramod\Register\WIDTH=s32'00000000000000000000000000001000.$proc$i8008_core.sv:758$1546'.
     1/1: $0\Q[7:0]
Creating decoders for process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.sv:0$1544'.
Creating decoders for process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.sv:689$1537'.
     1/3: $1$memwr$\rf$i8008_core.sv:691$1536_EN[7:0]$1543
     2/3: $1$memwr$\rf$i8008_core.sv:691$1536_DATA[7:0]$1542
     3/3: $1$memwr$\rf$i8008_core.sv:691$1536_ADDR[2:0]$1541
Creating decoders for process `\Stabilizer.$proc$i8008_core.sv:745$1093'.
Creating decoders for process `$paramod\Counter\WIDTH=s32'00000000000000000000000000000011.$proc$i8008_core.sv:786$1530'.
     1/1: $0\Q[2:0]
Creating decoders for process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.sv:0$1528'.
Creating decoders for process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.sv:725$1494'.
     1/18: $3$memwr$\rf$i8008_core.sv:731$1492_EN[13:0]$1525
     2/18: $3$memwr$\rf$i8008_core.sv:731$1492_DATA[13:0]$1524
     3/18: $3$memwr$\rf$i8008_core.sv:731$1492_ADDR[2:0]$1523
     4/18: $2$memwr$\rf$i8008_core.sv:729$1491_EN[13:0]$1519
     5/18: $2$memwr$\rf$i8008_core.sv:729$1491_DATA[13:0]$1518
     6/18: $2$memwr$\rf$i8008_core.sv:729$1491_ADDR[2:0]$1517
     7/18: $2$memwr$\rf$i8008_core.sv:731$1492_EN[13:0]$1522
     8/18: $2$memwr$\rf$i8008_core.sv:731$1492_DATA[13:0]$1521
     9/18: $2$memwr$\rf$i8008_core.sv:731$1492_ADDR[2:0]$1520
    10/18: $1$memwr$\rf$i8008_core.sv:727$1490_EN[13:0]$1507
    11/18: $1$memwr$\rf$i8008_core.sv:727$1490_DATA[13:0]$1506
    12/18: $1$memwr$\rf$i8008_core.sv:727$1490_ADDR[2:0]$1505
    13/18: $1$memwr$\rf$i8008_core.sv:731$1492_EN[13:0]$1513
    14/18: $1$memwr$\rf$i8008_core.sv:731$1492_DATA[13:0]$1512
    15/18: $1$memwr$\rf$i8008_core.sv:731$1492_ADDR[2:0]$1511
    16/18: $1$memwr$\rf$i8008_core.sv:729$1491_EN[13:0]$1510
    17/18: $1$memwr$\rf$i8008_core.sv:729$1491_DATA[13:0]$1509
    18/18: $1$memwr$\rf$i8008_core.sv:729$1491_ADDR[2:0]$1508
Creating decoders for process `\fsm_decoder.$proc$i8008_core.sv:660$1042'.
     1/2: $0\state[2:0]
     2/2: $0\cycle[1:0]
Creating decoders for process `\fsm_decoder.$proc$i8008_core.sv:0$982'.
     1/175: $5\ctrl_signals[33:29] [4]
     2/175: $90\ctrl_signals[6:6]
     3/175: $91\ctrl_signals[30:30]
     4/175: $73\ctrl_signals[39:38] [1]
     5/175: $68\ctrl_signals[7:3] [3]
     6/175: $86\ctrl_signals[7:6] [0]
     7/175: $85\ctrl_signals[4:4]
     8/175: $87\ctrl_signals[9:9]
     9/175: $88\ctrl_signals[33:33]
    10/175: $73\ctrl_signals[39:38] [0]
    11/175: $68\ctrl_signals[7:3] [1]
    12/175: $82\ctrl_signals[30:30]
    13/175: $84\ctrl_signals[39:38] [0]
    14/175: $83\ctrl_signals[32:32]
    15/175: $12\next_cycle[1:0]
    16/175: $12\next_state[2:0]
    17/175: $11\next_cycle[1:0]
    18/175: $11\next_state[2:0]
    19/175: $10\next_cycle[1:0]
    20/175: $10\next_state[2:0]
    21/175: $72\ctrl_signals[33:32] [1]
    22/175: $68\ctrl_signals[7:3] [4]
    23/175: $79\ctrl_signals[5:3] [0]
    24/175: $79\ctrl_signals[5:3] [1]
    25/175: $81\ctrl_signals[38:38]
    26/175: $78\ctrl_signals[1:0]
    27/175: $79\ctrl_signals[5:3] [2]
    28/175: $80\ctrl_signals[14:11] [0]
    29/175: $84\ctrl_signals[39:38] [1]
    30/175: $86\ctrl_signals[7:6] [1]
    31/175: $75\ctrl_signals[5:4] [0]
    32/175: $77\ctrl_signals[38:38]
    33/175: $74\ctrl_signals[1:0]
    34/175: $75\ctrl_signals[5:4] [1]
    35/175: $76\ctrl_signals[14:11] [0]
    36/175: $72\ctrl_signals[33:32] [0]
    37/175: $70\ctrl_signals[14:11]
    38/175: $80\ctrl_signals[14:11] [3:1]
    39/175: $67\ctrl_signals[1:0]
    40/175: $9\next_state[2:0]
    41/175: $9\next_cycle[1:0]
    42/175: $68\ctrl_signals[7:3] [0]
    43/175: $68\ctrl_signals[7:3] [2]
    44/175: $71\ctrl_signals[30:30]
    45/175: $69\ctrl_signals[9:9]
    46/175: $76\ctrl_signals[14:11] [3:1]
    47/175: $5\ctrl_signals[33:29] [3]
    48/175: $5\ctrl_signals[33:29] [1]
    49/175: $4\ctrl_signals[27:26] [1]
    50/175: $2\ctrl_signals[14:9] [0]
    51/175: $65\ctrl_signals[24:21] [2:0]
    52/175: $63\ctrl_signals[14:12]
    53/175: $66\ctrl_signals[30:30]
    54/175: $62\ctrl_signals[10:10]
    55/175: $64\ctrl_signals[17:17]
    56/175: $47\ctrl_signals[39:38] [1]
    57/175: $41\ctrl_signals[14:10] [1]
    58/175: $61\ctrl_signals[38:38]
    59/175: $45\ctrl_signals[30:29] [1]
    60/175: $59\ctrl_signals[39:38] [0]
    61/175: $58\ctrl_signals[30:29] [1]
    62/175: $58\ctrl_signals[30:29] [0]
    63/175: $8\next_state[2:0]
    64/175: $8\next_cycle[1:0]
    65/175: $47\ctrl_signals[39:38] [0]
    66/175: $54\ctrl_signals[5:3] [1]
    67/175: $53\ctrl_signals[1:0]
    68/175: $57\ctrl_signals[38:38]
    69/175: $54\ctrl_signals[5:3] [2]
    70/175: $55\ctrl_signals[14:11] [0]
    71/175: $56\ctrl_signals[30:30]
    72/175: $54\ctrl_signals[5:3] [0]
    73/175: $59\ctrl_signals[39:38] [1]
    74/175: $41\ctrl_signals[14:10] [0]
    75/175: $49\ctrl_signals[5:4] [0]
    76/175: $52\ctrl_signals[38:38]
    77/175: $48\ctrl_signals[1:0]
    78/175: $49\ctrl_signals[5:4] [1]
    79/175: $51\ctrl_signals[33:33]
    80/175: $50\ctrl_signals[14:11] [0]
    81/175: $45\ctrl_signals[30:29] [0]
    82/175: $46\ctrl_signals[33:33]
    83/175: $40\ctrl_signals[5:3] [0]
    84/175: $55\ctrl_signals[14:11] [3:1]
    85/175: $39\ctrl_signals[1:0]
    86/175: $7\next_state[2:0]
    87/175: $7\next_cycle[1:0]
    88/175: $41\ctrl_signals[14:10] [4:2]
    89/175: $50\ctrl_signals[14:11] [3:1]
    90/175: $44\ctrl_signals[27:27]
    91/175: $43\ctrl_signals[24:21]
    92/175: $42\ctrl_signals[17:17]
    93/175: $60\ctrl_signals[27:27]
    94/175: $40\ctrl_signals[5:3] [2:1]
    95/175: $5\ctrl_signals[33:29] [2]
    96/175: $5\ctrl_signals[33:29] [0]
    97/175: $4\ctrl_signals[27:26] [0]
    98/175: $3\ctrl_signals[24:16] [0]
    99/175: $2\ctrl_signals[14:9] [5:2]
   100/175: $2\ctrl_signals[14:9] [1]
   101/175: $1\ctrl_signals[7:0] [7:6]
   102/175: $1\ctrl_signals[7:0] [5:3]
   103/175: $1\ctrl_signals[7:0] [1:0]
   104/175: $89\ctrl_signals[4:4]
   105/175: $36\ctrl_signals[24:16] [0]
   106/175: $36\ctrl_signals[24:16] [1]
   107/175: $36\ctrl_signals[24:16] [4:2]
   108/175: $36\ctrl_signals[24:16] [7:5]
   109/175: $32\ctrl_signals[4:4]
   110/175: $33\ctrl_signals[6:6]
   111/175: $38\ctrl_signals[30:30]
   112/175: $37\ctrl_signals[26:26]
   113/175: $31\ctrl_signals[2:2]
   114/175: $35\ctrl_signals[14:12]
   115/175: $34\ctrl_signals[10:10]
   116/175: $14\ctrl_signals[39:38] [1]
   117/175: $9\ctrl_signals[14:9] [2]
   118/175: $6\next_state[2:0]
   119/175: $26\ctrl_signals[33:32] [1]
   120/175: $24\ctrl_signals[14:11] [0]
   121/175: $22\ctrl_signals[7:6] [0]
   122/175: $26\ctrl_signals[33:32] [0]
   123/175: $28\ctrl_signals[14:11] [0]
   124/175: $29\ctrl_signals[29:29]
   125/175: $30\ctrl_signals[38:38]
   126/175: $27\ctrl_signals[38:38]
   127/175: $25\ctrl_signals[29:29]
   128/175: $22\ctrl_signals[7:6] [1]
   129/175: $28\ctrl_signals[14:11] [3:1]
   130/175: $23\ctrl_signals[9:9]
   131/175: $24\ctrl_signals[14:11] [3:1]
   132/175: $21\ctrl_signals[4:4]
   133/175: $8\ctrl_signals[7:0] [5]
   134/175: $9\ctrl_signals[14:9] [1]
   135/175: $5\next_cycle[1:0]
   136/175: $4\next_cycle[1:0]
   137/175: $4\next_state[2:0]
   138/175: $3\next_state[2:0]
   139/175: $3\next_cycle[1:0]
   140/175: $20\ctrl_signals[39:39]
   141/175: $16\ctrl_signals[9:9]
   142/175: $15\ctrl_signals[7:7]
   143/175: $18\ctrl_signals[31:31]
   144/175: $17\ctrl_signals[29:29]
   145/175: $19\ctrl_signals[35:35]
   146/175: $12\ctrl_signals[33:29] [2]
   147/175: $12\ctrl_signals[33:29] [1]
   148/175: $9\ctrl_signals[14:9] [0]
   149/175: $9\ctrl_signals[14:9] [5:3]
   150/175: $8\ctrl_signals[7:0] [7]
   151/175: $12\ctrl_signals[33:29] [0]
   152/175: $6\next_cycle[1:0]
   153/175: $5\next_state[2:0]
   154/175: $8\ctrl_signals[7:0] [1:0]
   155/175: $8\ctrl_signals[7:0] [4]
   156/175: $12\ctrl_signals[33:29] [4:3]
   157/175: $2\next_state[2:0]
   158/175: $2\next_cycle[1:0]
   159/175: $14\ctrl_signals[39:38] [0]
   160/175: $13\ctrl_signals[35:35]
   161/175: $8\ctrl_signals[7:0] [3]
   162/175: $11\ctrl_signals[26:26]
   163/175: $10\ctrl_signals[24:16]
   164/175: $8\ctrl_signals[7:0] [6]
   165/175: $8\ctrl_signals[7:0] [2]
   166/175: $1\next_state[2:0]
   167/175: $1\next_cycle[1:0]
   168/175: $7\ctrl_signals[39:38]
   169/175: $6\ctrl_signals[35:35]
   170/175: $3\ctrl_signals[24:16] [1]
   171/175: $3\ctrl_signals[24:16] [4:2]
   172/175: $65\ctrl_signals[24:21] [3]
   173/175: $1\ctrl_signals[7:0] [2]
   174/175: $36\ctrl_signals[24:16] [8]
   175/175: $3\ctrl_signals[24:16] [8:5]
Creating decoders for process `\fsm_decoder.$proc$i8008_core.sv:0$978'.
     1/1: $1\CF[0:0]
Creating decoders for process `\ALU.$proc$i8008_core.sv:0$953'.
     1/8: $3\flag_in[3:3]
     2/8: $3\d[7:0]
     3/8: $2\NA[7:0]
     4/8: $2\flag_in[3:3]
     5/8: $2\d[7:0]
     6/8: $1\flag_in[3:3]
     7/8: $1\d[7:0]
     8/8: $1\NA[7:0]
Creating decoders for process `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.$proc$i8008_core.sv:0$1482'.
     1/8: $7\bus[7:0]
     2/8: $6\bus[7:0]
     3/8: $5\bus[7:0]
     4/8: $4\bus[7:0] [7:4]
     5/8: $4\bus[7:0] [3:0]
     6/8: $3\bus[7:0]
     7/8: $2\bus[7:0]
     8/8: $1\bus[7:0]
Creating decoders for process `\top.$proc$i8008_core.sv:0$943'.

3.3.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.\rs' from process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.sv:0$1544'.
No latch inferred for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.\rs' from process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.sv:0$1528'.
No latch inferred for signal `\fsm_decoder.\ctrl_signals' from process `\fsm_decoder.$proc$i8008_core.sv:0$982'.
No latch inferred for signal `\fsm_decoder.\next_cycle' from process `\fsm_decoder.$proc$i8008_core.sv:0$982'.
No latch inferred for signal `\fsm_decoder.\next_state' from process `\fsm_decoder.$proc$i8008_core.sv:0$982'.
No latch inferred for signal `\fsm_decoder.\CF' from process `\fsm_decoder.$proc$i8008_core.sv:0$978'.
No latch inferred for signal `\ALU.\d' from process `\ALU.$proc$i8008_core.sv:0$953'.
No latch inferred for signal `\ALU.\flag_in' from process `\ALU.$proc$i8008_core.sv:0$953'.
No latch inferred for signal `\ALU.\NA' from process `\ALU.$proc$i8008_core.sv:0$953'.
No latch inferred for signal `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.\bus' from process `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.$proc$i8008_core.sv:0$1482'.
No latch inferred for signal `\top.\led' from process `\top.$proc$i8008_core.sv:0$943'.

3.3.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1414$1342'.
  created $adff cell `$procdff$3830' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1353$1335'.
  created $dff cell `$procdff$3831' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1273$1331'.
  created $adff cell `$procdff$3832' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1212$1324'.
  created $dff cell `$procdff$3833' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1138$1321'.
  created $adff cell `$procdff$3834' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1088$1318'.
  created $dff cell `$procdff$3835' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1017$1315'.
  created $adff cell `$procdff$3836' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:967$1312'.
  created $dff cell `$procdff$3837' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:922$1310'.
  created $dff cell `$procdff$3838' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:882$1308'.
  created $dff cell `$procdff$3839' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:803$1304'.
  created $adff cell `$procdff$3840' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:742$1297'.
  created $dff cell `$procdff$3841' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:662$1293'.
  created $adff cell `$procdff$3842' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:601$1286'.
  created $dff cell `$procdff$3843' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:527$1283'.
  created $adff cell `$procdff$3844' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:477$1280'.
  created $dff cell `$procdff$3845' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:406$1277'.
  created $adff cell `$procdff$3846' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:356$1274'.
  created $dff cell `$procdff$3847' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:311$1272'.
  created $dff cell `$procdff$3848' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:271$1270'.
  created $dff cell `$procdff$3849' with positive edge clock.
Creating register for signal `$paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100.\Q' using process `$paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100.$proc$i8008_core.sv:772$1547'.
  created $dff cell `$procdff$3850' with positive edge clock.
Creating register for signal `$paramod\Register\WIDTH=s32'00000000000000000000000000001000.\Q' using process `$paramod\Register\WIDTH=s32'00000000000000000000000000001000.$proc$i8008_core.sv:758$1546'.
  created $dff cell `$procdff$3851' with positive edge clock.
Creating register for signal `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$memwr$\rf$i8008_core.sv:691$1536_ADDR' using process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.sv:689$1537'.
  created $dff cell `$procdff$3852' with positive edge clock.
Creating register for signal `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$memwr$\rf$i8008_core.sv:691$1536_DATA' using process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.sv:689$1537'.
  created $dff cell `$procdff$3853' with positive edge clock.
Creating register for signal `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$memwr$\rf$i8008_core.sv:691$1536_EN' using process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.sv:689$1537'.
  created $dff cell `$procdff$3854' with positive edge clock.
Creating register for signal `\Stabilizer.\Q' using process `\Stabilizer.$proc$i8008_core.sv:745$1093'.
  created $dff cell `$procdff$3855' with positive edge clock.
Creating register for signal `\Stabilizer.\temp' using process `\Stabilizer.$proc$i8008_core.sv:745$1093'.
  created $dff cell `$procdff$3856' with positive edge clock.
Creating register for signal `$paramod\Counter\WIDTH=s32'00000000000000000000000000000011.\Q' using process `$paramod\Counter\WIDTH=s32'00000000000000000000000000000011.$proc$i8008_core.sv:786$1530'.
  created $dff cell `$procdff$3857' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.sv:727$1490_ADDR' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.sv:725$1494'.
  created $dff cell `$procdff$3858' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.sv:727$1490_DATA' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.sv:725$1494'.
  created $dff cell `$procdff$3859' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.sv:727$1490_EN' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.sv:725$1494'.
  created $dff cell `$procdff$3860' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.sv:729$1491_ADDR' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.sv:725$1494'.
  created $dff cell `$procdff$3861' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.sv:729$1491_DATA' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.sv:725$1494'.
  created $dff cell `$procdff$3862' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.sv:729$1491_EN' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.sv:725$1494'.
  created $dff cell `$procdff$3863' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.sv:731$1492_ADDR' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.sv:725$1494'.
  created $dff cell `$procdff$3864' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.sv:731$1492_DATA' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.sv:725$1494'.
  created $dff cell `$procdff$3865' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.sv:731$1492_EN' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.sv:725$1494'.
  created $dff cell `$procdff$3866' with positive edge clock.
Creating register for signal `\fsm_decoder.\state' using process `\fsm_decoder.$proc$i8008_core.sv:660$1042'.
  created $dff cell `$procdff$3867' with positive edge clock.
Creating register for signal `\fsm_decoder.\cycle' using process `\fsm_decoder.$proc$i8008_core.sv:660$1042'.
  created $dff cell `$procdff$3868' with positive edge clock.

3.3.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.3.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SB_DFFNES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1345'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1414$1342'.
Removing empty process `SB_DFFNES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1414$1342'.
Removing empty process `SB_DFFNESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1341'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1353$1335'.
Removing empty process `SB_DFFNESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1353$1335'.
Removing empty process `SB_DFFNER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1334'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1273$1331'.
Removing empty process `SB_DFFNER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1273$1331'.
Removing empty process `SB_DFFNESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1330'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1212$1324'.
Removing empty process `SB_DFFNESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1212$1324'.
Removing empty process `SB_DFFNS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1323'.
Removing empty process `SB_DFFNS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1138$1321'.
Removing empty process `SB_DFFNSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1320'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1088$1318'.
Removing empty process `SB_DFFNSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1088$1318'.
Removing empty process `SB_DFFNR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1317'.
Removing empty process `SB_DFFNR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1017$1315'.
Removing empty process `SB_DFFNSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1314'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:967$1312'.
Removing empty process `SB_DFFNSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:967$1312'.
Removing empty process `SB_DFFNE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1311'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:922$1310'.
Removing empty process `SB_DFFNE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:922$1310'.
Removing empty process `SB_DFFN.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1309'.
Removing empty process `SB_DFFN.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:882$1308'.
Removing empty process `SB_DFFES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1307'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:803$1304'.
Removing empty process `SB_DFFES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:803$1304'.
Removing empty process `SB_DFFESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1303'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:742$1297'.
Removing empty process `SB_DFFESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:742$1297'.
Removing empty process `SB_DFFER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1296'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:662$1293'.
Removing empty process `SB_DFFER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:662$1293'.
Removing empty process `SB_DFFESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1292'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:601$1286'.
Removing empty process `SB_DFFESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:601$1286'.
Removing empty process `SB_DFFS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1285'.
Removing empty process `SB_DFFS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:527$1283'.
Removing empty process `SB_DFFSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1282'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:477$1280'.
Removing empty process `SB_DFFSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:477$1280'.
Removing empty process `SB_DFFR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1279'.
Removing empty process `SB_DFFR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:406$1277'.
Removing empty process `SB_DFFSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1276'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:356$1274'.
Removing empty process `SB_DFFSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:356$1274'.
Removing empty process `SB_DFFE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1273'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:311$1272'.
Removing empty process `SB_DFFE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:311$1272'.
Removing empty process `SB_DFF.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1271'.
Removing empty process `SB_DFF.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:271$1270'.
Found and cleaned up 2 empty switches in `$paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100.$proc$i8008_core.sv:772$1547'.
Removing empty process `$paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100.$proc$i8008_core.sv:772$1547'.
Found and cleaned up 2 empty switches in `$paramod\Register\WIDTH=s32'00000000000000000000000000001000.$proc$i8008_core.sv:758$1546'.
Removing empty process `$paramod\Register\WIDTH=s32'00000000000000000000000000001000.$proc$i8008_core.sv:758$1546'.
Removing empty process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.sv:0$1544'.
Found and cleaned up 1 empty switch in `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.sv:689$1537'.
Removing empty process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.sv:689$1537'.
Removing empty process `Stabilizer.$proc$i8008_core.sv:745$1093'.
Found and cleaned up 4 empty switches in `$paramod\Counter\WIDTH=s32'00000000000000000000000000000011.$proc$i8008_core.sv:786$1530'.
Removing empty process `$paramod\Counter\WIDTH=s32'00000000000000000000000000000011.$proc$i8008_core.sv:786$1530'.
Removing empty process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.sv:0$1528'.
Found and cleaned up 3 empty switches in `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.sv:725$1494'.
Removing empty process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.sv:725$1494'.
Found and cleaned up 1 empty switch in `\fsm_decoder.$proc$i8008_core.sv:660$1042'.
Removing empty process `fsm_decoder.$proc$i8008_core.sv:660$1042'.
Found and cleaned up 26 empty switches in `\fsm_decoder.$proc$i8008_core.sv:0$982'.
Removing empty process `fsm_decoder.$proc$i8008_core.sv:0$982'.
Found and cleaned up 1 empty switch in `\fsm_decoder.$proc$i8008_core.sv:0$978'.
Removing empty process `fsm_decoder.$proc$i8008_core.sv:0$978'.
Found and cleaned up 3 empty switches in `\ALU.$proc$i8008_core.sv:0$953'.
Removing empty process `ALU.$proc$i8008_core.sv:0$953'.
Found and cleaned up 7 empty switches in `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.$proc$i8008_core.sv:0$1482'.
Removing empty process `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.$proc$i8008_core.sv:0$1482'.
Removing empty process `top.$proc$i8008_core.sv:0$943'.
Cleaned up 68 empty switches.

3.3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100.
Optimizing module $paramod\Register\WIDTH=s32'00000000000000000000000000001000.
Optimizing module $paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.
Optimizing module Stabilizer.
Optimizing module $paramod\Counter\WIDTH=s32'00000000000000000000000000000011.
Optimizing module $paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.
Optimizing module fsm_decoder.
<suppressed ~167 debug messages>
Optimizing module ALU.
<suppressed ~7 debug messages>
Optimizing module $paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.
<suppressed ~1 debug messages>
Optimizing module top.

3.4. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100.
Deleting now unused module $paramod\Register\WIDTH=s32'00000000000000000000000000001000.
Deleting now unused module $paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.
Deleting now unused module Stabilizer.
Deleting now unused module $paramod\Counter\WIDTH=s32'00000000000000000000000000000011.
Deleting now unused module $paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.
Deleting now unused module fsm_decoder.
Deleting now unused module ALU.
Deleting now unused module $paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.
<suppressed ~13 debug messages>

3.5. Executing TRIBUF pass.

3.6. Executing DEMINOUT pass (demote inout ports to input or output).

3.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~8 debug messages>

3.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 45 unused cells and 432 unused wires.
<suppressed ~52 debug messages>

3.9. Executing CHECK pass (checking for obvious problems).
Checking module top...
Warning: Wire top.\uart_tx is used but has no driver.
Warning: Wire top.\led [8] is used but has no driver.
Warning: Wire top.\led [7] is used but has no driver.
Warning: Wire top.\led [6] is used but has no driver.
Warning: Wire top.\led [5] is used but has no driver.
Warning: Wire top.\led [4] is used but has no driver.
Warning: Wire top.\led [3] is used but has no driver.
Warning: Wire top.\led [2] is used but has no driver.
Warning: Wire top.\led [1] is used but has no driver.
Warning: Wire top.\led [0] is used but has no driver.
Warning: Wire top.\display_sel [3] is used but has no driver.
Warning: Wire top.\display_sel [2] is used but has no driver.
Warning: Wire top.\display_sel [1] is used but has no driver.
Warning: Wire top.\display_sel [0] is used but has no driver.
Warning: Wire top.\display [7] is used but has no driver.
Warning: Wire top.\display [6] is used but has no driver.
Warning: Wire top.\display [5] is used but has no driver.
Warning: Wire top.\display [4] is used but has no driver.
Warning: Wire top.\display [3] is used but has no driver.
Warning: Wire top.\display [2] is used but has no driver.
Warning: Wire top.\display [1] is used but has no driver.
Warning: Wire top.\display [0] is used but has no driver.
Warning: Wire top.\base_led [7] is used but has no driver.
Warning: Wire top.\base_led [6] is used but has no driver.
Warning: Wire top.\base_led [5] is used but has no driver.
Warning: Wire top.\base_led [4] is used but has no driver.
Warning: Wire top.\base_led [3] is used but has no driver.
Warning: Wire top.\base_led [2] is used but has no driver.
Warning: Wire top.\base_led [1] is used but has no driver.
Warning: Wire top.\base_led [0] is used but has no driver.
Warning: Wire top.\DUT.regB.d [7] is used but has no driver.
Warning: Wire top.\DUT.regB.d [6] is used but has no driver.
Warning: Wire top.\DUT.regB.d [5] is used but has no driver.
Warning: Wire top.\DUT.regB.d [4] is used but has no driver.
Warning: Wire top.\DUT.regB.d [3] is used but has no driver.
Warning: Wire top.\DUT.regB.d [2] is used but has no driver.
Warning: Wire top.\DUT.regB.d [1] is used but has no driver.
Warning: Wire top.\DUT.regB.d [0] is used but has no driver.
Warning: Wire top.\DUT.regA.d [7] is used but has no driver.
Warning: Wire top.\DUT.regA.d [6] is used but has no driver.
Warning: Wire top.\DUT.regA.d [5] is used but has no driver.
Warning: Wire top.\DUT.regA.d [4] is used but has no driver.
Warning: Wire top.\DUT.regA.d [3] is used but has no driver.
Warning: Wire top.\DUT.regA.d [2] is used but has no driver.
Warning: Wire top.\DUT.regA.d [1] is used but has no driver.
Warning: Wire top.\DUT.regA.d [0] is used but has no driver.
Warning: Wire top.\DUT.DBR_in [7] is used but has no driver.
Warning: Wire top.\DUT.DBR_in [6] is used but has no driver.
Warning: Wire top.\DUT.DBR_in [5] is used but has no driver.
Warning: Wire top.\DUT.DBR_in [4] is used but has no driver.
Warning: Wire top.\DUT.DBR_in [3] is used but has no driver.
Warning: Wire top.\DUT.DBR_in [2] is used but has no driver.
Warning: Wire top.\DUT.DBR_in [1] is used but has no driver.
Warning: Wire top.\DUT.DBR_in [0] is used but has no driver.
Found and reported 54 problems.

3.10. Executing OPT pass (performing simple optimizations).

3.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~5547 debug messages>
Removed a total of 1849 cells.

3.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3150.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1804.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3152.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1775.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3154.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2241.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2243.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1933.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2542.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2944.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3168.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2544.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3170.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1988.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1763.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2866.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1990.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2166.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2251.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2462.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2253.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3184.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3186.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2464.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2955.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2964.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2557.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1813.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2966.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2559.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2261.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2868.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3200.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3202.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2263.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1910.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2000.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2840.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3213.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2002.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2139.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2271.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2273.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2572.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1765.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3224.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3236.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2574.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3238.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3240.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3253.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3255.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1942.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2980.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3257.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3270.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1783.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2982.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1822.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3272.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2175.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2012.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3274.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2283.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2014.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2587.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2842.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2589.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3753.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1824.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2476.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2478.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3286.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1785.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2293.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1922.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3288.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2599.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2301.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3759.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2303.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2879.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2023.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3762.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2996.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3765.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2998.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2609.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3768.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3300.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2881.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2025.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1727.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3302.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3311.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3313.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2313.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3323.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2184.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1952.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3325.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2619.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3335.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3337.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1729.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3347.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1954.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1833.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2434.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3349.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2487.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3358.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2128.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3771.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2436.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3360.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2033.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3370.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2035.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1835.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3372.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3012.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2322.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3014.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2631.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2633.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2489.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3383.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2324.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2130.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3777.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3780.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3738.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3783.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3394.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3786.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2643.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2046.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1924.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2193.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1735.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2048.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3405.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3792.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1793.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2905.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1844.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2653.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2333.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2907.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3416.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2148.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1737.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3028.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3795.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2335.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2499.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3030.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1795.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3427.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2663.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1846.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3798.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2059.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3045.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1855.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3438.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2061.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3447.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3449.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3047.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3461.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2673.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3463.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3049.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1964.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3465.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3064.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2344.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1857.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3066.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1966.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3068.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3476.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2346.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2072.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3083.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2686.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3487.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1859.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2688.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2074.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2204.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3085.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3498.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2356.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1912.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3087.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1868.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2698.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2853.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3509.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2358.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2206.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1870.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2420.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2512.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3520.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2708.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2085.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2918.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1746.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2920.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3531.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2087.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2368.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2514.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3741.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3101.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1872.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2718.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2726.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3542.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3103.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2728.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2370.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3744.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1882.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3553.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2855.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3804.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3807.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2738.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1884.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1773.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3575.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2098.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1976.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2448.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2380.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3747.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3586.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2100.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2450.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3810.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3597.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3117.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1886.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3816.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3119.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1896.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3819.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2788.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2392.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2790.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1978.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2109.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2527.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3635.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3637.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2157.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2394.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2231.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1898.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2801.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3653.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2803.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3655.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3750.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2529.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2233.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1626.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1629.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1635.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1638.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1644.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1647.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1653.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1659.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1665.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1671.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1677.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1683.
    dead port 1/2 on $mux $flatten\DUT.\Unit.$procmux$3677.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2931.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3825.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2422.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1755.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2814.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1900.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2816.
    dead port 1/2 on $mux $flatten\DUT.\Unit.$procmux$3689.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3133.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2118.
    dead port 1/2 on $mux $flatten\DUT.\Unit.$procmux$3701.
    dead port 2/2 on $mux $flatten\DUT.\Unit.$procmux$3712.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2933.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2406.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3135.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2827.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2408.
    dead port 2/2 on $mux $flatten\DUT.\Unit.$procmux$3723.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2829.
Removed 303 multiplexer ports.
<suppressed ~45 debug messages>

3.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2874: { $flatten\DUT.\Brain.$eq$i8008_core.sv:276$983_Y $auto$opt_reduce.cc:134:opt_pmux$3874 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2913: { $flatten\DUT.\Brain.$procmux$2838_CTRL $auto$opt_reduce.cc:134:opt_pmux$3876 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2508: { $flatten\DUT.\Brain.$procmux$2419_CTRL $auto$opt_reduce.cc:134:opt_pmux$3878 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2603: { $flatten\DUT.\Brain.$procmux$2138_CTRL $auto$opt_reduce.cc:134:opt_pmux$3880 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2416: $auto$opt_reduce.cc:134:opt_pmux$3882
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2307: { $flatten\DUT.\Brain.$procmux$1744_CMP $flatten\DUT.\Brain.$procmux$1911_CTRL $auto$opt_reduce.cc:134:opt_pmux$3884 $flatten\DUT.\Brain.$procmux$1728_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1790: $auto$opt_reduce.cc:134:opt_pmux$3886
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2682: { $flatten\DUT.\Brain.$procmux$2418_CTRL $auto$opt_reduce.cc:134:opt_pmux$3888 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2848: { $flatten\DUT.\Brain.$eq$i8008_core.sv:276$983_Y $auto$opt_reduce.cc:134:opt_pmux$3890 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3470: $auto$opt_reduce.cc:134:opt_pmux$3892
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3218: { $auto$opt_reduce.cc:134:opt_pmux$3894 $flatten\DUT.\Brain.$procmux$1728_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2151: { $flatten\DUT.\Brain.$procmux$1911_CTRL $auto$opt_reduce.cc:134:opt_pmux$3896 $flatten\DUT.\Brain.$procmux$1728_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1798: { $flatten\DUT.\Brain.$procmux$2138_CTRL $flatten\DUT.\Brain.$procmux$1744_CMP $flatten\DUT.\Brain.$procmux$1911_CTRL $auto$opt_reduce.cc:134:opt_pmux$3898 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2613: { $flatten\DUT.\Brain.$procmux$1744_CMP $auto$opt_reduce.cc:134:opt_pmux$3900 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3481: { $flatten\DUT.\Brain.$procmux$2138_CTRL $auto$opt_reduce.cc:134:opt_pmux$3902 $flatten\DUT.\Brain.$procmux$1742_CMP $flatten\DUT.\Brain.$procmux$1728_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3005: { $auto$opt_reduce.cc:134:opt_pmux$3904 $flatten\DUT.\Brain.$eq$i8008_core.sv:276$983_Y }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3492: { $flatten\DUT.\Brain.$procmux$1742_CMP $auto$opt_reduce.cc:134:opt_pmux$3906 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1927: { $flatten\DUT.\Brain.$procmux$1742_CMP $auto$opt_reduce.cc:134:opt_pmux$3908 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2692: { $flatten\DUT.\Brain.$procmux$1742_CMP $auto$opt_reduce.cc:134:opt_pmux$3910 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2277: { $flatten\DUT.\Brain.$procmux$1911_CTRL $auto$opt_reduce.cc:134:opt_pmux$3912 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1973: $auto$opt_reduce.cc:134:opt_pmux$3914
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3094: { $flatten\DUT.\Brain.$procmux$2979_CTRL $auto$opt_reduce.cc:134:opt_pmux$3916 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2169: { $flatten\DUT.\Brain.$procmux$2138_CTRL $flatten\DUT.\Brain.$procmux$1744_CMP $auto$opt_reduce.cc:134:opt_pmux$3918 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2702: { $auto$opt_reduce.cc:134:opt_pmux$3920 $flatten\DUT.\Brain.$procmux$1728_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2430: { $flatten\DUT.\Brain.$procmux$2419_CTRL $auto$opt_reduce.cc:134:opt_pmux$3922 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3514: { $auto$opt_reduce.cc:134:opt_pmux$3924 $flatten\DUT.\Brain.$procmux$1911_CTRL $flatten\DUT.\Brain.$procmux$1742_CMP $flatten\DUT.\Brain.$procmux$1728_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2900: { $flatten\DUT.\Brain.$eq$i8008_core.sv:276$983_Y $auto$opt_reduce.cc:134:opt_pmux$3926 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2187: { $flatten\DUT.\Brain.$procmux$1742_CMP $auto$opt_reduce.cc:134:opt_pmux$3928 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2627: { $flatten\DUT.\Brain.$procmux$2418_CTRL $auto$opt_reduce.cc:134:opt_pmux$3930 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3525: { $auto$opt_reduce.cc:134:opt_pmux$3934 $flatten\DUT.\Brain.$procmux$1742_CMP $auto$opt_reduce.cc:134:opt_pmux$3932 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2258: $auto$opt_reduce.cc:134:opt_pmux$3936
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2712: { $auto$opt_reduce.cc:134:opt_pmux$3938 $flatten\DUT.\Brain.$procmux$1728_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2583: { $flatten\DUT.\Brain.$procmux$2418_CTRL $auto$opt_reduce.cc:134:opt_pmux$3940 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3536: { $flatten\DUT.\Brain.$procmux$1911_CTRL $auto$opt_reduce.cc:134:opt_pmux$3942 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2835: { $auto$opt_reduce.cc:134:opt_pmux$3946 $auto$opt_reduce.cc:134:opt_pmux$3944 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1936: { $flatten\DUT.\Brain.$procmux$1742_CMP $auto$opt_reduce.cc:134:opt_pmux$3948 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2523: $auto$opt_reduce.cc:134:opt_pmux$3950
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3547: { $flatten\DUT.\Brain.$procmux$1744_CMP $auto$opt_reduce.cc:134:opt_pmux$3952 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3193: $auto$opt_reduce.cc:134:opt_pmux$3954
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2732: { $flatten\DUT.\Brain.$procmux$2138_CTRL $flatten\DUT.\Brain.$procmux$1744_CMP $auto$opt_reduce.cc:134:opt_pmux$3956 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1749: { $auto$opt_reduce.cc:134:opt_pmux$3958 $flatten\DUT.\Brain.$procmux$1742_CMP $flatten\DUT.\Brain.$procmux$1728_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3110: { $flatten\DUT.\Brain.$procmux$2979_CTRL $auto$opt_reduce.cc:134:opt_pmux$3960 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3161: { $flatten\DUT.\Brain.$procmux$2976_CMP $flatten\DUT.\Brain.$procmux$2975_CTRL $auto$opt_reduce.cc:134:opt_pmux$3962 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2926: { $flatten\DUT.\Brain.$eq$i8008_core.sv:276$983_Y $auto$opt_reduce.cc:134:opt_pmux$3964 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3569: { $auto$opt_reduce.cc:134:opt_pmux$3966 $flatten\DUT.\Brain.$procmux$1728_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1961: $auto$opt_reduce.cc:134:opt_pmux$3968
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3377: { $flatten\DUT.\Brain.$procmux$1911_CTRL $auto$opt_reduce.cc:134:opt_pmux$3970 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3580: { $auto$opt_reduce.cc:134:opt_pmux$3972 $flatten\DUT.\Brain.$procmux$1742_CMP $flatten\DUT.\Brain.$procmux$1728_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2444: { $flatten\DUT.\Brain.$procmux$2418_CTRL $auto$opt_reduce.cc:134:opt_pmux$3974 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2388: $auto$opt_reduce.cc:134:opt_pmux$3976
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3591: { $auto$opt_reduce.cc:134:opt_pmux$3978 $flatten\DUT.\Brain.$procmux$1728_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2637: { $flatten\DUT.\Brain.$procmux$2138_CTRL $flatten\DUT.\Brain.$procmux$1744_CMP $auto$opt_reduce.cc:134:opt_pmux$3980 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2103: { $flatten\DUT.\Brain.$procmux$1911_CTRL $auto$opt_reduce.cc:134:opt_pmux$3982 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2472: { $flatten\DUT.\Brain.$procmux$2419_CTRL $auto$opt_reduce.cc:134:opt_pmux$3984 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3021: { $auto$opt_reduce.cc:134:opt_pmux$3988 $auto$opt_reduce.cc:134:opt_pmux$3986 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3388: { $auto$opt_reduce.cc:134:opt_pmux$3990 $flatten\DUT.\Brain.$procmux$1728_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2989: { $flatten\DUT.\Brain.$procmux$2979_CTRL $auto$opt_reduce.cc:134:opt_pmux$3994 $auto$opt_reduce.cc:134:opt_pmux$3992 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3126: $auto$opt_reduce.cc:134:opt_pmux$3996
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2861: { $flatten\DUT.\Brain.$eq$i8008_core.sv:276$983_Y $auto$opt_reduce.cc:134:opt_pmux$3998 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2493: { $auto$opt_reduce.cc:134:opt_pmux$4000 $flatten\DUT.\Brain.$procmux$1728_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2796: { $flatten\DUT.\Brain.$procmux$2838_CTRL $auto$opt_reduce.cc:134:opt_pmux$4002 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3648: { $flatten\DUT.\Brain.$eq$i8008_core.sv:276$983_Y $auto$opt_reduce.cc:134:opt_pmux$4004 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3399: { $flatten\DUT.\Brain.$procmux$1911_CTRL $flatten\DUT.\Brain.$procmux$1742_CMP $auto$opt_reduce.cc:134:opt_pmux$4006 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2458: { $auto$opt_reduce.cc:134:opt_pmux$4008 $flatten\DUT.\Brain.$procmux$2417_CTRL }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3177: { $flatten\DUT.\Brain.$procmux$2979_CTRL $flatten\DUT.\Brain.$procmux$2838_CTRL $auto$opt_reduce.cc:134:opt_pmux$4010 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2287: { $flatten\DUT.\Brain.$procmux$2138_CTRL $flatten\DUT.\Brain.$procmux$1744_CMP $auto$opt_reduce.cc:134:opt_pmux$4012 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2809: { $auto$opt_reduce.cc:134:opt_pmux$4016 $auto$opt_reduce.cc:134:opt_pmux$4014 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2553: { $flatten\DUT.\Brain.$procmux$2419_CTRL $auto$opt_reduce.cc:134:opt_pmux$4018 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2112: { $flatten\DUT.\Brain.$procmux$2138_CTRL $flatten\DUT.\Brain.$procmux$1744_CMP $auto$opt_reduce.cc:134:opt_pmux$4020 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2568: { $auto$opt_reduce.cc:134:opt_pmux$4022 $flatten\DUT.\Brain.$procmux$2417_CTRL }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$1623:
      Old ports: A=14'00000000000000, B=14'11111111111111, Y=$flatten\DUT.\Stack.$procmux$1623_Y
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\Stack.$procmux$1623_Y [0]
      New connections: $flatten\DUT.\Stack.$procmux$1623_Y [13:1] = { $flatten\DUT.\Stack.$procmux$1623_Y [0] $flatten\DUT.\Stack.$procmux$1623_Y [0] $flatten\DUT.\Stack.$procmux$1623_Y [0] $flatten\DUT.\Stack.$procmux$1623_Y [0] $flatten\DUT.\Stack.$procmux$1623_Y [0] $flatten\DUT.\Stack.$procmux$1623_Y [0] $flatten\DUT.\Stack.$procmux$1623_Y [0] $flatten\DUT.\Stack.$procmux$1623_Y [0] $flatten\DUT.\Stack.$procmux$1623_Y [0] $flatten\DUT.\Stack.$procmux$1623_Y [0] $flatten\DUT.\Stack.$procmux$1623_Y [0] $flatten\DUT.\Stack.$procmux$1623_Y [0] $flatten\DUT.\Stack.$procmux$1623_Y [0] }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2178: { $flatten\DUT.\Brain.$procmux$1911_CTRL $auto$opt_reduce.cc:134:opt_pmux$4024 $flatten\DUT.\Brain.$procmux$1728_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3410: { $auto$opt_reduce.cc:134:opt_pmux$4026 $flatten\DUT.\Brain.$procmux$1742_CMP $flatten\DUT.\Brain.$procmux$1728_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2056: $auto$opt_reduce.cc:134:opt_pmux$4028
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2973: { $auto$opt_reduce.cc:134:opt_pmux$4030 $flatten\DUT.\Brain.$eq$i8008_core.sv:276$983_Y }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$1650:
      Old ports: A=14'00000000000000, B=14'11111100000000, Y=$flatten\DUT.\Stack.$procmux$1650_Y
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\Stack.$procmux$1650_Y [8]
      New connections: { $flatten\DUT.\Stack.$procmux$1650_Y [13:9] $flatten\DUT.\Stack.$procmux$1650_Y [7:0] } = { $flatten\DUT.\Stack.$procmux$1650_Y [8] $flatten\DUT.\Stack.$procmux$1650_Y [8] $flatten\DUT.\Stack.$procmux$1650_Y [8] $flatten\DUT.\Stack.$procmux$1650_Y [8] $flatten\DUT.\Stack.$procmux$1650_Y [8] 8'00000000 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2593: { $flatten\DUT.\Brain.$procmux$1911_CTRL $auto$opt_reduce.cc:134:opt_pmux$4032 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2938: { $flatten\DUT.\Brain.$procmux$1911_CTRL $auto$opt_reduce.cc:134:opt_pmux$4034 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1770: $auto$opt_reduce.cc:134:opt_pmux$4036
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2133: { $flatten\DUT.\Brain.$procmux$2138_CTRL $flatten\DUT.\Brain.$procmux$1744_CMP $auto$opt_reduce.cc:134:opt_pmux$4038 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2657: { $flatten\DUT.\Brain.$procmux$1911_CTRL $auto$opt_reduce.cc:134:opt_pmux$4040 $flatten\DUT.\Brain.$procmux$1728_CMP }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$1686:
      Old ports: A=14'00000000000000, B=14'11111111111111, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:727$1490_EN[13:0]$1497
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:727$1490_EN[13:0]$1497 [0]
      New connections: $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:727$1490_EN[13:0]$1497 [13:1] = { $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:727$1490_EN[13:0]$1497 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:727$1490_EN[13:0]$1497 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:727$1490_EN[13:0]$1497 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:727$1490_EN[13:0]$1497 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:727$1490_EN[13:0]$1497 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:727$1490_EN[13:0]$1497 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:727$1490_EN[13:0]$1497 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:727$1490_EN[13:0]$1497 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:727$1490_EN[13:0]$1497 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:727$1490_EN[13:0]$1497 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:727$1490_EN[13:0]$1497 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:727$1490_EN[13:0]$1497 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:727$1490_EN[13:0]$1497 [0] }
    New ctrl vector for $pmux cell $flatten\DUT.\Unit.$procmux$3667: { $flatten\DUT.\Unit.$procmux$3675_CMP $flatten\DUT.\Unit.$procmux$3674_CMP $flatten\DUT.\Unit.$procmux$3672_CMP $auto$opt_reduce.cc:134:opt_pmux$4044 $auto$opt_reduce.cc:134:opt_pmux$4042 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2949: { $flatten\DUT.\Brain.$procmux$1742_CMP $auto$opt_reduce.cc:134:opt_pmux$4046 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3421: { $flatten\DUT.\Brain.$procmux$1911_CTRL $flatten\DUT.\Brain.$procmux$1742_CMP $auto$opt_reduce.cc:134:opt_pmux$4048 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3207: { $auto$opt_reduce.cc:134:opt_pmux$4052 $auto$opt_reduce.cc:134:opt_pmux$4050 }
    New ctrl vector for $pmux cell $flatten\DUT.\Unit.$procmux$3691: { $auto$opt_reduce.cc:134:opt_pmux$4054 $flatten\DUT.\Unit.$eq$i8008_core.sv:213$972_Y }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2822: { $flatten\DUT.\Brain.$procmux$2838_CTRL $auto$opt_reduce.cc:134:opt_pmux$4056 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1740: { $flatten\DUT.\Brain.$procmux$1911_CTRL $auto$opt_reduce.cc:134:opt_pmux$4058 }
    New ctrl vector for $pmux cell $flatten\DUT.\Unit.$procmux$3705: { $flatten\DUT.\Unit.$procmux$3711_CMP $flatten\DUT.\Unit.$procmux$3710_CMP $auto$opt_reduce.cc:134:opt_pmux$4062 $auto$opt_reduce.cc:134:opt_pmux$4060 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2268: $auto$opt_reduce.cc:134:opt_pmux$4064
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3432: { $flatten\DUT.\Brain.$procmux$1911_CTRL $flatten\DUT.\Brain.$procmux$1742_CMP $auto$opt_reduce.cc:134:opt_pmux$4066 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2667: { $flatten\DUT.\Brain.$procmux$2138_CTRL $flatten\DUT.\Brain.$procmux$1744_CMP $auto$opt_reduce.cc:134:opt_pmux$4068 $flatten\DUT.\Brain.$procmux$1728_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2160: { $flatten\DUT.\Brain.$procmux$1744_CMP $auto$opt_reduce.cc:134:opt_pmux$4070 }
    Consolidated identical input bits for $mux cell $flatten\DUT.\rf.$procmux$1603:
      Old ports: A=8'00000000, B=8'11111111, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:691$1536_EN[7:0]$1540
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:691$1536_EN[7:0]$1540 [0]
      New connections: $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:691$1536_EN[7:0]$1540 [7:1] = { $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:691$1536_EN[7:0]$1540 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:691$1536_EN[7:0]$1540 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:691$1536_EN[7:0]$1540 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:691$1536_EN[7:0]$1540 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:691$1536_EN[7:0]$1540 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:691$1536_EN[7:0]$1540 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:691$1536_EN[7:0]$1540 [0] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3873: { $flatten\DUT.\Brain.$procmux$2799_CMP [1] $flatten\DUT.\Brain.$procmux$2798_CMP $flatten\DUT.\Brain.$procmux$2797_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:380$1000_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3875: { $flatten\DUT.\Brain.$procmux$2798_CMP $flatten\DUT.\Brain.$procmux$2797_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:276$983_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3877: { $flatten\DUT.\Brain.$procmux$2355_CMP [0] $flatten\DUT.\Brain.$procmux$2230_CMP [0] $flatten\DUT.\Brain.$procmux$2229_CMP [0] $flatten\DUT.\Brain.$eq$i8008_core.sv:500$1011_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:361$999_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3879: { $flatten\DUT.\Brain.$procmux$1744_CMP $flatten\DUT.\Brain.$procmux$1743_CMP $flatten\DUT.\Brain.$procmux$1742_CMP $flatten\DUT.\Brain.$procmux$1728_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3881: { $flatten\DUT.\Brain.$procmux$2355_CMP [0] $flatten\DUT.\Brain.$procmux$2230_CMP [1:0] $flatten\DUT.\Brain.$procmux$2229_CMP $flatten\DUT.\Brain.$procmux$1821_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1039_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1035_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1034_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1023_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1019_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1018_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:500$1011_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:361$999_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3883: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1742_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3885: { $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1039_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1035_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1034_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1023_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1019_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1018_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3887: { $flatten\DUT.\Brain.$procmux$2355_CMP [0] $flatten\DUT.\Brain.$procmux$2230_CMP [1] $flatten\DUT.\Brain.$procmux$2229_CMP [1] $flatten\DUT.\Brain.$procmux$1821_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1039_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1035_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1034_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1023_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1019_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1018_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:500$1011_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3889: { $flatten\DUT.\Brain.$procmux$2799_CMP [1] $flatten\DUT.\Brain.$procmux$2798_CMP $flatten\DUT.\Brain.$procmux$2797_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:380$1000_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3891: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1744_CMP $flatten\DUT.\Brain.$procmux$1743_CMP $flatten\DUT.\Brain.$procmux$1742_CMP $flatten\DUT.\Brain.$procmux$1728_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3893: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1744_CMP $flatten\DUT.\Brain.$procmux$1743_CMP $flatten\DUT.\Brain.$procmux$1742_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3895: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1744_CMP $flatten\DUT.\Brain.$procmux$1742_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3899: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1743_CMP $flatten\DUT.\Brain.$procmux$1742_CMP $flatten\DUT.\Brain.$procmux$1728_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3901: { $flatten\DUT.\Brain.$procmux$1744_CMP $flatten\DUT.\Brain.$procmux$1743_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3903: { $flatten\DUT.\Brain.$procmux$2979_CMP [0] $flatten\DUT.\Brain.$procmux$2976_CMP $flatten\DUT.\Brain.$procmux$2799_CMP [1] $flatten\DUT.\Brain.$procmux$2798_CMP $flatten\DUT.\Brain.$procmux$2797_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:380$1000_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:300$987_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:300$984_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3905: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1744_CMP $flatten\DUT.\Brain.$procmux$1743_CMP $flatten\DUT.\Brain.$procmux$1728_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3907: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1744_CMP $flatten\DUT.\Brain.$procmux$1743_CMP $flatten\DUT.\Brain.$procmux$1728_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3909: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1744_CMP $flatten\DUT.\Brain.$procmux$1743_CMP $flatten\DUT.\Brain.$procmux$1728_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3911: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1744_CMP $flatten\DUT.\Brain.$procmux$1742_CMP $flatten\DUT.\Brain.$procmux$1728_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3913: { $flatten\DUT.\Brain.$procmux$1821_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1039_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1035_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1034_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1023_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1019_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1018_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3915: { $flatten\DUT.\Brain.$procmux$2976_CMP $flatten\DUT.\Brain.$procmux$2799_CMP [1] $flatten\DUT.\Brain.$procmux$2797_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:380$1000_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:300$987_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:300$984_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:276$983_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3917: { $flatten\DUT.\Brain.$procmux$1743_CMP $flatten\DUT.\Brain.$procmux$1742_CMP $flatten\DUT.\Brain.$procmux$1728_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3919: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1744_CMP $flatten\DUT.\Brain.$procmux$1743_CMP $flatten\DUT.\Brain.$procmux$1742_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3921: { $flatten\DUT.\Brain.$procmux$2355_CMP [0] $flatten\DUT.\Brain.$procmux$2230_CMP [0] $flatten\DUT.\Brain.$procmux$2229_CMP [0] $flatten\DUT.\Brain.$eq$i8008_core.sv:500$1011_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:361$999_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3923: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1744_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3925: { $flatten\DUT.\Brain.$procmux$2799_CMP [1] $flatten\DUT.\Brain.$procmux$2798_CMP $flatten\DUT.\Brain.$procmux$2797_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:380$1000_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3927: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1744_CMP $flatten\DUT.\Brain.$procmux$1743_CMP $flatten\DUT.\Brain.$procmux$1728_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3929: { $flatten\DUT.\Brain.$procmux$2355_CMP [0] $flatten\DUT.\Brain.$procmux$2230_CMP [1] $flatten\DUT.\Brain.$procmux$2229_CMP [1] $flatten\DUT.\Brain.$procmux$1821_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1039_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1035_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1034_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1023_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1019_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1018_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:500$1011_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3931: { $flatten\DUT.\Brain.$procmux$1743_CMP $flatten\DUT.\Brain.$procmux$1728_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3933: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1744_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3935: { $flatten\DUT.\Brain.$procmux$2230_CMP [1:0] $flatten\DUT.\Brain.$procmux$2229_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:500$1011_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3937: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1744_CMP $flatten\DUT.\Brain.$procmux$1743_CMP $flatten\DUT.\Brain.$procmux$1742_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3939: { $flatten\DUT.\Brain.$procmux$2355_CMP [0] $flatten\DUT.\Brain.$procmux$2230_CMP [1] $flatten\DUT.\Brain.$procmux$2229_CMP [1] $flatten\DUT.\Brain.$procmux$1821_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1039_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1035_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1034_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1023_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1019_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1018_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:500$1011_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3941: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1744_CMP $flatten\DUT.\Brain.$procmux$1742_CMP $flatten\DUT.\Brain.$procmux$1728_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3943: { $flatten\DUT.\Brain.$procmux$2798_CMP $flatten\DUT.\Brain.$procmux$2797_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3945: { $flatten\DUT.\Brain.$procmux$2799_CMP [1] $flatten\DUT.\Brain.$eq$i8008_core.sv:380$1000_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:276$983_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3947: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1744_CMP $flatten\DUT.\Brain.$procmux$1743_CMP $flatten\DUT.\Brain.$procmux$1728_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3949: { $flatten\DUT.\Brain.$procmux$2355_CMP [0] $flatten\DUT.\Brain.$procmux$2230_CMP [1:0] $flatten\DUT.\Brain.$procmux$2229_CMP $flatten\DUT.\Brain.$procmux$1821_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1039_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1035_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1034_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1023_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1019_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1018_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:500$1011_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:361$999_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3951: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1743_CMP $flatten\DUT.\Brain.$procmux$1742_CMP $flatten\DUT.\Brain.$procmux$1728_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3953: { $flatten\DUT.\Brain.$procmux$2979_CMP [0] $flatten\DUT.\Brain.$procmux$2976_CMP $flatten\DUT.\Brain.$procmux$2799_CMP [1] $flatten\DUT.\Brain.$procmux$2798_CMP $flatten\DUT.\Brain.$procmux$2797_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:380$1000_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:300$987_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:300$984_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:276$983_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3955: { $flatten\DUT.\Brain.$procmux$1743_CMP $flatten\DUT.\Brain.$procmux$1742_CMP $flatten\DUT.\Brain.$procmux$1728_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3957: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1744_CMP $flatten\DUT.\Brain.$procmux$1743_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3959: { $flatten\DUT.\Brain.$procmux$2976_CMP $flatten\DUT.\Brain.$procmux$2799_CMP [1] $flatten\DUT.\Brain.$procmux$2797_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:380$1000_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:300$987_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:300$984_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:276$983_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3961: { $flatten\DUT.\Brain.$procmux$2979_CMP [0] $flatten\DUT.\Brain.$procmux$2799_CMP [1] $flatten\DUT.\Brain.$procmux$2798_CMP $flatten\DUT.\Brain.$procmux$2797_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:380$1000_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:276$983_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3963: { $flatten\DUT.\Brain.$procmux$2799_CMP [1] $flatten\DUT.\Brain.$procmux$2798_CMP $flatten\DUT.\Brain.$procmux$2797_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:380$1000_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3965: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1744_CMP $flatten\DUT.\Brain.$procmux$1743_CMP $flatten\DUT.\Brain.$procmux$1742_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3967: { $flatten\DUT.\Brain.$procmux$1821_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1039_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1035_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1034_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1023_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1019_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1018_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3969: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1744_CMP $flatten\DUT.\Brain.$procmux$1742_CMP $flatten\DUT.\Brain.$procmux$1728_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3971: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1744_CMP $flatten\DUT.\Brain.$procmux$1743_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3973: { $flatten\DUT.\Brain.$procmux$2355_CMP [0] $flatten\DUT.\Brain.$procmux$2230_CMP [1] $flatten\DUT.\Brain.$procmux$2229_CMP [1] $flatten\DUT.\Brain.$procmux$1821_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1039_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1035_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1034_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1023_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1019_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1018_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:500$1011_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3975: { $flatten\DUT.\Brain.$procmux$2355_CMP [0] $flatten\DUT.\Brain.$procmux$2230_CMP [1:0] $flatten\DUT.\Brain.$procmux$2229_CMP $flatten\DUT.\Brain.$procmux$1821_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1039_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1035_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1034_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1023_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1019_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1018_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:500$1011_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:361$999_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3977: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1744_CMP $flatten\DUT.\Brain.$procmux$1743_CMP $flatten\DUT.\Brain.$procmux$1742_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3979: { $flatten\DUT.\Brain.$procmux$1743_CMP $flatten\DUT.\Brain.$procmux$1742_CMP $flatten\DUT.\Brain.$procmux$1728_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3981: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1744_CMP $flatten\DUT.\Brain.$procmux$1742_CMP $flatten\DUT.\Brain.$procmux$1728_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3983: { $flatten\DUT.\Brain.$procmux$2355_CMP [0] $flatten\DUT.\Brain.$procmux$2230_CMP [0] $flatten\DUT.\Brain.$procmux$2229_CMP [0] $flatten\DUT.\Brain.$eq$i8008_core.sv:500$1011_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:361$999_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3985: { $flatten\DUT.\Brain.$procmux$2979_CMP [0] $flatten\DUT.\Brain.$procmux$2976_CMP $flatten\DUT.\Brain.$procmux$2798_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:300$987_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:300$984_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:276$983_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3987: { $flatten\DUT.\Brain.$procmux$2799_CMP [1] $flatten\DUT.\Brain.$procmux$2797_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:380$1000_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3989: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1744_CMP $flatten\DUT.\Brain.$procmux$1743_CMP $flatten\DUT.\Brain.$procmux$1742_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3991: { $flatten\DUT.\Brain.$procmux$2976_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:300$987_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:300$984_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:276$983_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3993: { $flatten\DUT.\Brain.$procmux$2799_CMP [1] $flatten\DUT.\Brain.$procmux$2797_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:380$1000_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3995: { $flatten\DUT.\Brain.$procmux$2979_CMP [0] $flatten\DUT.\Brain.$procmux$2976_CMP $flatten\DUT.\Brain.$procmux$2799_CMP [1] $flatten\DUT.\Brain.$procmux$2798_CMP $flatten\DUT.\Brain.$procmux$2797_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:380$1000_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:300$987_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:300$984_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:276$983_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3997: { $flatten\DUT.\Brain.$procmux$2799_CMP [1] $flatten\DUT.\Brain.$procmux$2798_CMP $flatten\DUT.\Brain.$procmux$2797_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:380$1000_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3999: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1744_CMP $flatten\DUT.\Brain.$procmux$1743_CMP $flatten\DUT.\Brain.$procmux$1742_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4001: { $flatten\DUT.\Brain.$procmux$2798_CMP $flatten\DUT.\Brain.$procmux$2797_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:276$983_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4003: { $flatten\DUT.\Brain.$procmux$2799_CMP [1] $flatten\DUT.\Brain.$procmux$2798_CMP $flatten\DUT.\Brain.$procmux$2797_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:380$1000_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4005: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1744_CMP $flatten\DUT.\Brain.$procmux$1728_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4007: { $flatten\DUT.\Brain.$procmux$2230_CMP [1:0] $flatten\DUT.\Brain.$procmux$2229_CMP $flatten\DUT.\Brain.$procmux$1821_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1039_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1035_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1034_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1023_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1019_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1018_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:361$999_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4009: { $flatten\DUT.\Brain.$procmux$2976_CMP $flatten\DUT.\Brain.$procmux$2797_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:300$987_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:300$984_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:276$983_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4011: { $flatten\DUT.\Brain.$procmux$1743_CMP $flatten\DUT.\Brain.$procmux$1742_CMP $flatten\DUT.\Brain.$procmux$1728_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4013: { $flatten\DUT.\Brain.$procmux$2799_CMP [1] $flatten\DUT.\Brain.$procmux$2797_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:380$1000_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4017: { $flatten\DUT.\Brain.$procmux$2355_CMP [0] $flatten\DUT.\Brain.$procmux$2230_CMP [0] $flatten\DUT.\Brain.$procmux$2229_CMP [0] $flatten\DUT.\Brain.$eq$i8008_core.sv:500$1011_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:361$999_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4019: { $flatten\DUT.\Brain.$procmux$1743_CMP $flatten\DUT.\Brain.$procmux$1742_CMP $flatten\DUT.\Brain.$procmux$1728_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4021: { $flatten\DUT.\Brain.$procmux$2230_CMP [1:0] $flatten\DUT.\Brain.$procmux$2229_CMP $flatten\DUT.\Brain.$procmux$1821_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1039_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1035_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1034_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1023_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1019_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1018_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:361$999_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4023: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1744_CMP $flatten\DUT.\Brain.$procmux$1742_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4025: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1744_CMP $flatten\DUT.\Brain.$procmux$1743_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4027: { $flatten\DUT.\Brain.$procmux$1821_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1039_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1035_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1034_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1023_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1019_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1018_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4029: { $flatten\DUT.\Brain.$procmux$2979_CMP [0] $flatten\DUT.\Brain.$procmux$2976_CMP $flatten\DUT.\Brain.$procmux$2799_CMP [1] $flatten\DUT.\Brain.$procmux$2798_CMP $flatten\DUT.\Brain.$procmux$2797_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:380$1000_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:300$987_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:300$984_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4031: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1744_CMP $flatten\DUT.\Brain.$procmux$1742_CMP $flatten\DUT.\Brain.$procmux$1728_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4033: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1744_CMP $flatten\DUT.\Brain.$procmux$1742_CMP $flatten\DUT.\Brain.$procmux$1728_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4035: { $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1039_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1035_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1034_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1023_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1019_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1018_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4037: { $flatten\DUT.\Brain.$procmux$1743_CMP $flatten\DUT.\Brain.$procmux$1742_CMP $flatten\DUT.\Brain.$procmux$1728_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4039: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1744_CMP $flatten\DUT.\Brain.$procmux$1742_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4045: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1744_CMP $flatten\DUT.\Brain.$procmux$1743_CMP $flatten\DUT.\Brain.$procmux$1728_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4047: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1744_CMP $flatten\DUT.\Brain.$procmux$1728_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4049: { $flatten\DUT.\Brain.$procmux$1743_CMP $flatten\DUT.\Brain.$procmux$1742_CMP $flatten\DUT.\Brain.$procmux$1728_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4051: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1744_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4055: { $flatten\DUT.\Brain.$procmux$2798_CMP $flatten\DUT.\Brain.$procmux$2797_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:276$983_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4057: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1744_CMP $flatten\DUT.\Brain.$procmux$1742_CMP $flatten\DUT.\Brain.$procmux$1728_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4063: { $flatten\DUT.\Brain.$procmux$2230_CMP [1:0] $flatten\DUT.\Brain.$procmux$2229_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:500$1011_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4065: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1744_CMP $flatten\DUT.\Brain.$procmux$1728_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4067: { $flatten\DUT.\Brain.$procmux$1743_CMP $flatten\DUT.\Brain.$procmux$1742_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4069: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1743_CMP $flatten\DUT.\Brain.$procmux$1742_CMP $flatten\DUT.\Brain.$procmux$1728_CMP }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$1668:
      Old ports: A=$flatten\DUT.\Stack.$3$memwr$\rf$i8008_core.sv:731$1492_EN[13:0]$1525, B=14'00000000000000, Y=$flatten\DUT.\Stack.$procmux$1668_Y
      New ports: A=$flatten\DUT.\Stack.$procmux$1623_Y [0], B=1'0, Y=$flatten\DUT.\Stack.$procmux$1668_Y [0]
      New connections: $flatten\DUT.\Stack.$procmux$1668_Y [13:1] = { $flatten\DUT.\Stack.$procmux$1668_Y [0] $flatten\DUT.\Stack.$procmux$1668_Y [0] $flatten\DUT.\Stack.$procmux$1668_Y [0] $flatten\DUT.\Stack.$procmux$1668_Y [0] $flatten\DUT.\Stack.$procmux$1668_Y [0] $flatten\DUT.\Stack.$procmux$1668_Y [0] $flatten\DUT.\Stack.$procmux$1668_Y [0] $flatten\DUT.\Stack.$procmux$1668_Y [0] $flatten\DUT.\Stack.$procmux$1668_Y [0] $flatten\DUT.\Stack.$procmux$1668_Y [0] $flatten\DUT.\Stack.$procmux$1668_Y [0] $flatten\DUT.\Stack.$procmux$1668_Y [0] $flatten\DUT.\Stack.$procmux$1668_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$1704:
      Old ports: A=$flatten\DUT.\Stack.$2$memwr$\rf$i8008_core.sv:729$1491_EN[13:0]$1519, B=14'00000000000000, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:729$1491_EN[13:0]$1500
      New ports: A=$flatten\DUT.\Stack.$procmux$1650_Y [8], B=1'0, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:729$1491_EN[13:0]$1500 [8]
      New connections: { $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:729$1491_EN[13:0]$1500 [13:9] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:729$1491_EN[13:0]$1500 [7:0] } = { $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:729$1491_EN[13:0]$1500 [8] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:729$1491_EN[13:0]$1500 [8] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:729$1491_EN[13:0]$1500 [8] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:729$1491_EN[13:0]$1500 [8] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:729$1491_EN[13:0]$1500 [8] 8'00000000 }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$1695:
      Old ports: A=$flatten\DUT.\Stack.$2$memwr$\rf$i8008_core.sv:731$1492_EN[13:0]$1522, B=14'00000000000000, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:731$1492_EN[13:0]$1503
      New ports: A=$flatten\DUT.\Stack.$procmux$1668_Y [0], B=1'0, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:731$1492_EN[13:0]$1503 [0]
      New connections: $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:731$1492_EN[13:0]$1503 [13:1] = { $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:731$1492_EN[13:0]$1503 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:731$1492_EN[13:0]$1503 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:731$1492_EN[13:0]$1503 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:731$1492_EN[13:0]$1503 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:731$1492_EN[13:0]$1503 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:731$1492_EN[13:0]$1503 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:731$1492_EN[13:0]$1503 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:731$1492_EN[13:0]$1503 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:731$1492_EN[13:0]$1503 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:731$1492_EN[13:0]$1503 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:731$1492_EN[13:0]$1503 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:731$1492_EN[13:0]$1503 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:731$1492_EN[13:0]$1503 [0] }
  Optimizing cells in module \top.
Performed a total of 190 changes.

3.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~312 debug messages>
Removed a total of 104 cells.

3.10.6. Executing OPT_DFF pass (perform DFF optimizations).

3.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 1518 unused wires.
<suppressed ~2 debug messages>

3.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.10.9. Rerunning OPT passes. (Maybe there is more to do..)

3.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~63 debug messages>

3.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1798: { $auto$opt_reduce.cc:134:opt_pmux$4072 $flatten\DUT.\Brain.$procmux$1743_CTRL $auto$opt_reduce.cc:134:opt_pmux$3898 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2133: { $auto$opt_reduce.cc:134:opt_pmux$4074 $auto$opt_reduce.cc:134:opt_pmux$3918 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2169: { $auto$opt_reduce.cc:134:opt_pmux$4076 $auto$opt_reduce.cc:134:opt_pmux$3918 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2287: { $auto$opt_reduce.cc:134:opt_pmux$4078 $auto$opt_reduce.cc:134:opt_pmux$3918 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2353: $auto$opt_reduce.cc:134:opt_pmux$4080
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2374: { $auto$opt_reduce.cc:134:opt_pmux$4082 $flatten\DUT.\Brain.$procmux$1743_CTRL $flatten\DUT.\Brain.$procmux$1742_CMP $flatten\DUT.\Brain.$procmux$1728_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2637: { $auto$opt_reduce.cc:134:opt_pmux$4084 $auto$opt_reduce.cc:134:opt_pmux$3918 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4071: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1744_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4073: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1744_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4075: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1744_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4077: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1744_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4079: { $flatten\DUT.\Brain.$procmux$2355_CMP [0] $flatten\DUT.\Brain.$procmux$1821_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1039_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1035_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1034_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1023_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1019_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:620$1018_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:361$999_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4081: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1744_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4083: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1744_CMP }
  Optimizing cells in module \top.
Performed a total of 14 changes.

3.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

3.10.13. Executing OPT_DFF pass (perform DFF optimizations).

3.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

3.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.10.16. Rerunning OPT passes. (Maybe there is more to do..)

3.10.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~63 debug messages>

3.10.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

3.10.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.10.20. Executing OPT_DFF pass (perform DFF optimizations).

3.10.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

3.10.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.10.23. Finished OPT passes. (There is nothing left to do.)

3.11. Executing FSM pass (extract and optimize FSM).

3.11.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register top.DUT.Brain.cycle.
Not marking top.DUT.Brain.state as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
Not marking top.DUT.regA.Q as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.DUT.regB.Q as FSM state register:
    Users of register don't seem to benefit from recoding.

3.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\DUT.Brain.cycle' from module `\top'.
  found $dff cell for state register: $flatten\DUT.\Brain.$procdff$3868
  root of input selection tree: $flatten\DUT.\Brain.$0\cycle[1:0]
  found reset state: 2'00 (guessed from mux tree)
  found ctrl input: \reset_n
  found state code: 2'00
  found ctrl input: $flatten\DUT.\Brain.$procmux$1720_CMP
  found ctrl input: $flatten\DUT.\Brain.$procmux$1721_CMP
  found ctrl input: $flatten\DUT.\Brain.$procmux$1722_CMP
  found ctrl input: $flatten\DUT.\Brain.$procmux$1728_CMP
  found ctrl input: $auto$opt_reduce.cc:134:opt_pmux$3896
  found ctrl input: $flatten\DUT.\Brain.$procmux$1743_CTRL
  found ctrl input: $flatten\DUT.\Brain.$procmux$1856_CTRL
  found ctrl input: $flatten\DUT.\Brain.$procmux$1883_CTRL
  found ctrl input: $flatten\DUT.\Brain.$procmux$1821_CMP
  found ctrl input: \DUT.Brain.CF
  found ctrl input: $auto$opt_reduce.cc:134:opt_pmux$3914
  found ctrl input: $flatten\DUT.\Brain.$procmux$2355_CTRL
  found ctrl input: \DUT.R.Q
  found state code: 2'01
  found state code: 2'10
  found ctrl input: $flatten\DUT.\Brain.$procmux$1742_CMP
  found ctrl input: $auto$opt_reduce.cc:134:opt_pmux$3924
  found ctrl input: $flatten\DUT.\Brain.$eq$i8008_core.sv:361$999_Y
  found ctrl input: $flatten\DUT.\Brain.$procmux$3283_CTRL
  found ctrl input: $flatten\DUT.\Brain.$procmux$2975_CTRL
  found ctrl input: $flatten\DUT.\Brain.$procmux$3254_CTRL
  found ctrl input: $flatten\DUT.\Brain.$or$i8008_core.sv:300$989_Y
  found ctrl input: \DUT.I.Q
  found ctrl output: $flatten\DUT.\Brain.$procmux$1720_CMP
  found ctrl output: $flatten\DUT.\Brain.$procmux$1721_CMP
  found ctrl output: $flatten\DUT.\Brain.$procmux$1722_CMP
  ctrl inputs: { $auto$opt_reduce.cc:134:opt_pmux$3924 $auto$opt_reduce.cc:134:opt_pmux$3896 $auto$opt_reduce.cc:134:opt_pmux$3914 \DUT.R.Q \DUT.I.Q $flatten\DUT.\Brain.$procmux$3283_CTRL $flatten\DUT.\Brain.$procmux$3254_CTRL $flatten\DUT.\Brain.$procmux$2975_CTRL $flatten\DUT.\Brain.$procmux$2355_CTRL $flatten\DUT.\Brain.$procmux$1883_CTRL $flatten\DUT.\Brain.$procmux$1856_CTRL $flatten\DUT.\Brain.$procmux$1821_CMP $flatten\DUT.\Brain.$procmux$1743_CTRL $flatten\DUT.\Brain.$procmux$1742_CMP $flatten\DUT.\Brain.$procmux$1728_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:361$999_Y $flatten\DUT.\Brain.$or$i8008_core.sv:300$989_Y \DUT.Brain.CF \reset_n }
  ctrl outputs: { $flatten\DUT.\Brain.$procmux$1722_CMP $flatten\DUT.\Brain.$procmux$1721_CMP $flatten\DUT.\Brain.$procmux$1720_CMP $flatten\DUT.\Brain.$0\cycle[1:0] }
  transition:       2'00 19'------------------0 ->       2'00 5'10000
  transition:       2'00 19'0-----------000---1 -> INVALID_STATE(2'x) 5'100xx  <ignored invalid transition!>
  transition:       2'00 19'1-----------------1 ->       2'00 5'10000
  transition:       2'00 19'-----000----1-----1 ->       2'00 5'10000
  transition:       2'00 19'----0-1-----1-----1 ->       2'00 5'10000
  transition:       2'00 19'----1-1-----1-----1 ->       2'00 5'10000
  transition:       2'00 19'-------1----1---0-1 ->       2'00 5'10000
  transition:       2'00 19'-------1----1---1-1 ->       2'00 5'10000
  transition:       2'00 19'-----1------1-----1 ->       2'01 5'10001
  transition:       2'00 19'-------------1-0--1 ->       2'00 5'10000
  transition:       2'00 19'-------------1-1--1 ->       2'01 5'10001
  transition:       2'00 19'--------------1---1 ->       2'00 5'10000
  transition:       2'10 19'------------------0 ->       2'00 5'00100
  transition:       2'10 19'-0----------0-0---1 -> INVALID_STATE(2'x) 5'001xx  <ignored invalid transition!>
  transition:       2'10 19'---------0001-----1 ->       2'10 5'00110
  transition:       2'10 19'-----------11-----1 ->       2'00 5'00100
  transition:       2'10 19'---------1--1----01 ->       2'00 5'00100
  transition:       2'10 19'---------1--1----11 ->       2'10 5'00110
  transition:       2'10 19'----------1-1----01 ->       2'10 5'00110
  transition:       2'10 19'----------1-1----11 ->       2'00 5'00100
  transition:       2'10 19'-1----------------1 ->       2'10 5'00110
  transition:       2'10 19'--------------1---1 ->       2'00 5'00100
  transition:       2'01 19'------------------0 ->       2'00 5'01000
  transition:       2'01 19'-0----------0-0---1 -> INVALID_STATE(2'x) 5'010xx  <ignored invalid transition!>
  transition:       2'01 19'--0-----0---1-----1 ->       2'01 5'01001
  transition:       2'01 19'---0----1---1-----1 ->       2'01 5'01001
  transition:       2'01 19'---1----1---1-----1 ->       2'00 5'01000
  transition:       2'01 19'--10--------1-----1 ->       2'01 5'01001
  transition:       2'01 19'--11--------1-----1 ->       2'10 5'01010
  transition:       2'01 19'-1----------------1 ->       2'01 5'01001
  transition:       2'01 19'--------------1---1 ->       2'00 5'01000

3.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\DUT.Brain.cycle$4085' from module `\top'.
  Merging pattern 19'-------1----1---0-1 and 19'-------1----1---1-1 from group (0 0 5'10000).
  Merging pattern 19'-------1----1---1-1 and 19'-------1----1---0-1 from group (0 0 5'10000).
  Merging pattern 19'----0-1-----1-----1 and 19'----1-1-----1-----1 from group (0 0 5'10000).
  Merging pattern 19'----1-1-----1-----1 and 19'----0-1-----1-----1 from group (0 0 5'10000).
  Removing unused input signal \DUT.I.Q.
  Removing unused input signal $flatten\DUT.\Brain.$or$i8008_core.sv:300$989_Y.

3.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 19 unused cells and 19 unused wires.
<suppressed ~21 debug messages>

3.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\DUT.Brain.cycle$4085' from module `\top'.
  Removing unused output signal $flatten\DUT.\Brain.$0\cycle[1:0] [0].
  Removing unused output signal $flatten\DUT.\Brain.$0\cycle[1:0] [1].

3.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\DUT.Brain.cycle$4085' from module `\top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> --1
  10 -> -1-
  01 -> 1--

3.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\DUT.Brain.cycle$4085' from module `top':
-------------------------------------

  Information on FSM $fsm$\DUT.Brain.cycle$4085 (\DUT.Brain.cycle):

  Number of input signals:   17
  Number of output signals:   3
  Number of state bits:       3

  Input signals:
    0: \reset_n
    1: \DUT.Brain.CF
    2: $flatten\DUT.\Brain.$eq$i8008_core.sv:361$999_Y
    3: $flatten\DUT.\Brain.$procmux$1728_CMP
    4: $flatten\DUT.\Brain.$procmux$1742_CMP
    5: $flatten\DUT.\Brain.$procmux$1743_CTRL
    6: $flatten\DUT.\Brain.$procmux$1821_CMP
    7: $flatten\DUT.\Brain.$procmux$1856_CTRL
    8: $flatten\DUT.\Brain.$procmux$1883_CTRL
    9: $flatten\DUT.\Brain.$procmux$2355_CTRL
   10: $flatten\DUT.\Brain.$procmux$2975_CTRL
   11: $flatten\DUT.\Brain.$procmux$3254_CTRL
   12: $flatten\DUT.\Brain.$procmux$3283_CTRL
   13: \DUT.R.Q
   14: $auto$opt_reduce.cc:134:opt_pmux$3914
   15: $auto$opt_reduce.cc:134:opt_pmux$3896
   16: $auto$opt_reduce.cc:134:opt_pmux$3924

  Output signals:
    0: $flatten\DUT.\Brain.$procmux$1720_CMP
    1: $flatten\DUT.\Brain.$procmux$1721_CMP
    2: $flatten\DUT.\Brain.$procmux$1722_CMP

  State encoding:
    0:      3'--1  <RESET STATE>
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 17'----------------0   ->     0 3'100
      1:     0 17'------------1-0-1   ->     0 3'100
      2:     0 17'-------------1--1   ->     0 3'100
      3:     0 17'----000----1----1   ->     0 3'100
      4:     0 17'------1----1----1   ->     0 3'100
      5:     0 17'-----1-----1----1   ->     0 3'100
      6:     0 17'1---------------1   ->     0 3'100
      7:     0 17'------------1-1-1   ->     2 3'100
      8:     0 17'----1------1----1   ->     2 3'100
      9:     1 17'----------------0   ->     0 3'001
     10:     1 17'--------1--1---01   ->     0 3'001
     11:     1 17'---------1-1---11   ->     0 3'001
     12:     1 17'-------------1--1   ->     0 3'001
     13:     1 17'----------11----1   ->     0 3'001
     14:     1 17'---------1-1---01   ->     1 3'001
     15:     1 17'--------1--1---11   ->     1 3'001
     16:     1 17'--------0001----1   ->     1 3'001
     17:     1 17'-1--------------1   ->     1 3'001
     18:     2 17'----------------0   ->     0 3'010
     19:     2 17'-------------1--1   ->     0 3'010
     20:     2 17'---1---1---1----1   ->     0 3'010
     21:     2 17'--11-------1----1   ->     1 3'010
     22:     2 17'--0----0---1----1   ->     2 3'010
     23:     2 17'---0---1---1----1   ->     2 3'010
     24:     2 17'--10-------1----1   ->     2 3'010
     25:     2 17'-1--------------1   ->     2 3'010

-------------------------------------

3.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\DUT.Brain.cycle$4085' from module `\top'.

3.12. Executing OPT pass (performing simple optimizations).

3.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

3.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

3.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~62 debug messages>

3.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

3.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.12.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\DUT.\regB.$procdff$3851 ($dff) from module top (D = \DUT.regB.d, Q = \DUT.regB.Q).
Adding EN signal on $flatten\DUT.\regA.$procdff$3851 ($dff) from module top (D = $flatten\DUT.\regA.$0\Q[7:0], Q = \DUT.regA.Q).
Adding EN signal on $flatten\DUT.\Unit.\flag_reg.$procdff$3850 ($dff) from module top (D = \DUT.Unit.flag_reg.d, Q = \DUT.Unit.flag_reg.Q).
Adding EN signal on $flatten\DUT.\SP_SEL.$procdff$3857 ($dff) from module top (D = $flatten\DUT.\SP_SEL.$0\Q[2:0], Q = \DUT.SP_SEL.Q).
Adding EN signal on $flatten\DUT.\IR.$procdff$3851 ($dff) from module top (D = \DUT.IR.d, Q = \DUT.IR.Q).
Adding EN signal on $flatten\DUT.\DBR.$procdff$3851 ($dff) from module top (D = \DUT.DBR.d, Q = \DUT.DBR.Q).
Adding SRST signal on $flatten\DUT.\Brain.$procdff$3867 ($dff) from module top (D = \DUT.Brain.next_state, Q = \DUT.Brain.state, rval = 3'010).

3.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 5 unused cells and 13 unused wires.
<suppressed ~6 debug messages>

3.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~2 debug messages>

3.12.9. Rerunning OPT passes. (Maybe there is more to do..)

3.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~61 debug messages>

3.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

3.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.12.13. Executing OPT_DFF pass (perform DFF optimizations).

3.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

3.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.12.16. Finished OPT passes. (There is nothing left to do.)

3.13. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$eq$i8008_core.sv:276$983 ($eq).
Removed top 2 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$eq$i8008_core.sv:300$984 ($eq).
Removed top 3 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$eq$i8008_core.sv:300$987 ($eq).
Removed top 2 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$eq$i8008_core.sv:380$1000 ($eq).
Removed top 2 bits (of 3) from mux cell top.$flatten\DUT.\Brain.$ternary$i8008_core.sv:380$1001 ($mux).
Removed top 1 bits (of 3) from mux cell top.$flatten\DUT.\Brain.$ternary$i8008_core.sv:470$1007 ($mux).
Removed top 1 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$eq$i8008_core.sv:500$1011 ($eq).
Removed top 1 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$eq$i8008_core.sv:620$1018 ($eq).
Removed top 1 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$eq$i8008_core.sv:620$1019 ($eq).
Removed top 1 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$eq$i8008_core.sv:620$1023 ($eq).
Removed top 1 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$eq$i8008_core.sv:629$1034 ($eq).
Removed top 1 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$eq$i8008_core.sv:629$1035 ($eq).
Removed top 1 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$eq$i8008_core.sv:629$1039 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$flatten\DUT.\Brain.$procmux$1743_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\DUT.\Brain.$procmux$1743_CMP2 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\DUT.\Brain.$procmux$1745_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$procmux$1821_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$4119 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$4165 ($eq).
Removed top 2 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$procmux$2230_CMP1 ($eq).
Removed top 1 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$procmux$2355_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$4161 ($eq).
Removed top 1 bits (of 3) from mux cell top.$flatten\DUT.\Brain.$procmux$2775 ($pmux).
Removed top 6 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$procmux$2797_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$procmux$2797_CMP1 ($eq).
Removed top 3 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$procmux$2797_CMP2 ($eq).
Removed top 3 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$procmux$2797_CMP3 ($eq).
Removed top 2 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$procmux$2799_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$procmux$2976_CMP0 ($eq).
Removed cell top.$flatten\DUT.\Brain.$procmux$3207 ($pmux).
Removed top 7 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$procmux$3254_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$4144 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\DUT.\Brain.$procmux$3665_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$flatten\DUT.\Stack.$add$i8008_core.sv:731$1527 ($add).
Removed top 18 bits (of 32) from port Y of cell top.$flatten\DUT.\Stack.$add$i8008_core.sv:731$1527 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\DUT.\SP_SEL.$add$i8008_core.sv:792$1532 ($add).
Removed top 29 bits (of 32) from port Y of cell top.$flatten\DUT.\SP_SEL.$add$i8008_core.sv:792$1532 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\DUT.\SP_SEL.$sub$i8008_core.sv:794$1535 ($sub).
Removed top 29 bits (of 32) from port Y of cell top.$flatten\DUT.\SP_SEL.$sub$i8008_core.sv:794$1535 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$flatten\DUT.\Unit.$add$i8008_core.sv:176$954 ($add).
Removed top 23 bits (of 32) from port Y of cell top.$flatten\DUT.\Unit.$add$i8008_core.sv:176$954 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\DUT.\Unit.$sub$i8008_core.sv:177$955 ($sub).
Removed top 23 bits (of 32) from port Y of cell top.$flatten\DUT.\Unit.$sub$i8008_core.sv:177$955 ($sub).
Removed top 8 bits (of 9) from port B of cell top.$flatten\DUT.\Unit.$add$i8008_core.sv:200$959 ($add).
Removed top 8 bits (of 9) from port B of cell top.$flatten\DUT.\Unit.$sub$i8008_core.sv:202$963 ($sub).
Removed top 1 bits (of 3) from port B of cell top.$flatten\DUT.\Unit.$procmux$3672_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\DUT.\Unit.$procmux$3673_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$flatten\DUT.\Unit.$procmux$3674_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\DUT.\Unit.$procmux$3706_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\DUT.\Unit.$procmux$3707_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$flatten\DUT.\Unit.$procmux$3708_CMP0 ($eq).
Removed cell top.$flatten\DUT.\Brain.$procmux$2169 ($pmux).
Removed top 1 bits (of 2) from mux cell top.$flatten\DUT.\Brain.$procmux$2732 ($pmux).
Removed top 1 bits (of 3) from wire top.$flatten\DUT.\Brain.$40\ctrl_signals[5:3].
Removed top 2 bits (of 3) from wire top.$flatten\DUT.\Brain.$ternary$i8008_core.sv:380$1001_Y.
Removed top 1 bits (of 3) from wire top.$flatten\DUT.\Brain.$ternary$i8008_core.sv:470$1007_Y.
Removed top 29 bits (of 32) from wire top.$flatten\DUT.\SP_SEL.$add$i8008_core.sv:792$1532_Y.
Removed top 29 bits (of 32) from wire top.$flatten\DUT.\SP_SEL.$sub$i8008_core.sv:794$1535_Y.
Removed top 18 bits (of 32) from wire top.$flatten\DUT.\Stack.$add$i8008_core.sv:731$1527_Y.
Removed top 23 bits (of 32) from wire top.$flatten\DUT.\Unit.$add$i8008_core.sv:176$954_Y.
Removed top 23 bits (of 32) from wire top.$flatten\DUT.\Unit.$sub$i8008_core.sv:177$955_Y.
Removed top 2 bits (of 12) from wire top.chip_inputs.

3.14. Executing PEEPOPT pass (run peephole optimizers).

3.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 9 unused wires.
<suppressed ~1 debug messages>

3.16. Executing SHARE pass (SAT-based resource sharing).
Found 2 cells in module top that may be considered for resource sharing.
  Analyzing resource sharing options for $flatten\DUT.\rf.$memrd$\rf$i8008_core.sv:695$1545 ($memrd):
    Found 1 activation_patterns using ctrl signal { \DUT.Stack.Stack_ctrl [6] \DUT.Brain.ctrl_signals [11] }.
    No candidates found.
  Analyzing resource sharing options for $flatten\DUT.\Stack.$memrd$\rf$i8008_core.sv:731$1526 ($memrd):
    Found 2 activation_patterns using ctrl signal { $flatten\DUT.\Stack.$logic_and$i8008_core.sv:728$1516_Y $flatten\DUT.\Stack.$logic_and$i8008_core.sv:726$1504_Y \DUT.Stack.Stack_ctrl [6] \DUT.Brain.ctrl_signals [3] }.
    No candidates found.

3.17. Executing TECHMAP pass (map to technology primitives).

3.17.1. Executing Verilog-2005 frontend: /Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/cmp2lut.v
Parsing Verilog input from `/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

3.17.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

3.18. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

3.20. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $flatten\DUT.\SP_SEL.$add$i8008_core.sv:792$1532 ($add).
  creating $macc model for $flatten\DUT.\SP_SEL.$sub$i8008_core.sv:794$1535 ($sub).
  creating $macc model for $flatten\DUT.\Stack.$add$i8008_core.sv:731$1527 ($add).
  creating $macc model for $flatten\DUT.\Unit.$add$i8008_core.sv:176$954 ($add).
  creating $macc model for $flatten\DUT.\Unit.$add$i8008_core.sv:199$956 ($add).
  creating $macc model for $flatten\DUT.\Unit.$add$i8008_core.sv:200$959 ($add).
  creating $macc model for $flatten\DUT.\Unit.$sub$i8008_core.sv:177$955 ($sub).
  creating $macc model for $flatten\DUT.\Unit.$sub$i8008_core.sv:201$960 ($sub).
  creating $macc model for $flatten\DUT.\Unit.$sub$i8008_core.sv:202$963 ($sub).
  creating $alu model for $macc $flatten\DUT.\Unit.$sub$i8008_core.sv:202$963.
  creating $alu model for $macc $flatten\DUT.\Unit.$sub$i8008_core.sv:201$960.
  creating $alu model for $macc $flatten\DUT.\Unit.$sub$i8008_core.sv:177$955.
  creating $alu model for $macc $flatten\DUT.\Unit.$add$i8008_core.sv:200$959.
  creating $alu model for $macc $flatten\DUT.\Unit.$add$i8008_core.sv:199$956.
  creating $alu model for $macc $flatten\DUT.\Unit.$add$i8008_core.sv:176$954.
  creating $alu model for $macc $flatten\DUT.\Stack.$add$i8008_core.sv:731$1527.
  creating $alu model for $macc $flatten\DUT.\SP_SEL.$sub$i8008_core.sv:794$1535.
  creating $alu model for $macc $flatten\DUT.\SP_SEL.$add$i8008_core.sv:792$1532.
  creating $alu cell for $flatten\DUT.\SP_SEL.$add$i8008_core.sv:792$1532: $auto$alumacc.cc:485:replace_alu$4202
  creating $alu cell for $flatten\DUT.\SP_SEL.$sub$i8008_core.sv:794$1535: $auto$alumacc.cc:485:replace_alu$4205
  creating $alu cell for $flatten\DUT.\Stack.$add$i8008_core.sv:731$1527: $auto$alumacc.cc:485:replace_alu$4208
  creating $alu cell for $flatten\DUT.\Unit.$add$i8008_core.sv:176$954: $auto$alumacc.cc:485:replace_alu$4211
  creating $alu cell for $flatten\DUT.\Unit.$add$i8008_core.sv:199$956: $auto$alumacc.cc:485:replace_alu$4214
  creating $alu cell for $flatten\DUT.\Unit.$add$i8008_core.sv:200$959: $auto$alumacc.cc:485:replace_alu$4217
  creating $alu cell for $flatten\DUT.\Unit.$sub$i8008_core.sv:177$955: $auto$alumacc.cc:485:replace_alu$4220
  creating $alu cell for $flatten\DUT.\Unit.$sub$i8008_core.sv:201$960: $auto$alumacc.cc:485:replace_alu$4223
  creating $alu cell for $flatten\DUT.\Unit.$sub$i8008_core.sv:202$963: $auto$alumacc.cc:485:replace_alu$4226
  created 9 $alu and 0 $macc cells.

3.21. Executing OPT pass (performing simple optimizations).

3.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.21.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~61 debug messages>

3.21.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

3.21.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.21.6. Executing OPT_DFF pass (perform DFF optimizations).

3.21.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

3.21.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.21.9. Finished OPT passes. (There is nothing left to do.)

3.22. Executing MEMORY pass.

3.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 8 transformations.

3.22.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

3.22.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing top.DUT.Stack.rf write port 0.
  Analyzing top.DUT.Stack.rf write port 1.
  Analyzing top.DUT.Stack.rf write port 2.
  Analyzing top.DUT.rf.rf write port 0.

3.22.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

3.22.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `\DUT.Stack.rf'[0] in module `\top': no output FF found.
Checking read port `\DUT.rf.rf'[0] in module `\top': no output FF found.
Checking read port address `\DUT.Stack.rf'[0] in module `\top': merged address FF to cell.
Checking read port address `\DUT.rf.rf'[0] in module `\top': no address FF found.

3.22.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

3.22.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating write ports of memory top.DUT.Stack.rf by address:
  Merging ports 0, 1 (address \DUT.SP_SEL.Q).
  Merging ports 0, 2 (address \DUT.SP_SEL.Q).

3.22.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

3.22.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 6 unused cells and 6 unused wires.
<suppressed ~7 debug messages>

3.22.10. Executing MEMORY_COLLECT pass (generating $mem cells).

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

3.24. Executing MEMORY_LIBMAP pass (mapping memories to cells).
mapping memory top.DUT.Stack.rf via $__ICE40_RAM4K_
using FF mapping for memory top.DUT.rf.rf
<suppressed ~62 debug messages>

3.25. Executing TECHMAP pass (map to technology primitives).

3.25.1. Executing Verilog-2005 frontend: /Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K_'.
Successfully finished Verilog frontend.

3.25.2. Executing Verilog-2005 frontend: /Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/spram_map.v
Parsing Verilog input from `/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/spram_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_SPRAM_'.
Successfully finished Verilog frontend.

3.25.3. Continuing TECHMAP pass.
Using template $paramod$a1f6b5309207cf102bfb625dccbd224ad06df61d\$__ICE40_RAM4K_ for cells of type $__ICE40_RAM4K_.
No more expansions possible.
<suppressed ~28 debug messages>

3.26. Executing ICE40_BRAMINIT pass.

3.27. Executing OPT pass (performing simple optimizations).

3.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~169 debug messages>

3.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

3.27.3. Executing OPT_DFF pass (perform DFF optimizations).
Removing always-active EN on $auto$mem.cc:1135:emulate_transparency$4248 ($dffe) from module top.
Adding SRST signal on $auto$ff.cc:266:slice$4182 ($dffe) from module top (D = 8'x, Q = \DUT.regA.Q, rval = 8'00000000).
Setting constant 1-bit at position 0 on $auto$ff.cc:266:slice$4181 ($dffe) from module top.
Setting constant 1-bit at position 1 on $auto$ff.cc:266:slice$4181 ($dffe) from module top.
Setting constant 1-bit at position 2 on $auto$ff.cc:266:slice$4181 ($dffe) from module top.
Setting constant 1-bit at position 3 on $auto$ff.cc:266:slice$4181 ($dffe) from module top.
Setting constant 1-bit at position 4 on $auto$ff.cc:266:slice$4181 ($dffe) from module top.
Setting constant 1-bit at position 5 on $auto$ff.cc:266:slice$4181 ($dffe) from module top.
Setting constant 1-bit at position 6 on $auto$ff.cc:266:slice$4181 ($dffe) from module top.
Setting constant 1-bit at position 7 on $auto$ff.cc:266:slice$4181 ($dffe) from module top.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$4309 ($sdffce) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$4309 ($sdffce) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$4309 ($sdffce) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$4309 ($sdffce) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:266:slice$4309 ($sdffce) from module top.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$4309 ($sdffce) from module top.
Setting constant 0-bit at position 6 on $auto$ff.cc:266:slice$4309 ($sdffce) from module top.
Setting constant 0-bit at position 7 on $auto$ff.cc:266:slice$4309 ($sdffce) from module top.

3.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 27 unused cells and 70 unused wires.
<suppressed ~28 debug messages>

3.27.5. Rerunning OPT passes. (Removed registers in this run.)

3.27.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~98 debug messages>

3.27.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.27.8. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$4185 ($dffe) from module top (D = $flatten\DUT.\Unit.$not$i8008_core.sv:213$976_Y, Q = \DUT.Unit.flag_reg.Q [2], rval = 1'1).

3.27.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 7 unused cells and 59 unused wires.
<suppressed ~9 debug messages>

3.27.10. Rerunning OPT passes. (Removed registers in this run.)

3.27.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~3 debug messages>

3.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.27.13. Executing OPT_DFF pass (perform DFF optimizations).

3.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

3.27.15. Finished fast OPT passes.

3.28. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory \DUT.rf.rf in module \top:
  created 7 $dff cells and 0 static cells of width 8.
  read interface: 0 $dff and 7 $mux cells.
  write interface: 7 write mux blocks.

3.29. Executing OPT pass (performing simple optimizations).

3.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~7 debug messages>

3.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~41 debug messages>

3.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New input vector for $reduce_or cell $auto$memory_libmap.cc:1691:emit_port$4262: { $auto$rtlil.cc:2430:Or$4242 $auto$rtlil.cc:2430:Or$4246 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1807: { $auto$opt_reduce.cc:134:opt_pmux$4477 $flatten\DUT.\Brain.$41\ctrl_signals[14:10] [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$2069:
      Old ports: A=2'11, B=2'01, Y=$flatten\DUT.\Brain.$74\ctrl_signals[1:0]
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\Brain.$74\ctrl_signals[1:0] [1]
      New connections: $flatten\DUT.\Brain.$74\ctrl_signals[1:0] [0] = 1'1
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$2125:
      Old ports: A=3'101, B=3'000, Y=$flatten\DUT.\Brain.$80\ctrl_signals[14:11] [3:1]
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\Brain.$80\ctrl_signals[14:11] [1]
      New connections: $flatten\DUT.\Brain.$80\ctrl_signals[14:11] [3:2] = { $flatten\DUT.\Brain.$80\ctrl_signals[14:11] [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$2201:
      Old ports: A=3'110, B=3'000, Y=$flatten\DUT.\Brain.$76\ctrl_signals[14:11] [3:1]
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\Brain.$76\ctrl_signals[14:11] [2]
      New connections: { $flatten\DUT.\Brain.$76\ctrl_signals[14:11] [3] $flatten\DUT.\Brain.$76\ctrl_signals[14:11] [1] } = { $flatten\DUT.\Brain.$76\ctrl_signals[14:11] [2] 1'0 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2374: { $flatten\DUT.\Brain.$procmux$1742_CMP $auto$opt_reduce.cc:134:opt_pmux$4479 }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$2627:
      Old ports: A=3'101, B=3'000, Y=$flatten\DUT.\Brain.$55\ctrl_signals[14:11] [3:1]
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\Brain.$55\ctrl_signals[14:11] [1]
      New connections: $flatten\DUT.\Brain.$55\ctrl_signals[14:11] [3:2] = { $flatten\DUT.\Brain.$55\ctrl_signals[14:11] [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$2682:
      Old ports: A=3'110, B=3'000, Y=$flatten\DUT.\Brain.$50\ctrl_signals[14:11] [3:1]
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\Brain.$50\ctrl_signals[14:11] [2]
      New connections: { $flatten\DUT.\Brain.$50\ctrl_signals[14:11] [3] $flatten\DUT.\Brain.$50\ctrl_signals[14:11] [1] } = { $flatten\DUT.\Brain.$50\ctrl_signals[14:11] [2] 1'0 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2732: $auto$opt_reduce.cc:134:opt_pmux$4481
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2780: \DUT.Brain.cycle [2:1]
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$2822:
      Old ports: A={ 2'10 $auto$wreduce.cc:455:run$4193 [0] }, B=3'000, Y=$flatten\DUT.\Brain.$36\ctrl_signals[24:16] [4:2]
      New ports: A={ 1'1 $auto$wreduce.cc:455:run$4193 [0] }, B=2'00, Y={ $flatten\DUT.\Brain.$36\ctrl_signals[24:16] [4] $flatten\DUT.\Brain.$36\ctrl_signals[24:16] [2] }
      New connections: $flatten\DUT.\Brain.$36\ctrl_signals[24:16] [3] = 1'0
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$2962:
      Old ports: A=3'101, B=3'010, Y=$flatten\DUT.\Brain.$6\next_state[2:0]
      New ports: A=2'01, B=2'10, Y=$flatten\DUT.\Brain.$6\next_state[2:0] [1:0]
      New connections: $flatten\DUT.\Brain.$6\next_state[2:0] [2] = $flatten\DUT.\Brain.$6\next_state[2:0] [0]
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$3268:
      Old ports: A=3'011, B=3'110, Y=$flatten\DUT.\Brain.$4\next_state[2:0]
      New ports: A=2'01, B=2'10, Y={ $flatten\DUT.\Brain.$4\next_state[2:0] [2] $flatten\DUT.\Brain.$4\next_state[2:0] [0] }
      New connections: $flatten\DUT.\Brain.$4\next_state[2:0] [1] = 1'1
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3421: $auto$opt_reduce.cc:134:opt_pmux$4483
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3481: { $auto$opt_reduce.cc:134:opt_pmux$4485 $flatten\DUT.\Brain.$41\ctrl_signals[14:10] [0] }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3621: \DUT.Brain.cycle [0]
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$ternary$i8008_core.sv:301$990:
      Old ports: A=3'000, B=3'111, Y=$flatten\DUT.\Brain.$ternary$i8008_core.sv:301$990_Y
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\Brain.$ternary$i8008_core.sv:301$990_Y [0]
      New connections: $flatten\DUT.\Brain.$ternary$i8008_core.sv:301$990_Y [2:1] = { $flatten\DUT.\Brain.$ternary$i8008_core.sv:301$990_Y [0] $flatten\DUT.\Brain.$ternary$i8008_core.sv:301$990_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$ternary$i8008_core.sv:431$1003:
      Old ports: A=2'01, B=2'11, Y=$flatten\DUT.\Brain.$ternary$i8008_core.sv:431$1003_Y
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\Brain.$ternary$i8008_core.sv:431$1003_Y [1]
      New connections: $flatten\DUT.\Brain.$ternary$i8008_core.sv:431$1003_Y [0] = 1'1
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$ternary$i8008_core.sv:470$1007:
      Old ports: A=2'00, B=2'10, Y=$auto$wreduce.cc:455:run$4194 [1:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$4194 [1]
      New connections: $auto$wreduce.cc:455:run$4194 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$ternary$i8008_core.sv:727$1514:
      Old ports: A=\DUT.DBR.d, B={ 2'00 \DUT.DBR.d [5:3] 3'000 }, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:727$1490_DATA[13:0]$1496 [7:0]
      New ports: A={ \DUT.DBR.d [7:6] \DUT.DBR.d [2:0] }, B=5'00000, Y={ $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:727$1490_DATA[13:0]$1496 [7:6] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:727$1490_DATA[13:0]$1496 [2:0] }
      New connections: $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:727$1490_DATA[13:0]$1496 [5:3] = \DUT.DBR.d [5:3]
    New ctrl vector for $pmux cell $flatten\DUT.\Unit.$procmux$3667: $flatten\DUT.\Unit.$procmux$3672_CMP
    New ctrl vector for $pmux cell $flatten\DUT.\Unit.$procmux$3679: { $flatten\DUT.\Unit.$procmux$3672_CMP $auto$opt_reduce.cc:134:opt_pmux$4487 }
    New ctrl vector for $pmux cell $flatten\DUT.\Unit.$procmux$3705: $flatten\DUT.\Unit.$procmux$3710_CMP
    Consolidated identical input bits for $pmux cell $flatten\DUT.\Unit.$procmux$3716:
      Old ports: A=8'00000001, B={ 7'1111111 $auto$wreduce.cc:455:run$4199 [0] 23'00000000000000000000000 \DUT.Unit.flag_reg.Q [3] \DUT.Unit.flag_reg.Q [3] 7'0000000 }, Y=$flatten\DUT.\Unit.$2\d[7:0]
      New ports: A=3'001, B={ 2'11 $auto$wreduce.cc:455:run$4199 [0] 8'00000000 \DUT.Unit.flag_reg.Q [3] \DUT.Unit.flag_reg.Q [3] 2'00 }, Y={ $flatten\DUT.\Unit.$2\d[7:0] [7] $flatten\DUT.\Unit.$2\d[7:0] [1:0] }
      New connections: $flatten\DUT.\Unit.$2\d[7:0] [6:2] = { $flatten\DUT.\Unit.$2\d[7:0] [1] $flatten\DUT.\Unit.$2\d[7:0] [1] $flatten\DUT.\Unit.$2\d[7:0] [1] $flatten\DUT.\Unit.$2\d[7:0] [1] $flatten\DUT.\Unit.$2\d[7:0] [1] }
    New ctrl vector for $pmux cell $flatten\DUT.\Unit.$procmux$3716: { $flatten\DUT.\Unit.$procmux$3710_CMP $auto$opt_reduce.cc:134:opt_pmux$4489 $flatten\DUT.\Unit.$procmux$3707_CMP $flatten\DUT.\Unit.$procmux$3706_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4476: { $flatten\DUT.\Brain.$procmux$1744_CMP $flatten\DUT.\Brain.$procmux$1743_CMP $flatten\DUT.\Brain.$procmux$1742_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4478: { $flatten\DUT.\Brain.$procmux$1743_CMP $flatten\DUT.\Brain.$41\ctrl_signals[14:10] [0] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4480: { $flatten\DUT.\Brain.$procmux$1744_CMP $flatten\DUT.\Brain.$procmux$1743_CMP $flatten\DUT.\Brain.$procmux$1742_CMP $flatten\DUT.\Brain.$41\ctrl_signals[14:10] [0] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4482: { $flatten\DUT.\Brain.$procmux$1745_CMP $flatten\DUT.\Brain.$procmux$1744_CMP $flatten\DUT.\Brain.$procmux$1742_CMP $flatten\DUT.\Brain.$41\ctrl_signals[14:10] [0] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4484: { $flatten\DUT.\Brain.$procmux$1744_CMP $flatten\DUT.\Brain.$procmux$1743_CMP $flatten\DUT.\Brain.$procmux$1742_CMP }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$1866:
      Old ports: A=$flatten\DUT.\Brain.$ternary$i8008_core.sv:301$990_Y, B=3'010, Y=$flatten\DUT.\Brain.$12\next_state[2:0]
      New ports: A={ $flatten\DUT.\Brain.$ternary$i8008_core.sv:301$990_Y [0] $flatten\DUT.\Brain.$ternary$i8008_core.sv:301$990_Y [0] }, B=2'10, Y=$flatten\DUT.\Brain.$12\next_state[2:0] [1:0]
      New connections: $flatten\DUT.\Brain.$12\next_state[2:0] [2] = $flatten\DUT.\Brain.$12\next_state[2:0] [0]
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$1894:
      Old ports: A=3'010, B=$flatten\DUT.\Brain.$ternary$i8008_core.sv:301$990_Y, Y=$flatten\DUT.\Brain.$11\next_state[2:0]
      New ports: A=2'10, B={ $flatten\DUT.\Brain.$ternary$i8008_core.sv:301$990_Y [0] $flatten\DUT.\Brain.$ternary$i8008_core.sv:301$990_Y [0] }, Y=$flatten\DUT.\Brain.$11\next_state[2:0] [1:0]
      New connections: $flatten\DUT.\Brain.$11\next_state[2:0] [2] = $flatten\DUT.\Brain.$11\next_state[2:0] [0]
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$2353:
      Old ports: A=$flatten\DUT.\Brain.$ternary$i8008_core.sv:301$990_Y, B={ 1'0 $auto$wreduce.cc:455:run$4194 [1:0] }, Y=$flatten\DUT.\Brain.$8\next_state[2:0]
      New ports: A={ $flatten\DUT.\Brain.$ternary$i8008_core.sv:301$990_Y [0] $flatten\DUT.\Brain.$ternary$i8008_core.sv:301$990_Y [0] }, B={ $auto$wreduce.cc:455:run$4194 [1] 1'0 }, Y=$flatten\DUT.\Brain.$8\next_state[2:0] [1:0]
      New connections: $flatten\DUT.\Brain.$8\next_state[2:0] [2] = $flatten\DUT.\Brain.$8\next_state[2:0] [0]
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$3459:
      Old ports: A=3'010, B=$flatten\DUT.\Brain.$ternary$i8008_core.sv:301$990_Y, Y=$flatten\DUT.\Brain.$5\next_state[2:0]
      New ports: A=2'10, B={ $flatten\DUT.\Brain.$ternary$i8008_core.sv:301$990_Y [0] $flatten\DUT.\Brain.$ternary$i8008_core.sv:301$990_Y [0] }, Y=$flatten\DUT.\Brain.$5\next_state[2:0] [1:0]
      New connections: $flatten\DUT.\Brain.$5\next_state[2:0] [2] = $flatten\DUT.\Brain.$5\next_state[2:0] [0]
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$3569:
      Old ports: A=9'000000000, B={ $auto$opt_reduce.cc:134:opt_pmux$3874 $flatten\DUT.\Brain.$36\ctrl_signals[24:16] [7:2] $auto$opt_reduce.cc:134:opt_pmux$3988 $flatten\DUT.\Brain.$36\ctrl_signals[24:16] [0] }, Y=$flatten\DUT.\Brain.$10\ctrl_signals[24:16]
      New ports: A=8'00000000, B={ $auto$opt_reduce.cc:134:opt_pmux$3874 $flatten\DUT.\Brain.$36\ctrl_signals[24:16] [7:4] $flatten\DUT.\Brain.$36\ctrl_signals[24:16] [2] $auto$opt_reduce.cc:134:opt_pmux$3988 $flatten\DUT.\Brain.$36\ctrl_signals[24:16] [0] }, Y={ $flatten\DUT.\Brain.$10\ctrl_signals[24:16] [8:4] $flatten\DUT.\Brain.$10\ctrl_signals[24:16] [2:0] }
      New connections: $flatten\DUT.\Brain.$10\ctrl_signals[24:16] [3] = 1'0
  Optimizing cells in module \top.
    Consolidated identical input bits for $pmux cell $flatten\DUT.\Brain.$procmux$1918:
      Old ports: A=$flatten\DUT.\Brain.$ternary$i8008_core.sv:301$990_Y, B={ 3'010 $flatten\DUT.\Brain.$11\next_state[2:0] $flatten\DUT.\Brain.$12\next_state[2:0] }, Y=$flatten\DUT.\Brain.$10\next_state[2:0]
      New ports: A={ $flatten\DUT.\Brain.$ternary$i8008_core.sv:301$990_Y [0] $flatten\DUT.\Brain.$ternary$i8008_core.sv:301$990_Y [0] }, B={ 2'10 $flatten\DUT.\Brain.$11\next_state[2:0] [1:0] $flatten\DUT.\Brain.$12\next_state[2:0] [1:0] }, Y=$flatten\DUT.\Brain.$10\next_state[2:0] [1:0]
      New connections: $flatten\DUT.\Brain.$10\next_state[2:0] [2] = $flatten\DUT.\Brain.$10\next_state[2:0] [0]
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$3627:
      Old ports: A=3'000, B=$flatten\DUT.\Brain.$10\ctrl_signals[24:16] [4:2], Y=\DUT.Unit.ALU_ctrl [5:3]
      New ports: A=2'00, B={ $flatten\DUT.\Brain.$10\ctrl_signals[24:16] [4] $flatten\DUT.\Brain.$10\ctrl_signals[24:16] [2] }, Y={ \DUT.Unit.ALU_ctrl [5] \DUT.Unit.ALU_ctrl [3] }
      New connections: \DUT.Unit.ALU_ctrl [4] = 1'0
  Optimizing cells in module \top.
Performed a total of 37 changes.

3.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~30 debug messages>
Removed a total of 10 cells.

3.29.6. Executing OPT_DFF pass (perform DFF optimizations).

3.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 7 unused cells and 33 unused wires.
<suppressed ~8 debug messages>

3.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~3 debug messages>

3.29.9. Rerunning OPT passes. (Maybe there is more to do..)

3.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/5 on $pmux $flatten\DUT.\Unit.$procmux$3716.
    dead port 2/5 on $pmux $flatten\DUT.\Unit.$procmux$3716.
Removed 2 multiplexer ports.
<suppressed ~42 debug messages>

3.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $pmux cell $flatten\DUT.\Brain.$procmux$2112:
      Old ports: A={ $flatten\DUT.\Brain.$74\ctrl_signals[1:0] [1] $flatten\DUT.\Brain.$74\ctrl_signals[1:0] [1] 1'0 $flatten\DUT.\Brain.$74\ctrl_signals[1:0] [1] }, B={ $flatten\DUT.\Brain.$74\ctrl_signals[1:0] [1] 1'0 $flatten\DUT.\Brain.$74\ctrl_signals[1:0] [1] $flatten\DUT.\Brain.$74\ctrl_signals[1:0] [1] 4'0000 }, Y=$flatten\DUT.\Brain.$70\ctrl_signals[14:11]
      New ports: A={ $flatten\DUT.\Brain.$74\ctrl_signals[1:0] [1] 1'0 $flatten\DUT.\Brain.$74\ctrl_signals[1:0] [1] }, B={ 1'0 $flatten\DUT.\Brain.$74\ctrl_signals[1:0] [1] $flatten\DUT.\Brain.$74\ctrl_signals[1:0] [1] 3'000 }, Y=$flatten\DUT.\Brain.$70\ctrl_signals[14:11] [2:0]
      New connections: $flatten\DUT.\Brain.$70\ctrl_signals[14:11] [3] = $flatten\DUT.\Brain.$70\ctrl_signals[14:11] [0]
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$2353:
      Old ports: A={ $auto$wreduce.cc:455:run$4194 [1] $auto$wreduce.cc:455:run$4194 [1] }, B={ $auto$wreduce.cc:455:run$4194 [1] 1'0 }, Y={ $flatten\DUT.\Brain.$8\next_state[2:0] [1] $flatten\DUT.\Brain.$8\next_state[2:0] [2] }
      New ports: A=$auto$wreduce.cc:455:run$4194 [1], B=1'0, Y=$flatten\DUT.\Brain.$8\next_state[2:0] [2]
      New connections: $flatten\DUT.\Brain.$8\next_state[2:0] [1] = $auto$wreduce.cc:455:run$4194 [1]
    Consolidated identical input bits for $pmux cell $flatten\DUT.\Unit.$procmux$3716:
      Old ports: A=3'001, B={ 2'11 $auto$wreduce.cc:455:run$4199 [0] 3'000 }, Y={ $flatten\DUT.\Unit.$2\d[7:0] [7:6] $flatten\DUT.\Unit.$2\d[7:0] [0] }
      New ports: A=2'01, B={ 1'1 $auto$wreduce.cc:455:run$4199 [0] 2'00 }, Y={ $flatten\DUT.\Unit.$2\d[7:0] [6] $flatten\DUT.\Unit.$2\d[7:0] [0] }
      New connections: $flatten\DUT.\Unit.$2\d[7:0] [7] = $flatten\DUT.\Unit.$2\d[7:0] [6]
  Optimizing cells in module \top.
Performed a total of 3 changes.

3.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.29.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $memory\DUT.rf.rf[6]$4391 ($dff) from module top (D = \DUT.DBR.d, Q = \DUT.rf.rf[6]).
Adding EN signal on $memory\DUT.rf.rf[5]$4389 ($dff) from module top (D = \DUT.DBR.d, Q = \DUT.rf.rf[5]).
Adding EN signal on $memory\DUT.rf.rf[4]$4387 ($dff) from module top (D = \DUT.DBR.d, Q = \DUT.rf.rf[4]).
Adding EN signal on $memory\DUT.rf.rf[3]$4385 ($dff) from module top (D = \DUT.DBR.d, Q = \DUT.rf.rf[3]).
Adding EN signal on $memory\DUT.rf.rf[2]$4383 ($dff) from module top (D = \DUT.DBR.d, Q = \DUT.rf.rf[2]).
Adding EN signal on $memory\DUT.rf.rf[1]$4381 ($dff) from module top (D = \DUT.DBR.d, Q = \DUT.rf.rf[1]).
Adding EN signal on $memory\DUT.rf.rf[0]$4379 ($dff) from module top (D = \DUT.DBR.d, Q = \DUT.rf.rf[0]).

3.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 7 unused cells and 9 unused wires.
<suppressed ~8 debug messages>

3.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.29.16. Rerunning OPT passes. (Maybe there is more to do..)

3.29.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~35 debug messages>

3.29.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

3.29.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.29.20. Executing OPT_DFF pass (perform DFF optimizations).

3.29.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

3.29.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.29.23. Finished OPT passes. (There is nothing left to do.)

3.30. Executing ICE40_WRAPCARRY pass (wrap carries).

3.31. Executing TECHMAP pass (map to technology primitives).

3.31.1. Executing Verilog-2005 frontend: /Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/techmap.v
Parsing Verilog input from `/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.31.2. Executing Verilog-2005 frontend: /Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

3.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $not.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $or.
Using template $paramod$d629d85c8826a74239b9178d1930215a43b0ceb0\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$c5c783b17ab1d780abfad8cfe6563a0a7b47a3b0\_90_pmux for cells of type $pmux.
Using template $paramod$97565c3687be688407d1272a293bd9d0ae6852dc\_90_pmux for cells of type $pmux.
Using template $paramod$32e7c4d6f92ff4337599ece53082d2e88a82a9f2\_90_pmux for cells of type $pmux.
Using template $paramod$d31bf4d7d72e59528d18fbd4f322e9d608532043\_90_pmux for cells of type $pmux.
Using template $paramod$521ce43182eecb9f60c72393a788160d2c356bf5\_90_pmux for cells of type $pmux.
Using template $paramod$85df5dc01c7df96a7d8e5f1fdf76ce9ac452af63\_90_pmux for cells of type $pmux.
Using template $paramod$c2e415ef15bc3ccd2723772353a6b450d3d76206\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $dff.
Using template $paramod$bf2533632d512eac76dd186c0da49367e29b8e98\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod$fc972a7a46956c1788f3cb5257b53c8f1df2d0cc\_90_alu for cells of type $alu.
Using template $paramod$b8c0a997bce700f23568a5ada79cc6781d1f5ca0\_80_ice40_alu for cells of type $alu.
Using template $paramod$713617589782cfade849bb573b5c36106c4b708f\_80_ice40_alu for cells of type $alu.
Using template $paramod$6f67705c43e5e94c02b6ebb52209ce5aa5ade4c1\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_xor.
Using extmapper simplemap for cells of type $sdffce.
Using template $paramod$fc16b9f758000d363d24f130038bd99b46b4fa1b\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000001 for cells of type $lcu.
No more expansions possible.
<suppressed ~1004 debug messages>

3.32. Executing OPT pass (performing simple optimizations).

3.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~639 debug messages>

3.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~915 debug messages>
Removed a total of 305 cells.

3.32.3. Executing OPT_DFF pass (perform DFF optimizations).

3.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 24 unused cells and 1021 unused wires.
<suppressed ~25 debug messages>

3.32.5. Finished fast OPT passes.

3.33. Executing ICE40_OPT pass (performing simple optimizations).

3.33.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4202.slice[0].carry: CO=\DUT.SP_SEL.Q [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4205.slice[0].carry: CO=\DUT.SP_SEL.Q [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4208.slice[0].carry: CO=\DUT.Stack.rs [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4226.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4226.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4226.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$4226.C [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4226.slice[2].carry: CO=$auto$alumacc.cc:485:replace_alu$4226.C [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4226.slice[3].carry: CO=$auto$alumacc.cc:485:replace_alu$4226.C [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4226.slice[4].carry: CO=$auto$alumacc.cc:485:replace_alu$4226.C [4]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4226.slice[5].carry: CO=$auto$alumacc.cc:485:replace_alu$4226.C [5]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4226.slice[6].carry: CO=$auto$alumacc.cc:485:replace_alu$4226.C [6]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4226.slice[7].carry: CO=$auto$alumacc.cc:485:replace_alu$4226.C [7]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4226.slice[8].carry: CO=$auto$alumacc.cc:485:replace_alu$4226.C [8]

3.33.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~8 debug messages>

3.33.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~87 debug messages>
Removed a total of 29 cells.

3.33.4. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$6507 ($_SDFF_PN0_) from module top (D = $flatten\DUT.\Brain.$procmux$3600.Y_B [2], Q = \DUT.Brain.state [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6506 ($_SDFF_PN1_) from module top (D = $flatten\DUT.\Brain.$procmux$3600.Y_B [1], Q = \DUT.Brain.state [1], rval = 1'1).
Adding SRST signal on $auto$ff.cc:266:slice$6505 ($_SDFF_PN0_) from module top (D = $flatten\DUT.\Brain.$procmux$3600.Y_B [0], Q = \DUT.Brain.state [0], rval = 1'0).

3.33.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 3 unused cells and 7 unused wires.
<suppressed ~5 debug messages>

3.33.6. Rerunning OPT passes. (Removed registers in this run.)

3.33.7. Running ICE40 specific optimizations.

3.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~6 debug messages>

3.33.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

3.33.10. Executing OPT_DFF pass (perform DFF optimizations).

3.33.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

3.33.12. Rerunning OPT passes. (Removed registers in this run.)

3.33.13. Running ICE40 specific optimizations.

3.33.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.33.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.33.16. Executing OPT_DFF pass (perform DFF optimizations).

3.33.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

3.33.18. Finished OPT passes. (There is nothing left to do.)

3.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

3.35. Executing TECHMAP pass (map to technology primitives).

3.35.1. Executing Verilog-2005 frontend: /Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

3.35.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_SDFF_PP1_ for cells of type $_SDFF_PP1_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template \$_SDFFCE_PP1P_ for cells of type $_SDFFCE_PP1P_.
No more expansions possible.
<suppressed ~127 debug messages>

3.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping top.$auto$alumacc.cc:485:replace_alu$4205.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$4208.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$4226.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$4226.slice[1].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$4202.slice[0].carry ($lut).

3.38. Executing ICE40_OPT pass (performing simple optimizations).

3.38.1. Running ICE40 specific optimizations.

3.38.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~143 debug messages>

3.38.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~21 debug messages>
Removed a total of 7 cells.

3.38.4. Executing OPT_DFF pass (perform DFF optimizations).

3.38.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 528 unused wires.
<suppressed ~2 debug messages>

3.38.6. Rerunning OPT passes. (Removed registers in this run.)

3.38.7. Running ICE40 specific optimizations.

3.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

3.38.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.38.10. Executing OPT_DFF pass (perform DFF optimizations).

3.38.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

3.38.12. Rerunning OPT passes. (Removed registers in this run.)

3.38.13. Running ICE40 specific optimizations.

3.38.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.38.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.38.16. Executing OPT_DFF pass (perform DFF optimizations).

3.38.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

3.38.18. Finished OPT passes. (There is nothing left to do.)

3.39. Executing TECHMAP pass (map to technology primitives).

3.39.1. Executing Verilog-2005 frontend: /Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

3.39.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

3.40. Executing ABC pass (technology mapping using ABC).

3.40.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 917 gates and 1054 wires to a netlist network with 135 inputs and 71 outputs.

3.40.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + &get -n 
ABC: + &fraig -x 
ABC: + &put 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress <abc-temp-dir>/input.blif 
ABC: Total number of equiv classes                =     148.
ABC: Participating nodes from both networks       =     372.
ABC: Participating nodes from the first network   =     153. (  56.25 % of nodes)
ABC: Participating nodes from the second network  =     219. (  80.51 % of nodes)
ABC: Node pairs (any polarity)                    =     152. (  55.88 % of names can be moved)
ABC: Node pairs (same polarity)                   =     123. (  45.22 % of names can be moved)
ABC: Total runtime =     0.04 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

3.40.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      271
ABC RESULTS:        internal signals:      848
ABC RESULTS:           input signals:      135
ABC RESULTS:          output signals:       71
Removing temp directory.

3.41. Executing ICE40_WRAPCARRY pass (wrap carries).

3.42. Executing TECHMAP pass (map to technology primitives).

3.42.1. Executing Verilog-2005 frontend: /Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

3.42.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 3 unused cells and 673 unused wires.

3.43. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:      287
  1-LUT                4
  2-LUT               63
  3-LUT               90
  4-LUT              130
  with \SB_CARRY    (#0)   14
  with \SB_CARRY    (#1)   14

Eliminating LUTs.
Number of LUTs:      287
  1-LUT                4
  2-LUT               63
  3-LUT               90
  4-LUT              130
  with \SB_CARRY    (#0)   14
  with \SB_CARRY    (#1)   14

Combining LUTs.
Number of LUTs:      285
  1-LUT                4
  2-LUT               61
  3-LUT               89
  4-LUT              131
  with \SB_CARRY    (#0)   14
  with \SB_CARRY    (#1)   14

Eliminated 0 LUTs.
Combined 2 LUTs.
<suppressed ~1474 debug messages>

3.44. Executing TECHMAP pass (map to technology primitives).

3.44.1. Executing Verilog-2005 frontend: /Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

3.44.2. Continuing TECHMAP pass.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod$5c32c59025c0b98f20e63f249d83e7ebb4b085e3\$lut for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod$82b4a585d1edcb5c6e755dc9bd3392228a1c1304\$lut for cells of type $lut.
Using template $paramod$acaf438e6f4f31b5725b67e171b88692c75d36a3\$lut for cells of type $lut.
Using template $paramod$bba54c1ef87367812b4c15f4aed5ac70773df775\$lut for cells of type $lut.
Using template $paramod$a44bfc089ebe40b83c2c06bb965c500df992ecfb\$lut for cells of type $lut.
Using template $paramod$bdb7f9ed72fd4f5c7ad81c376f2d8a5c72a0098d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod$a2d691ba21e093558f2a36669ee489fbccffbcd3\$lut for cells of type $lut.
Using template $paramod$b297295e19b03521716155b85537bbe86d6a9ae6\$lut for cells of type $lut.
Using template $paramod$b4d0f4738a5ce50c7f36c2aa2ecc09cfb874f2b6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod$b431bfd938e35871dd0b7668e1503c7e8b9d491c\$lut for cells of type $lut.
Using template $paramod$df196ed0a1da5c4a58c5e08a1dac304fd3fccaab\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0111 for cells of type $lut.
Using template $paramod$b4410865e8124402796f9dfbf73ef8d279fdbd08\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001101 for cells of type $lut.
Using template $paramod$6e238df02989b317f10820a22773676e71120644\$lut for cells of type $lut.
Using template $paramod$d53578aacfd93124244778d88be0e90eb09c1b1b\$lut for cells of type $lut.
Using template $paramod$81d8a60fd95b1a9f9ef71c12a774ae6988cb9fd5\$lut for cells of type $lut.
Using template $paramod$5a621b016c894274d07edef48c49b401a15fd796\$lut for cells of type $lut.
Using template $paramod$1bf62ab10e48d71d6497bccacf5c70420c470fe9\$lut for cells of type $lut.
Using template $paramod$2e11c0e004fab0373ef80005c65c968bc830b55a\$lut for cells of type $lut.
Using template $paramod$a8b2b0f3a3fd7b01c99e8d61bb72f602bd41af54\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001011 for cells of type $lut.
Using template $paramod$332a399730bfc61adea04021a76b1c4e4030f37d\$lut for cells of type $lut.
Using template $paramod$70ebb6cf5bc7d63c5c1a98ccefefa2af79e8f2a9\$lut for cells of type $lut.
Using template $paramod$7d791c2363f4f019348f93a148b2a44b4ba6b5b3\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001010 for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod$1307f430048519f43ab1ac47bdca16ced42e5270\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110001 for cells of type $lut.
Using template $paramod$44322768708ea1617c4f8f4845eb883e6765da22\$lut for cells of type $lut.
Using template $paramod$6b0849254d6c87461fb93e37cc18f089f61eb912\$lut for cells of type $lut.
Using template $paramod$4b2297966ddb718657b80566604f97685ffc0120\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101111 for cells of type $lut.
Using template $paramod$e9c77024ca501b890c641f9c0b10e27242db8730\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1011 for cells of type $lut.
Using template $paramod$41326ad8644342a66dfb051d050f2b6fbf15015b\$lut for cells of type $lut.
Using template $paramod$179512a187da069f3b79ef6612a41e494e7d54b6\$lut for cells of type $lut.
Using template $paramod$30234ddca80ec18fbcf4d45d8bd1821aad47e8fd\$lut for cells of type $lut.
Using template $paramod$fd1e68d43235621014e35437b4508a97628b7e8f\$lut for cells of type $lut.
Using template $paramod$43779580bfffd5d5a9f321249a174febf1dac288\$lut for cells of type $lut.
Using template $paramod$bb4fff1cc3b827238aa40993cafede1c5beecbe3\$lut for cells of type $lut.
Using template $paramod$608f40069c27841a5b3bdf03643a34bdc8974072\$lut for cells of type $lut.
Using template $paramod$e49f6e3576ef1a6d2f58c54414dbb786af8cc869\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100000 for cells of type $lut.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod$da9ccc23e767dba3b48ae5654c03ccb120aa1504\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
Using template $paramod$b93d1ea7a612a32c185108f67a153d44ffb9aac2\$lut for cells of type $lut.
Using template $paramod$2d8ecce5c907513cebcd38ab5efe0fc26fc03464\$lut for cells of type $lut.
Using template $paramod$ef26adabe6060e01077b576cfe34e95e55a26aef\$lut for cells of type $lut.
Using template $paramod$b4f15f202f50520dbc381cd0880ac94f830f05a8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101100 for cells of type $lut.
Using template $paramod$ed10455c824c2a3761aabdeb1e31dad905f66e6e\$lut for cells of type $lut.
Using template $paramod$11ec7271d8e6e5aeaace08c13e4c601f10e31038\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110000 for cells of type $lut.
Using template $paramod$c24ed72ebb67e9ead6029e42e909ef7fc0abbb11\$lut for cells of type $lut.
Using template $paramod$e5759512db67494ff77fbdfc66dff4006376568f\$lut for cells of type $lut.
Using template $paramod$04b674496422df8889c01c3744b94097628ccfbc\$lut for cells of type $lut.
Using template $paramod$314fe9458b07176c4d2c8c59533027c4c55155b5\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10111111 for cells of type $lut.
Using template $paramod$cdc190b0ebd2871fd44da321a09eaaa34dbc9dac\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111000 for cells of type $lut.
Using template $paramod$cc08dba3aac8677e797984bdf18a09dd37547dd3\$lut for cells of type $lut.
Using template $paramod$baa939b0bd5b3e0c8760492528669bd58f640542\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod$7fcc2f13195f27c397064377984d87a90c06749d\$lut for cells of type $lut.
Using template $paramod$53ce561f80f32d4298a3beadc88b6c5c78293221\$lut for cells of type $lut.
Using template $paramod$fc318a7df7fe07fd6e06d67fcbc358e9823ea389\$lut for cells of type $lut.
Using template $paramod$762dcdf49521c1aa2145fa6746ab6d57dd5df22e\$lut for cells of type $lut.
Using template $paramod$1843b3c15f2447d117e2d5de9b00f791ef5f9fa3\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~1406 debug messages>
Removed 0 unused cells and 670 unused wires.

3.45. Executing AUTONAME pass.
Renamed 6648 objects in module top (52 iterations).
<suppressed ~580 debug messages>

3.46. Executing HIERARCHY pass (managing design hierarchy).

3.46.1. Analyzing design hierarchy..
Top module:  \top

3.46.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

3.47. Printing statistics.

=== top ===

   Number of wires:                293
   Number of wire bits:           1156
   Number of public wires:         293
   Number of public wire bits:    1156
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                405
     SB_CARRY                       14
     SB_DFF                         23
     SB_DFFE                        78
     SB_DFFESS                       1
     SB_DFFSR                        2
     SB_DFFSS                        1
     SB_LUT4                       285
     SB_RAM40_4K                     1

3.48. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

3.49. Executing JSON backend.

Warnings: 55 unique messages, 55 total
End of script. Logfile hash: b84cc9d239, CPU: user 4.53s system 0.08s
Yosys 0.25+97 (git sha1 221036c5b, x86_64-apple-darwin20.2-clang 10.0.0-4ubuntu1 -fPIC -Os)
Time spent: 26% 14x read_verilog (1 sec), 20% 7x techmap (1 sec), ...
