
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.25+97 (git sha1 221036c5b, x86_64-apple-darwin20.2-clang 10.0.0-4ubuntu1 -fPIC -Os)


-- Running command `read_verilog -sv debugbus.sv i8008_core.sv; synth_ice40 -json build/synthesis.json -top top' --

1. Executing Verilog-2005 frontend: debugbus.sv
Parsing SystemVerilog input from `debugbus.sv' to AST representation.
Warning: Encountered `parallel_case' comment! Such legacy hot comments are supported by Yosys, but are not part of any formal language specification. Using the Verilog `parallel_case' attribute or the SystemVerilog `unique' or `priority' keywords is recommended!
Generating RTLIL representation for module `\debug_harness'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: i8008_core.sv
Parsing SystemVerilog input from `i8008_core.sv' to AST representation.
Generating RTLIL representation for module `\top'.
Generating RTLIL representation for module `\i8008_core'.
Generating RTLIL representation for module `\ALU'.
Generating RTLIL representation for module `\fsm_decoder'.
Generating RTLIL representation for module `\reg_file'.
Generating RTLIL representation for module `\stack'.
Generating RTLIL representation for module `\Stabilizer'.
Generating RTLIL representation for module `\Register'.
Generating RTLIL representation for module `\FlagRegister'.
Generating RTLIL representation for module `\Counter'.
Successfully finished Verilog frontend.

3. Executing SYNTH_ICE40 pass.

3.1. Executing Verilog-2005 frontend: /Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

3.2. Executing HIERARCHY pass (managing design hierarchy).

3.2.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \i8008_core
Used module:         \fsm_decoder
Used module:         \stack
Used module:         \Counter
Used module:         \reg_file
Used module:         \ALU
Used module:             \FlagRegister
Used module:         \Register
Used module:         \Stabilizer
Parameter \WIDTH = 8
Parameter \STACK_HEIGHT = 8

3.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\i8008_core'.
Parameter \WIDTH = 8
Parameter \STACK_HEIGHT = 8
Generating RTLIL representation for module `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core'.
Parameter \WIDTH = 14
Parameter \HEIGHT = 8

3.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\stack'.
Parameter \WIDTH = 14
Parameter \HEIGHT = 8
Generating RTLIL representation for module `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack'.
Parameter \WIDTH = 3

3.2.4. Executing AST frontend in derive mode using pre-parsed AST for module `\Counter'.
Parameter \WIDTH = 3
Generating RTLIL representation for module `$paramod\Counter\WIDTH=s32'00000000000000000000000000000011'.
Parameter \WIDTH = 8
Parameter \HEIGHT = 7

3.2.5. Executing AST frontend in derive mode using pre-parsed AST for module `\reg_file'.
Parameter \WIDTH = 8
Parameter \HEIGHT = 7
Generating RTLIL representation for module `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file'.
Parameter \WIDTH = 8

3.2.6. Executing AST frontend in derive mode using pre-parsed AST for module `\Register'.
Parameter \WIDTH = 8
Generating RTLIL representation for module `$paramod\Register\WIDTH=s32'00000000000000000000000000001000'.
Parameter \WIDTH = 8
Found cached RTLIL representation for module `$paramod\Register\WIDTH=s32'00000000000000000000000000001000'.
Parameter \WIDTH = 8
Found cached RTLIL representation for module `$paramod\Register\WIDTH=s32'00000000000000000000000000001000'.
Parameter \WIDTH = 8
Found cached RTLIL representation for module `$paramod\Register\WIDTH=s32'00000000000000000000000000001000'.
Parameter \WIDTH = 4

3.2.7. Executing AST frontend in derive mode using pre-parsed AST for module `\FlagRegister'.
Parameter \WIDTH = 4
Generating RTLIL representation for module `$paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100'.

3.2.8. Analyzing design hierarchy..
Top module:  \top
Used module:     $paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core
Used module:         \fsm_decoder
Used module:         \stack
Used module:         \Counter
Used module:         \reg_file
Used module:         \ALU
Used module:             $paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100
Used module:         \Register
Used module:         \Stabilizer
Parameter \WIDTH = 14
Parameter \HEIGHT = 8
Found cached RTLIL representation for module `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack'.
Parameter \WIDTH = 3
Found cached RTLIL representation for module `$paramod\Counter\WIDTH=s32'00000000000000000000000000000011'.
Parameter \WIDTH = 8
Parameter \HEIGHT = 7
Found cached RTLIL representation for module `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file'.
Parameter \WIDTH = 8
Found cached RTLIL representation for module `$paramod\Register\WIDTH=s32'00000000000000000000000000001000'.
Parameter \WIDTH = 8
Found cached RTLIL representation for module `$paramod\Register\WIDTH=s32'00000000000000000000000000001000'.
Parameter \WIDTH = 8
Found cached RTLIL representation for module `$paramod\Register\WIDTH=s32'00000000000000000000000000001000'.
Parameter \WIDTH = 8
Found cached RTLIL representation for module `$paramod\Register\WIDTH=s32'00000000000000000000000000001000'.

3.2.9. Analyzing design hierarchy..
Top module:  \top
Used module:     $paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core
Used module:         \fsm_decoder
Used module:         $paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack
Used module:         $paramod\Counter\WIDTH=s32'00000000000000000000000000000011
Used module:         $paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file
Used module:         \ALU
Used module:             $paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100
Used module:         $paramod\Register\WIDTH=s32'00000000000000000000000000001000
Used module:         \Stabilizer

3.2.10. Analyzing design hierarchy..
Top module:  \top
Used module:     $paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core
Used module:         \fsm_decoder
Used module:         $paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack
Used module:         $paramod\Counter\WIDTH=s32'00000000000000000000000000000011
Used module:         $paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file
Used module:         \ALU
Used module:             $paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100
Used module:         $paramod\Register\WIDTH=s32'00000000000000000000000000001000
Used module:         \Stabilizer
Removing unused module `\Counter'.
Removing unused module `\FlagRegister'.
Removing unused module `\Register'.
Removing unused module `\stack'.
Removing unused module `\reg_file'.
Removing unused module `\i8008_core'.
Removing unused module `\debug_harness'.
Removed 7 unused modules.

3.3. Executing PROC pass (convert processes to netlists).

3.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1414$1404 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1353$1397 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1273$1393 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1212$1386 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1138$1383 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1088$1380 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1017$1377 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:967$1374 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:803$1366 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:742$1359 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:662$1355 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:601$1348 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:527$1345 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:477$1342 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:406$1339 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:356$1336 in module SB_DFFSR.
Marked 1 switch rules as full_case in process $proc$i8008_core.sv:797$1670 in module $paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100.
Marked 1 switch rules as full_case in process $proc$i8008_core.sv:783$1669 in module $paramod\Register\WIDTH=s32'00000000000000000000000000001000.
Marked 2 switch rules as full_case in process $proc$i8008_core.sv:698$1643 in module $paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.
Marked 3 switch rules as full_case in process $proc$i8008_core.sv:811$1629 in module $paramod\Counter\WIDTH=s32'00000000000000000000000000000011.
Marked 4 switch rules as full_case in process $proc$i8008_core.sv:740$1568 in module $paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.
Marked 1 switch rules as full_case in process $proc$i8008_core.sv:669$1047 in module fsm_decoder.
Removed 4 dead cases from process $proc$i8008_core.sv:0$987 in module fsm_decoder.
Marked 8 switch rules as full_case in process $proc$i8008_core.sv:0$987 in module fsm_decoder.
Removed 1 dead cases from process $proc$i8008_core.sv:0$983 in module fsm_decoder.
Removed 1 dead cases from process $proc$i8008_core.sv:0$958 in module ALU.
Marked 1 switch rules as full_case in process $proc$i8008_core.sv:0$958 in module ALU.
Marked 7 switch rules as full_case in process $proc$i8008_core.sv:0$1544 in module $paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.
Removed a total of 6 dead cases.

3.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 10 redundant assignments.
Promoted 77 assignments to connections.

3.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1407'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1403'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1396'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1392'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1385'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1382'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1379'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1376'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1373'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1371'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1369'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1365'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1358'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1354'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1347'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1344'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1341'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1338'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1335'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1333'.
  Set init value: \Q = 1'0

3.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1414$1404'.
Found async reset \R in `\SB_DFFNER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1273$1393'.
Found async reset \S in `\SB_DFFNS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1138$1383'.
Found async reset \R in `\SB_DFFNR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1017$1377'.
Found async reset \S in `\SB_DFFES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:803$1366'.
Found async reset \R in `\SB_DFFER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:662$1355'.
Found async reset \S in `\SB_DFFS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:527$1345'.
Found async reset \R in `\SB_DFFR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:406$1339'.

3.3.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~70 debug messages>

3.3.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SB_DFFNES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1407'.
Creating decoders for process `\SB_DFFNES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1414$1404'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1403'.
Creating decoders for process `\SB_DFFNESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1353$1397'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1396'.
Creating decoders for process `\SB_DFFNER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1273$1393'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1392'.
Creating decoders for process `\SB_DFFNESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1212$1386'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1385'.
Creating decoders for process `\SB_DFFNS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1138$1383'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1382'.
Creating decoders for process `\SB_DFFNSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1088$1380'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1379'.
Creating decoders for process `\SB_DFFNR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1017$1377'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1376'.
Creating decoders for process `\SB_DFFNSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:967$1374'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1373'.
Creating decoders for process `\SB_DFFNE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:922$1372'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1371'.
Creating decoders for process `\SB_DFFN.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:882$1370'.
Creating decoders for process `\SB_DFFES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1369'.
Creating decoders for process `\SB_DFFES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:803$1366'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1365'.
Creating decoders for process `\SB_DFFESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:742$1359'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1358'.
Creating decoders for process `\SB_DFFER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:662$1355'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1354'.
Creating decoders for process `\SB_DFFESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:601$1348'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1347'.
Creating decoders for process `\SB_DFFS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:527$1345'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1344'.
Creating decoders for process `\SB_DFFSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:477$1342'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1341'.
Creating decoders for process `\SB_DFFR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:406$1339'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1338'.
Creating decoders for process `\SB_DFFSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:356$1336'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1335'.
Creating decoders for process `\SB_DFFE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:311$1334'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1333'.
Creating decoders for process `\SB_DFF.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:271$1332'.
Creating decoders for process `$paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100.$proc$i8008_core.sv:797$1670'.
     1/1: $0\Q[3:0]
Creating decoders for process `$paramod\Register\WIDTH=s32'00000000000000000000000000001000.$proc$i8008_core.sv:783$1669'.
     1/1: $0\Q[7:0]
Creating decoders for process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.sv:0$1667'.
Creating decoders for process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.sv:698$1643'.
     1/13: $2$memwr$\rf$i8008_core.sv:709$1642_EN[7:0]$1666
     2/13: $2$memwr$\rf$i8008_core.sv:709$1642_DATA[7:0]$1665
     3/13: $2$memwr$\rf$i8008_core.sv:709$1642_ADDR[2:0]$1664
     4/13: $1$memwr$\rf$i8008_core.sv:706$1641_EN[7:0]$1660
     5/13: $1$memwr$\rf$i8008_core.sv:705$1640_EN[7:0]$1659
     6/13: $1$memwr$\rf$i8008_core.sv:704$1639_EN[7:0]$1658
     7/13: $1$memwr$\rf$i8008_core.sv:703$1638_EN[7:0]$1657
     8/13: $1$memwr$\rf$i8008_core.sv:702$1637_EN[7:0]$1656
     9/13: $1$memwr$\rf$i8008_core.sv:701$1636_EN[7:0]$1655
    10/13: $1$memwr$\rf$i8008_core.sv:700$1635_EN[7:0]$1654
    11/13: $1$memwr$\rf$i8008_core.sv:709$1642_EN[7:0]$1663
    12/13: $1$memwr$\rf$i8008_core.sv:709$1642_DATA[7:0]$1662
    13/13: $1$memwr$\rf$i8008_core.sv:709$1642_ADDR[2:0]$1661
Creating decoders for process `\Stabilizer.$proc$i8008_core.sv:770$1155'.
Creating decoders for process `$paramod\Counter\WIDTH=s32'00000000000000000000000000000011.$proc$i8008_core.sv:811$1629'.
     1/1: $0\Q[2:0]
Creating decoders for process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.sv:0$1627'.
Creating decoders for process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.sv:740$1568'.
     1/35: $4$memwr$\rf$i8008_core.sv:756$1566_EN[13:0]$1624
     2/35: $4$memwr$\rf$i8008_core.sv:756$1566_DATA[13:0]$1623
     3/35: $4$memwr$\rf$i8008_core.sv:756$1566_ADDR[2:0]$1622
     4/35: $3$memwr$\rf$i8008_core.sv:754$1565_EN[13:0]$1618
     5/35: $3$memwr$\rf$i8008_core.sv:754$1565_DATA[13:0]$1617
     6/35: $3$memwr$\rf$i8008_core.sv:754$1565_ADDR[2:0]$1616
     7/35: $3$memwr$\rf$i8008_core.sv:756$1566_EN[13:0]$1621
     8/35: $3$memwr$\rf$i8008_core.sv:756$1566_DATA[13:0]$1620
     9/35: $3$memwr$\rf$i8008_core.sv:756$1566_ADDR[2:0]$1619
    10/35: $2$memwr$\rf$i8008_core.sv:752$1564_EN[13:0]$1606
    11/35: $2$memwr$\rf$i8008_core.sv:752$1564_DATA[13:0]$1605
    12/35: $2$memwr$\rf$i8008_core.sv:752$1564_ADDR[2:0]$1604
    13/35: $2$memwr$\rf$i8008_core.sv:756$1566_EN[13:0]$1612
    14/35: $2$memwr$\rf$i8008_core.sv:756$1566_DATA[13:0]$1611
    15/35: $2$memwr$\rf$i8008_core.sv:756$1566_ADDR[2:0]$1610
    16/35: $2$memwr$\rf$i8008_core.sv:754$1565_EN[13:0]$1609
    17/35: $2$memwr$\rf$i8008_core.sv:754$1565_DATA[13:0]$1608
    18/35: $2$memwr$\rf$i8008_core.sv:754$1565_ADDR[2:0]$1607
    19/35: $1$memwr$\rf$i8008_core.sv:749$1563_EN[13:0]$1593
    20/35: $1$memwr$\rf$i8008_core.sv:748$1562_EN[13:0]$1592
    21/35: $1$memwr$\rf$i8008_core.sv:747$1561_EN[13:0]$1591
    22/35: $1$memwr$\rf$i8008_core.sv:746$1560_EN[13:0]$1590
    23/35: $1$memwr$\rf$i8008_core.sv:745$1559_EN[13:0]$1589
    24/35: $1$memwr$\rf$i8008_core.sv:744$1558_EN[13:0]$1588
    25/35: $1$memwr$\rf$i8008_core.sv:743$1557_EN[13:0]$1587
    26/35: $1$memwr$\rf$i8008_core.sv:742$1556_EN[13:0]$1586
    27/35: $1$memwr$\rf$i8008_core.sv:756$1566_EN[13:0]$1602
    28/35: $1$memwr$\rf$i8008_core.sv:756$1566_DATA[13:0]$1601
    29/35: $1$memwr$\rf$i8008_core.sv:756$1566_ADDR[2:0]$1600
    30/35: $1$memwr$\rf$i8008_core.sv:754$1565_EN[13:0]$1599
    31/35: $1$memwr$\rf$i8008_core.sv:754$1565_DATA[13:0]$1598
    32/35: $1$memwr$\rf$i8008_core.sv:754$1565_ADDR[2:0]$1597
    33/35: $1$memwr$\rf$i8008_core.sv:752$1564_EN[13:0]$1596
    34/35: $1$memwr$\rf$i8008_core.sv:752$1564_DATA[13:0]$1595
    35/35: $1$memwr$\rf$i8008_core.sv:752$1564_ADDR[2:0]$1594
Creating decoders for process `\fsm_decoder.$proc$i8008_core.sv:669$1047'.
     1/2: $0\state[2:0]
     2/2: $0\cycle[1:0]
Creating decoders for process `\fsm_decoder.$proc$i8008_core.sv:0$987'.
     1/175: $5\ctrl_signals[33:29] [4]
     2/175: $90\ctrl_signals[6:6]
     3/175: $91\ctrl_signals[30:30]
     4/175: $73\ctrl_signals[39:38] [1]
     5/175: $68\ctrl_signals[7:3] [3]
     6/175: $86\ctrl_signals[7:6] [0]
     7/175: $85\ctrl_signals[4:4]
     8/175: $87\ctrl_signals[9:9]
     9/175: $88\ctrl_signals[33:33]
    10/175: $73\ctrl_signals[39:38] [0]
    11/175: $68\ctrl_signals[7:3] [1]
    12/175: $82\ctrl_signals[30:30]
    13/175: $84\ctrl_signals[39:38] [0]
    14/175: $83\ctrl_signals[32:32]
    15/175: $12\next_cycle[1:0]
    16/175: $12\next_state[2:0]
    17/175: $11\next_cycle[1:0]
    18/175: $11\next_state[2:0]
    19/175: $10\next_cycle[1:0]
    20/175: $10\next_state[2:0]
    21/175: $72\ctrl_signals[33:32] [1]
    22/175: $68\ctrl_signals[7:3] [4]
    23/175: $79\ctrl_signals[5:3] [0]
    24/175: $79\ctrl_signals[5:3] [1]
    25/175: $81\ctrl_signals[38:38]
    26/175: $78\ctrl_signals[1:0]
    27/175: $79\ctrl_signals[5:3] [2]
    28/175: $80\ctrl_signals[14:11] [0]
    29/175: $84\ctrl_signals[39:38] [1]
    30/175: $86\ctrl_signals[7:6] [1]
    31/175: $75\ctrl_signals[5:4] [0]
    32/175: $77\ctrl_signals[38:38]
    33/175: $74\ctrl_signals[1:0]
    34/175: $75\ctrl_signals[5:4] [1]
    35/175: $76\ctrl_signals[14:11] [0]
    36/175: $72\ctrl_signals[33:32] [0]
    37/175: $70\ctrl_signals[14:11]
    38/175: $80\ctrl_signals[14:11] [3:1]
    39/175: $67\ctrl_signals[1:0]
    40/175: $9\next_state[2:0]
    41/175: $9\next_cycle[1:0]
    42/175: $68\ctrl_signals[7:3] [0]
    43/175: $68\ctrl_signals[7:3] [2]
    44/175: $71\ctrl_signals[30:30]
    45/175: $69\ctrl_signals[9:9]
    46/175: $76\ctrl_signals[14:11] [3:1]
    47/175: $5\ctrl_signals[33:29] [3]
    48/175: $5\ctrl_signals[33:29] [1]
    49/175: $4\ctrl_signals[27:26] [1]
    50/175: $2\ctrl_signals[14:9] [0]
    51/175: $65\ctrl_signals[24:21] [2:0]
    52/175: $63\ctrl_signals[14:12]
    53/175: $66\ctrl_signals[30:30]
    54/175: $62\ctrl_signals[10:10]
    55/175: $64\ctrl_signals[17:17]
    56/175: $47\ctrl_signals[39:38] [1]
    57/175: $41\ctrl_signals[14:10] [1]
    58/175: $61\ctrl_signals[38:38]
    59/175: $45\ctrl_signals[30:29] [1]
    60/175: $59\ctrl_signals[39:38] [0]
    61/175: $58\ctrl_signals[30:29] [1]
    62/175: $58\ctrl_signals[30:29] [0]
    63/175: $8\next_state[2:0]
    64/175: $8\next_cycle[1:0]
    65/175: $47\ctrl_signals[39:38] [0]
    66/175: $54\ctrl_signals[5:3] [1]
    67/175: $53\ctrl_signals[1:0]
    68/175: $57\ctrl_signals[38:38]
    69/175: $54\ctrl_signals[5:3] [2]
    70/175: $55\ctrl_signals[14:11] [0]
    71/175: $56\ctrl_signals[30:30]
    72/175: $54\ctrl_signals[5:3] [0]
    73/175: $59\ctrl_signals[39:38] [1]
    74/175: $41\ctrl_signals[14:10] [0]
    75/175: $49\ctrl_signals[5:4] [0]
    76/175: $52\ctrl_signals[38:38]
    77/175: $48\ctrl_signals[1:0]
    78/175: $49\ctrl_signals[5:4] [1]
    79/175: $51\ctrl_signals[33:33]
    80/175: $50\ctrl_signals[14:11] [0]
    81/175: $45\ctrl_signals[30:29] [0]
    82/175: $46\ctrl_signals[33:33]
    83/175: $40\ctrl_signals[5:3] [0]
    84/175: $55\ctrl_signals[14:11] [3:1]
    85/175: $39\ctrl_signals[1:0]
    86/175: $7\next_state[2:0]
    87/175: $7\next_cycle[1:0]
    88/175: $41\ctrl_signals[14:10] [4:2]
    89/175: $50\ctrl_signals[14:11] [3:1]
    90/175: $44\ctrl_signals[27:27]
    91/175: $43\ctrl_signals[24:21]
    92/175: $42\ctrl_signals[17:17]
    93/175: $60\ctrl_signals[27:27]
    94/175: $40\ctrl_signals[5:3] [2:1]
    95/175: $5\ctrl_signals[33:29] [2]
    96/175: $5\ctrl_signals[33:29] [0]
    97/175: $4\ctrl_signals[27:26] [0]
    98/175: $3\ctrl_signals[24:16] [0]
    99/175: $2\ctrl_signals[14:9] [5:2]
   100/175: $2\ctrl_signals[14:9] [1]
   101/175: $1\ctrl_signals[7:0] [7:6]
   102/175: $1\ctrl_signals[7:0] [5:3]
   103/175: $1\ctrl_signals[7:0] [1:0]
   104/175: $89\ctrl_signals[4:4]
   105/175: $36\ctrl_signals[24:16] [0]
   106/175: $36\ctrl_signals[24:16] [1]
   107/175: $36\ctrl_signals[24:16] [4:2]
   108/175: $36\ctrl_signals[24:16] [7:5]
   109/175: $32\ctrl_signals[4:4]
   110/175: $33\ctrl_signals[6:6]
   111/175: $38\ctrl_signals[30:30]
   112/175: $37\ctrl_signals[26:26]
   113/175: $31\ctrl_signals[2:2]
   114/175: $35\ctrl_signals[14:12]
   115/175: $34\ctrl_signals[10:10]
   116/175: $14\ctrl_signals[39:38] [1]
   117/175: $9\ctrl_signals[14:9] [2]
   118/175: $6\next_state[2:0]
   119/175: $26\ctrl_signals[33:32] [1]
   120/175: $24\ctrl_signals[14:11] [0]
   121/175: $22\ctrl_signals[7:6] [0]
   122/175: $26\ctrl_signals[33:32] [0]
   123/175: $28\ctrl_signals[14:11] [0]
   124/175: $29\ctrl_signals[29:29]
   125/175: $30\ctrl_signals[38:38]
   126/175: $27\ctrl_signals[38:38]
   127/175: $25\ctrl_signals[29:29]
   128/175: $22\ctrl_signals[7:6] [1]
   129/175: $28\ctrl_signals[14:11] [3:1]
   130/175: $23\ctrl_signals[9:9]
   131/175: $24\ctrl_signals[14:11] [3:1]
   132/175: $21\ctrl_signals[4:4]
   133/175: $8\ctrl_signals[7:0] [5]
   134/175: $9\ctrl_signals[14:9] [1]
   135/175: $5\next_cycle[1:0]
   136/175: $4\next_cycle[1:0]
   137/175: $4\next_state[2:0]
   138/175: $3\next_state[2:0]
   139/175: $3\next_cycle[1:0]
   140/175: $20\ctrl_signals[39:39]
   141/175: $16\ctrl_signals[9:9]
   142/175: $15\ctrl_signals[7:7]
   143/175: $18\ctrl_signals[31:31]
   144/175: $17\ctrl_signals[29:29]
   145/175: $19\ctrl_signals[35:35]
   146/175: $12\ctrl_signals[33:29] [2]
   147/175: $12\ctrl_signals[33:29] [1]
   148/175: $9\ctrl_signals[14:9] [0]
   149/175: $9\ctrl_signals[14:9] [5:3]
   150/175: $8\ctrl_signals[7:0] [7]
   151/175: $12\ctrl_signals[33:29] [0]
   152/175: $6\next_cycle[1:0]
   153/175: $5\next_state[2:0]
   154/175: $8\ctrl_signals[7:0] [1:0]
   155/175: $8\ctrl_signals[7:0] [4]
   156/175: $12\ctrl_signals[33:29] [4:3]
   157/175: $2\next_state[2:0]
   158/175: $2\next_cycle[1:0]
   159/175: $14\ctrl_signals[39:38] [0]
   160/175: $13\ctrl_signals[35:35]
   161/175: $8\ctrl_signals[7:0] [3]
   162/175: $11\ctrl_signals[26:26]
   163/175: $10\ctrl_signals[24:16]
   164/175: $8\ctrl_signals[7:0] [6]
   165/175: $8\ctrl_signals[7:0] [2]
   166/175: $1\next_state[2:0]
   167/175: $1\next_cycle[1:0]
   168/175: $7\ctrl_signals[39:38]
   169/175: $6\ctrl_signals[35:35]
   170/175: $3\ctrl_signals[24:16] [1]
   171/175: $3\ctrl_signals[24:16] [4:2]
   172/175: $65\ctrl_signals[24:21] [3]
   173/175: $1\ctrl_signals[7:0] [2]
   174/175: $36\ctrl_signals[24:16] [8]
   175/175: $3\ctrl_signals[24:16] [8:5]
Creating decoders for process `\fsm_decoder.$proc$i8008_core.sv:0$983'.
     1/1: $1\CF[0:0]
Creating decoders for process `\ALU.$proc$i8008_core.sv:0$958'.
     1/8: $3\flag_in[3:3]
     2/8: $3\d[7:0]
     3/8: $2\NA[7:0]
     4/8: $2\flag_in[3:3]
     5/8: $2\d[7:0]
     6/8: $1\flag_in[3:3]
     7/8: $1\d[7:0]
     8/8: $1\NA[7:0]
Creating decoders for process `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.$proc$i8008_core.sv:0$1544'.
     1/8: $7\bus[7:0]
     2/8: $6\bus[7:0]
     3/8: $5\bus[7:0]
     4/8: $4\bus[7:0] [7:4]
     5/8: $4\bus[7:0] [3:0]
     6/8: $3\bus[7:0]
     7/8: $2\bus[7:0]
     8/8: $1\bus[7:0]
Creating decoders for process `\top.$proc$i8008_core.sv:0$943'.

3.3.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.\rs' from process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.sv:0$1667'.
No latch inferred for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.\rs' from process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.sv:0$1627'.
No latch inferred for signal `\fsm_decoder.\ctrl_signals' from process `\fsm_decoder.$proc$i8008_core.sv:0$987'.
No latch inferred for signal `\fsm_decoder.\next_cycle' from process `\fsm_decoder.$proc$i8008_core.sv:0$987'.
No latch inferred for signal `\fsm_decoder.\next_state' from process `\fsm_decoder.$proc$i8008_core.sv:0$987'.
No latch inferred for signal `\fsm_decoder.\CF' from process `\fsm_decoder.$proc$i8008_core.sv:0$983'.
No latch inferred for signal `\ALU.\d' from process `\ALU.$proc$i8008_core.sv:0$958'.
No latch inferred for signal `\ALU.\flag_in' from process `\ALU.$proc$i8008_core.sv:0$958'.
No latch inferred for signal `\ALU.\NA' from process `\ALU.$proc$i8008_core.sv:0$958'.
No latch inferred for signal `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.\bus' from process `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.$proc$i8008_core.sv:0$1544'.
No latch inferred for signal `\top.\led' from process `\top.$proc$i8008_core.sv:0$943'.

3.3.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1414$1404'.
  created $adff cell `$procdff$4097' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1353$1397'.
  created $dff cell `$procdff$4098' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1273$1393'.
  created $adff cell `$procdff$4099' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1212$1386'.
  created $dff cell `$procdff$4100' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1138$1383'.
  created $adff cell `$procdff$4101' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1088$1380'.
  created $dff cell `$procdff$4102' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1017$1377'.
  created $adff cell `$procdff$4103' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:967$1374'.
  created $dff cell `$procdff$4104' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:922$1372'.
  created $dff cell `$procdff$4105' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:882$1370'.
  created $dff cell `$procdff$4106' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:803$1366'.
  created $adff cell `$procdff$4107' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:742$1359'.
  created $dff cell `$procdff$4108' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:662$1355'.
  created $adff cell `$procdff$4109' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:601$1348'.
  created $dff cell `$procdff$4110' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:527$1345'.
  created $adff cell `$procdff$4111' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:477$1342'.
  created $dff cell `$procdff$4112' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:406$1339'.
  created $adff cell `$procdff$4113' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:356$1336'.
  created $dff cell `$procdff$4114' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:311$1334'.
  created $dff cell `$procdff$4115' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:271$1332'.
  created $dff cell `$procdff$4116' with positive edge clock.
Creating register for signal `$paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100.\Q' using process `$paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100.$proc$i8008_core.sv:797$1670'.
  created $dff cell `$procdff$4117' with positive edge clock.
Creating register for signal `$paramod\Register\WIDTH=s32'00000000000000000000000000001000.\Q' using process `$paramod\Register\WIDTH=s32'00000000000000000000000000001000.$proc$i8008_core.sv:783$1669'.
  created $dff cell `$procdff$4118' with positive edge clock.
Creating register for signal `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$memwr$\rf$i8008_core.sv:700$1635_EN' using process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.sv:698$1643'.
  created $dff cell `$procdff$4119' with positive edge clock.
Creating register for signal `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$memwr$\rf$i8008_core.sv:701$1636_EN' using process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.sv:698$1643'.
  created $dff cell `$procdff$4120' with positive edge clock.
Creating register for signal `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$memwr$\rf$i8008_core.sv:702$1637_EN' using process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.sv:698$1643'.
  created $dff cell `$procdff$4121' with positive edge clock.
Creating register for signal `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$memwr$\rf$i8008_core.sv:703$1638_EN' using process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.sv:698$1643'.
  created $dff cell `$procdff$4122' with positive edge clock.
Creating register for signal `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$memwr$\rf$i8008_core.sv:704$1639_EN' using process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.sv:698$1643'.
  created $dff cell `$procdff$4123' with positive edge clock.
Creating register for signal `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$memwr$\rf$i8008_core.sv:705$1640_EN' using process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.sv:698$1643'.
  created $dff cell `$procdff$4124' with positive edge clock.
Creating register for signal `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$memwr$\rf$i8008_core.sv:706$1641_EN' using process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.sv:698$1643'.
  created $dff cell `$procdff$4125' with positive edge clock.
Creating register for signal `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$memwr$\rf$i8008_core.sv:709$1642_ADDR' using process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.sv:698$1643'.
  created $dff cell `$procdff$4126' with positive edge clock.
Creating register for signal `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$memwr$\rf$i8008_core.sv:709$1642_DATA' using process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.sv:698$1643'.
  created $dff cell `$procdff$4127' with positive edge clock.
Creating register for signal `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$memwr$\rf$i8008_core.sv:709$1642_EN' using process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.sv:698$1643'.
  created $dff cell `$procdff$4128' with positive edge clock.
Creating register for signal `\Stabilizer.\Q' using process `\Stabilizer.$proc$i8008_core.sv:770$1155'.
  created $dff cell `$procdff$4129' with positive edge clock.
Creating register for signal `\Stabilizer.\temp' using process `\Stabilizer.$proc$i8008_core.sv:770$1155'.
  created $dff cell `$procdff$4130' with positive edge clock.
Creating register for signal `$paramod\Counter\WIDTH=s32'00000000000000000000000000000011.\Q' using process `$paramod\Counter\WIDTH=s32'00000000000000000000000000000011.$proc$i8008_core.sv:811$1629'.
  created $dff cell `$procdff$4131' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.sv:742$1556_EN' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.sv:740$1568'.
  created $dff cell `$procdff$4132' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.sv:743$1557_EN' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.sv:740$1568'.
  created $dff cell `$procdff$4133' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.sv:744$1558_EN' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.sv:740$1568'.
  created $dff cell `$procdff$4134' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.sv:745$1559_EN' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.sv:740$1568'.
  created $dff cell `$procdff$4135' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.sv:746$1560_EN' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.sv:740$1568'.
  created $dff cell `$procdff$4136' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.sv:747$1561_EN' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.sv:740$1568'.
  created $dff cell `$procdff$4137' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.sv:748$1562_EN' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.sv:740$1568'.
  created $dff cell `$procdff$4138' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.sv:749$1563_EN' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.sv:740$1568'.
  created $dff cell `$procdff$4139' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.sv:752$1564_ADDR' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.sv:740$1568'.
  created $dff cell `$procdff$4140' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.sv:752$1564_DATA' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.sv:740$1568'.
  created $dff cell `$procdff$4141' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.sv:752$1564_EN' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.sv:740$1568'.
  created $dff cell `$procdff$4142' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.sv:754$1565_ADDR' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.sv:740$1568'.
  created $dff cell `$procdff$4143' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.sv:754$1565_DATA' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.sv:740$1568'.
  created $dff cell `$procdff$4144' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.sv:754$1565_EN' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.sv:740$1568'.
  created $dff cell `$procdff$4145' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.sv:756$1566_ADDR' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.sv:740$1568'.
  created $dff cell `$procdff$4146' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.sv:756$1566_DATA' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.sv:740$1568'.
  created $dff cell `$procdff$4147' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.sv:756$1566_EN' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.sv:740$1568'.
  created $dff cell `$procdff$4148' with positive edge clock.
Creating register for signal `\fsm_decoder.\state' using process `\fsm_decoder.$proc$i8008_core.sv:669$1047'.
  created $dff cell `$procdff$4149' with positive edge clock.
Creating register for signal `\fsm_decoder.\cycle' using process `\fsm_decoder.$proc$i8008_core.sv:669$1047'.
  created $dff cell `$procdff$4150' with positive edge clock.

3.3.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.3.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SB_DFFNES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1407'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1414$1404'.
Removing empty process `SB_DFFNES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1414$1404'.
Removing empty process `SB_DFFNESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1403'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1353$1397'.
Removing empty process `SB_DFFNESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1353$1397'.
Removing empty process `SB_DFFNER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1396'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1273$1393'.
Removing empty process `SB_DFFNER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1273$1393'.
Removing empty process `SB_DFFNESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1392'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1212$1386'.
Removing empty process `SB_DFFNESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1212$1386'.
Removing empty process `SB_DFFNS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1385'.
Removing empty process `SB_DFFNS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1138$1383'.
Removing empty process `SB_DFFNSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1382'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1088$1380'.
Removing empty process `SB_DFFNSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1088$1380'.
Removing empty process `SB_DFFNR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1379'.
Removing empty process `SB_DFFNR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1017$1377'.
Removing empty process `SB_DFFNSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1376'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:967$1374'.
Removing empty process `SB_DFFNSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:967$1374'.
Removing empty process `SB_DFFNE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1373'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:922$1372'.
Removing empty process `SB_DFFNE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:922$1372'.
Removing empty process `SB_DFFN.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1371'.
Removing empty process `SB_DFFN.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:882$1370'.
Removing empty process `SB_DFFES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1369'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:803$1366'.
Removing empty process `SB_DFFES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:803$1366'.
Removing empty process `SB_DFFESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1365'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:742$1359'.
Removing empty process `SB_DFFESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:742$1359'.
Removing empty process `SB_DFFER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1358'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:662$1355'.
Removing empty process `SB_DFFER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:662$1355'.
Removing empty process `SB_DFFESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1354'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:601$1348'.
Removing empty process `SB_DFFESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:601$1348'.
Removing empty process `SB_DFFS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1347'.
Removing empty process `SB_DFFS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:527$1345'.
Removing empty process `SB_DFFSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1344'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:477$1342'.
Removing empty process `SB_DFFSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:477$1342'.
Removing empty process `SB_DFFR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1341'.
Removing empty process `SB_DFFR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:406$1339'.
Removing empty process `SB_DFFSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1338'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:356$1336'.
Removing empty process `SB_DFFSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:356$1336'.
Removing empty process `SB_DFFE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1335'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:311$1334'.
Removing empty process `SB_DFFE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:311$1334'.
Removing empty process `SB_DFF.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$1333'.
Removing empty process `SB_DFF.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:271$1332'.
Found and cleaned up 2 empty switches in `$paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100.$proc$i8008_core.sv:797$1670'.
Removing empty process `$paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100.$proc$i8008_core.sv:797$1670'.
Found and cleaned up 2 empty switches in `$paramod\Register\WIDTH=s32'00000000000000000000000000001000.$proc$i8008_core.sv:783$1669'.
Removing empty process `$paramod\Register\WIDTH=s32'00000000000000000000000000001000.$proc$i8008_core.sv:783$1669'.
Removing empty process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.sv:0$1667'.
Found and cleaned up 2 empty switches in `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.sv:698$1643'.
Removing empty process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.sv:698$1643'.
Removing empty process `Stabilizer.$proc$i8008_core.sv:770$1155'.
Found and cleaned up 4 empty switches in `$paramod\Counter\WIDTH=s32'00000000000000000000000000000011.$proc$i8008_core.sv:811$1629'.
Removing empty process `$paramod\Counter\WIDTH=s32'00000000000000000000000000000011.$proc$i8008_core.sv:811$1629'.
Removing empty process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.sv:0$1627'.
Found and cleaned up 4 empty switches in `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.sv:740$1568'.
Removing empty process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.sv:740$1568'.
Found and cleaned up 1 empty switch in `\fsm_decoder.$proc$i8008_core.sv:669$1047'.
Removing empty process `fsm_decoder.$proc$i8008_core.sv:669$1047'.
Found and cleaned up 26 empty switches in `\fsm_decoder.$proc$i8008_core.sv:0$987'.
Removing empty process `fsm_decoder.$proc$i8008_core.sv:0$987'.
Found and cleaned up 1 empty switch in `\fsm_decoder.$proc$i8008_core.sv:0$983'.
Removing empty process `fsm_decoder.$proc$i8008_core.sv:0$983'.
Found and cleaned up 3 empty switches in `\ALU.$proc$i8008_core.sv:0$958'.
Removing empty process `ALU.$proc$i8008_core.sv:0$958'.
Found and cleaned up 7 empty switches in `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.$proc$i8008_core.sv:0$1544'.
Removing empty process `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.$proc$i8008_core.sv:0$1544'.
Removing empty process `top.$proc$i8008_core.sv:0$943'.
Cleaned up 70 empty switches.

3.3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100.
Optimizing module $paramod\Register\WIDTH=s32'00000000000000000000000000001000.
Optimizing module $paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.
Optimizing module Stabilizer.
Optimizing module $paramod\Counter\WIDTH=s32'00000000000000000000000000000011.
Optimizing module $paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.
Optimizing module fsm_decoder.
<suppressed ~167 debug messages>
Optimizing module ALU.
<suppressed ~7 debug messages>
Optimizing module $paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.
<suppressed ~1 debug messages>
Optimizing module top.

3.4. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100.
Deleting now unused module $paramod\Register\WIDTH=s32'00000000000000000000000000001000.
Deleting now unused module $paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.
Deleting now unused module Stabilizer.
Deleting now unused module $paramod\Counter\WIDTH=s32'00000000000000000000000000000011.
Deleting now unused module $paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.
Deleting now unused module fsm_decoder.
Deleting now unused module ALU.
Deleting now unused module $paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.
<suppressed ~13 debug messages>

3.5. Executing TRIBUF pass.

3.6. Executing DEMINOUT pass (demote inout ports to input or output).

3.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~60 debug messages>

3.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 59 unused cells and 539 unused wires.
<suppressed ~67 debug messages>

3.9. Executing CHECK pass (checking for obvious problems).
Checking module top...
Warning: Wire top.\uart_tx is used but has no driver.
Warning: Wire top.\display_sel [3] is used but has no driver.
Warning: Wire top.\display_sel [2] is used but has no driver.
Warning: Wire top.\display_sel [1] is used but has no driver.
Warning: Wire top.\display_sel [0] is used but has no driver.
Warning: Wire top.\display [7] is used but has no driver.
Warning: Wire top.\display [6] is used but has no driver.
Warning: Wire top.\display [5] is used but has no driver.
Warning: Wire top.\display [4] is used but has no driver.
Warning: Wire top.\display [3] is used but has no driver.
Warning: Wire top.\display [2] is used but has no driver.
Warning: Wire top.\display [1] is used but has no driver.
Warning: Wire top.\display [0] is used but has no driver.
Warning: Wire top.\base_led [7] is used but has no driver.
Warning: Wire top.\base_led [6] is used but has no driver.
Warning: Wire top.\base_led [5] is used but has no driver.
Warning: Wire top.\base_led [4] is used but has no driver.
Warning: Wire top.\base_led [3] is used but has no driver.
Warning: Wire top.\base_led [2] is used but has no driver.
Warning: Wire top.\base_led [1] is used but has no driver.
Warning: Wire top.\base_led [0] is used but has no driver.
Warning: Wire top.\DUT.DBR_in [7] is used but has no driver.
Warning: Wire top.\DUT.DBR_in [6] is used but has no driver.
Warning: Wire top.\DUT.DBR_in [5] is used but has no driver.
Warning: Wire top.\DUT.DBR_in [4] is used but has no driver.
Warning: Wire top.\DUT.DBR_in [3] is used but has no driver.
Warning: Wire top.\DUT.DBR_in [2] is used but has no driver.
Warning: Wire top.\DUT.DBR_in [1] is used but has no driver.
Warning: Wire top.\DUT.DBR_in [0] is used but has no driver.
Found and reported 29 problems.

3.10. Executing OPT pass (performing simple optimizations).

3.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~5550 debug messages>
Removed a total of 1850 cells.

3.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3417.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2040.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2689.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3419.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3421.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2179.
    dead port 1/2 on $mux $flatten\DUT.$procmux$4011.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2071.
    dead port 1/2 on $mux $flatten\DUT.$procmux$4014.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2508.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2510.
    dead port 1/2 on $mux $flatten\DUT.$procmux$4092.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2809.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2042.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3435.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3211.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3437.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2811.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2200.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2255.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3133.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2257.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2433.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2518.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3451.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2520.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3453.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2729.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3135.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3222.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2731.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3231.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2824.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3233.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2826.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3467.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3469.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2528.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2530.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2080.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3480.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2267.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2269.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2538.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2030.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2839.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2406.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3491.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2540.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3503.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3107.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2841.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3505.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3507.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3520.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3522.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3247.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3249.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3524.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3537.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3539.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2209.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3541.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2279.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2550.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2089.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2281.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2854.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2442.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2856.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2743.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2032.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3553.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2745.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3146.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3109.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2091.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3555.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3148.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2560.
    dead port 1/2 on $mux $flatten\DUT.$procmux$4017.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2866.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2568.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2570.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2050.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2290.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3263.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3265.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2052.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2876.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3567.
    dead port 1/2 on $mux $flatten\DUT.$procmux$4020.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3569.
    dead port 1/2 on $mux $flatten\DUT.$procmux$4026.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3578.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2292.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3580.
    dead port 1/2 on $mux $flatten\DUT.$procmux$4029.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3590.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2189.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2580.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3592.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2451.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3602.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2886.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3604.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3614.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2219.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2701.
    dead port 1/2 on $mux $flatten\DUT.$procmux$4032.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3616.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1994.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3625.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2754.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2703.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3627.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2100.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3637.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3279.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1996.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2300.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3639.
    dead port 1/2 on $mux $flatten\DUT.$procmux$4035.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2302.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2221.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2589.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2898.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3281.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2900.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3650.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2102.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2756.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2591.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3661.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2177.
    dead port 1/2 on $mux $flatten\DUT.$procmux$4038.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2910.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3172.
    dead port 1/2 on $mux $flatten\DUT.$procmux$4044.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2313.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2395.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3174.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3672.
    dead port 1/2 on $mux $flatten\DUT.$procmux$4047.
    dead port 1/2 on $mux $flatten\DUT.$procmux$4050.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2315.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2460.
    dead port 1/2 on $mux $flatten\DUT.$procmux$4053.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2920.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3683.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2600.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3295.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2397.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2002.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2111.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3297.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2602.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2766.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3694.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2930.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3312.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2004.
    dead port 1/2 on $mux $flatten\DUT.$procmux$4059.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2113.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2326.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3705.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3314.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3714.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3716.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2415.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3728.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3316.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2328.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3730.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2060.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2940.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2122.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3732.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3331.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2191.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2611.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3333.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2062.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3335.
    dead port 1/2 on $mux $flatten\DUT.$procmux$4062.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3743.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2124.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2613.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2231.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3350.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2953.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3754.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2339.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3352.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2955.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2126.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2233.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2341.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3354.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3765.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2471.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2623.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2965.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3776.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2625.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2473.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2135.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3120.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3185.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3787.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2779.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2975.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2137.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3187.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2352.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3798.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2781.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3368.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2635.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3370.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2985.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2354.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3809.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2993.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2013.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2995.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2637.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3122.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2687.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3820.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2139.
    dead port 1/2 on $mux $flatten\DUT.$procmux$4065.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2149.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3005.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3842.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2715.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2365.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2647.
    dead port 1/2 on $mux $flatten\DUT.$procmux$4005.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3853.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2243.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2151.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3384.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2367.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3864.
    dead port 1/2 on $mux $flatten\DUT.$procmux$4071.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3386.
    dead port 1/2 on $mux $flatten\DUT.$procmux$4074.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2153.
    dead port 1/2 on $mux $flatten\DUT.$procmux$4077.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2163.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2717.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3055.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3057.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2659.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3902.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2794.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3904.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3198.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2661.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3068.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3920.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2376.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3922.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3070.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2498.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2796.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1788.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1791.
    dead port 2/2 on $mux $flatten\DUT.\Stack.$procmux$1794.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1800.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1803.
    dead port 2/2 on $mux $flatten\DUT.\Stack.$procmux$1806.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1812.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1815.
    dead port 2/2 on $mux $flatten\DUT.\Stack.$procmux$1818.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1824.
    dead port 2/2 on $mux $flatten\DUT.\Stack.$procmux$1827.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1833.
    dead port 2/2 on $mux $flatten\DUT.\Stack.$procmux$1836.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1842.
    dead port 2/2 on $mux $flatten\DUT.\Stack.$procmux$1845.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1851.
    dead port 2/2 on $mux $flatten\DUT.\Stack.$procmux$1854.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1860.
    dead port 2/2 on $mux $flatten\DUT.\Stack.$procmux$1863.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$1869.
    dead port 2/2 on $mux $flatten\DUT.\Stack.$procmux$1872.
    dead port 2/2 on $mux $flatten\DUT.\Stack.$procmux$1878.
    dead port 2/2 on $mux $flatten\DUT.\Stack.$procmux$1884.
    dead port 2/2 on $mux $flatten\DUT.\Stack.$procmux$1890.
    dead port 2/2 on $mux $flatten\DUT.\Stack.$procmux$1896.
    dead port 2/2 on $mux $flatten\DUT.\Stack.$procmux$1902.
    dead port 2/2 on $mux $flatten\DUT.\Stack.$procmux$1908.
    dead port 2/2 on $mux $flatten\DUT.\Stack.$procmux$1914.
    dead port 2/2 on $mux $flatten\DUT.\Stack.$procmux$1920.
    dead port 2/2 on $mux $flatten\DUT.\Stack.$procmux$1926.
    dead port 1/2 on $mux $flatten\DUT.$procmux$4083.
    dead port 1/2 on $mux $flatten\DUT.\Unit.$procmux$3944.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2165.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2245.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3200.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2424.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3081.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2500.
    dead port 1/2 on $mux $flatten\DUT.\Unit.$procmux$3956.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3083.
    dead port 1/2 on $mux $flatten\DUT.$procmux$4086.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3400.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2167.
    dead port 1/2 on $mux $flatten\DUT.$procmux$4008.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2022.
    dead port 1/2 on $mux $flatten\DUT.\Unit.$procmux$3968.
    dead port 2/2 on $mux $flatten\DUT.\Unit.$procmux$3979.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3402.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2385.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2673.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3094.
    dead port 2/2 on $mux $flatten\DUT.\Unit.$procmux$3990.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3096.
    dead port 2/2 on $mux $flatten\DUT.\rf.$procmux$1729.
    dead port 2/2 on $mux $flatten\DUT.\rf.$procmux$1735.
    dead port 2/2 on $mux $flatten\DUT.\rf.$procmux$1741.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2675.
Removed 324 multiplexer ports.
<suppressed ~60 debug messages>

3.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2949: { $flatten\DUT.\Brain.$procmux$2685_CTRL $auto$opt_reduce.cc:134:opt_pmux$4171 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3737: $auto$opt_reduce.cc:134:opt_pmux$4173
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3272: { $auto$opt_reduce.cc:134:opt_pmux$4175 $flatten\DUT.\Brain.$eq$i8008_core.sv:285$988_Y }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2880: { $flatten\DUT.\Brain.$procmux$2011_CMP $auto$opt_reduce.cc:134:opt_pmux$4177 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3748: { $flatten\DUT.\Brain.$procmux$2405_CTRL $auto$opt_reduce.cc:134:opt_pmux$4179 $flatten\DUT.\Brain.$procmux$2009_CMP $flatten\DUT.\Brain.$procmux$1995_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2418: { $flatten\DUT.\Brain.$procmux$2178_CTRL $auto$opt_reduce.cc:134:opt_pmux$4181 $flatten\DUT.\Brain.$procmux$1995_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3167: { $flatten\DUT.\Brain.$eq$i8008_core.sv:285$988_Y $auto$opt_reduce.cc:134:opt_pmux$4183 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3759: { $flatten\DUT.\Brain.$procmux$2009_CMP $auto$opt_reduce.cc:134:opt_pmux$4185 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2057: $auto$opt_reduce.cc:134:opt_pmux$4187
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2400: { $flatten\DUT.\Brain.$procmux$2405_CTRL $flatten\DUT.\Brain.$procmux$2011_CMP $auto$opt_reduce.cc:134:opt_pmux$4189 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2959: { $flatten\DUT.\Brain.$procmux$2009_CMP $auto$opt_reduce.cc:134:opt_pmux$4191 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3361: { $flatten\DUT.\Brain.$procmux$3246_CTRL $auto$opt_reduce.cc:134:opt_pmux$4193 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2194: { $flatten\DUT.\Brain.$procmux$2009_CMP $auto$opt_reduce.cc:134:opt_pmux$4195 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3460: $auto$opt_reduce.cc:134:opt_pmux$4197
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2065: { $flatten\DUT.\Brain.$procmux$2405_CTRL $flatten\DUT.\Brain.$procmux$2011_CMP $flatten\DUT.\Brain.$procmux$2178_CTRL $auto$opt_reduce.cc:134:opt_pmux$4199 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2969: { $auto$opt_reduce.cc:134:opt_pmux$4201 $flatten\DUT.\Brain.$procmux$1995_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3781: { $auto$opt_reduce.cc:134:opt_pmux$4203 $flatten\DUT.\Brain.$procmux$2178_CTRL $flatten\DUT.\Brain.$procmux$2009_CMP $flatten\DUT.\Brain.$procmux$1995_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2525: $auto$opt_reduce.cc:134:opt_pmux$4205
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2240: $auto$opt_reduce.cc:134:opt_pmux$4207
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2894: { $flatten\DUT.\Brain.$procmux$2685_CTRL $auto$opt_reduce.cc:134:opt_pmux$4209 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2544: { $flatten\DUT.\Brain.$procmux$2178_CTRL $auto$opt_reduce.cc:134:opt_pmux$4211 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3792: { $auto$opt_reduce.cc:134:opt_pmux$4215 $flatten\DUT.\Brain.$procmux$2009_CMP $auto$opt_reduce.cc:134:opt_pmux$4213 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2454: { $flatten\DUT.\Brain.$procmux$2009_CMP $auto$opt_reduce.cc:134:opt_pmux$4217 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2850: { $flatten\DUT.\Brain.$procmux$2685_CTRL $auto$opt_reduce.cc:134:opt_pmux$4219 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2979: { $auto$opt_reduce.cc:134:opt_pmux$4221 $flatten\DUT.\Brain.$procmux$1995_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3803: { $flatten\DUT.\Brain.$procmux$2178_CTRL $auto$opt_reduce.cc:134:opt_pmux$4223 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3193: { $flatten\DUT.\Brain.$eq$i8008_core.sv:285$988_Y $auto$opt_reduce.cc:134:opt_pmux$4225 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2790: $auto$opt_reduce.cc:134:opt_pmux$4227
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3115: { $flatten\DUT.\Brain.$eq$i8008_core.sv:285$988_Y $auto$opt_reduce.cc:134:opt_pmux$4229 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3814: { $flatten\DUT.\Brain.$procmux$2011_CMP $auto$opt_reduce.cc:134:opt_pmux$4231 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3428: { $flatten\DUT.\Brain.$procmux$3243_CMP $flatten\DUT.\Brain.$procmux$3242_CTRL $auto$opt_reduce.cc:134:opt_pmux$4233 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3444: { $flatten\DUT.\Brain.$procmux$3246_CTRL $flatten\DUT.\Brain.$procmux$3105_CTRL $auto$opt_reduce.cc:134:opt_pmux$4235 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3377: { $flatten\DUT.\Brain.$procmux$3246_CTRL $auto$opt_reduce.cc:134:opt_pmux$4237 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2999: { $flatten\DUT.\Brain.$procmux$2405_CTRL $flatten\DUT.\Brain.$procmux$2011_CMP $auto$opt_reduce.cc:134:opt_pmux$4239 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2037: $auto$opt_reduce.cc:134:opt_pmux$4241
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3836: { $auto$opt_reduce.cc:134:opt_pmux$4243 $flatten\DUT.\Brain.$procmux$1995_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3128: { $flatten\DUT.\Brain.$eq$i8008_core.sv:285$988_Y $auto$opt_reduce.cc:134:opt_pmux$4245 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3644: { $flatten\DUT.\Brain.$procmux$2178_CTRL $auto$opt_reduce.cc:134:opt_pmux$4247 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2016: { $auto$opt_reduce.cc:134:opt_pmux$4249 $flatten\DUT.\Brain.$procmux$2009_CMP $flatten\DUT.\Brain.$procmux$1995_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3847: { $auto$opt_reduce.cc:134:opt_pmux$4251 $flatten\DUT.\Brain.$procmux$2009_CMP $flatten\DUT.\Brain.$procmux$1995_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3216: { $flatten\DUT.\Brain.$procmux$2009_CMP $auto$opt_reduce.cc:134:opt_pmux$4253 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2655: $auto$opt_reduce.cc:134:opt_pmux$4255
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3858: { $auto$opt_reduce.cc:134:opt_pmux$4257 $flatten\DUT.\Brain.$procmux$1995_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3256: { $flatten\DUT.\Brain.$procmux$3246_CTRL $auto$opt_reduce.cc:134:opt_pmux$4261 $auto$opt_reduce.cc:134:opt_pmux$4259 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2436: { $flatten\DUT.\Brain.$procmux$2405_CTRL $flatten\DUT.\Brain.$procmux$2011_CMP $auto$opt_reduce.cc:134:opt_pmux$4263 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2820: { $flatten\DUT.\Brain.$procmux$2686_CTRL $auto$opt_reduce.cc:134:opt_pmux$4265 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3288: { $auto$opt_reduce.cc:134:opt_pmux$4269 $auto$opt_reduce.cc:134:opt_pmux$4267 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2370: { $flatten\DUT.\Brain.$procmux$2178_CTRL $auto$opt_reduce.cc:134:opt_pmux$4271 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2904: { $flatten\DUT.\Brain.$procmux$2405_CTRL $flatten\DUT.\Brain.$procmux$2011_CMP $auto$opt_reduce.cc:134:opt_pmux$4273 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3655: { $auto$opt_reduce.cc:134:opt_pmux$4275 $flatten\DUT.\Brain.$procmux$1995_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3393: $auto$opt_reduce.cc:134:opt_pmux$4277
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3102: { $auto$opt_reduce.cc:134:opt_pmux$4281 $auto$opt_reduce.cc:134:opt_pmux$4279 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2228: $auto$opt_reduce.cc:134:opt_pmux$4283
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2739: { $flatten\DUT.\Brain.$procmux$2686_CTRL $auto$opt_reduce.cc:134:opt_pmux$4285 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3063: { $flatten\DUT.\Brain.$procmux$3105_CTRL $auto$opt_reduce.cc:134:opt_pmux$4287 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2760: { $auto$opt_reduce.cc:134:opt_pmux$4289 $flatten\DUT.\Brain.$procmux$1995_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2711: { $flatten\DUT.\Brain.$procmux$2685_CTRL $auto$opt_reduce.cc:134:opt_pmux$4291 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3915: { $flatten\DUT.\Brain.$eq$i8008_core.sv:285$988_Y $auto$opt_reduce.cc:134:opt_pmux$4293 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2725: { $auto$opt_reduce.cc:134:opt_pmux$4295 $flatten\DUT.\Brain.$procmux$2684_CTRL }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3666: { $flatten\DUT.\Brain.$procmux$2178_CTRL $flatten\DUT.\Brain.$procmux$2009_CMP $auto$opt_reduce.cc:134:opt_pmux$4297 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3240: { $auto$opt_reduce.cc:134:opt_pmux$4299 $flatten\DUT.\Brain.$eq$i8008_core.sv:285$988_Y }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3076: { $auto$opt_reduce.cc:134:opt_pmux$4303 $auto$opt_reduce.cc:134:opt_pmux$4301 }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$1785:
      Old ports: A=14'00000000000000, B=14'11111111111111, Y=$flatten\DUT.\Stack.$procmux$1785_Y
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\Stack.$procmux$1785_Y [0]
      New connections: $flatten\DUT.\Stack.$procmux$1785_Y [13:1] = { $flatten\DUT.\Stack.$procmux$1785_Y [0] $flatten\DUT.\Stack.$procmux$1785_Y [0] $flatten\DUT.\Stack.$procmux$1785_Y [0] $flatten\DUT.\Stack.$procmux$1785_Y [0] $flatten\DUT.\Stack.$procmux$1785_Y [0] $flatten\DUT.\Stack.$procmux$1785_Y [0] $flatten\DUT.\Stack.$procmux$1785_Y [0] $flatten\DUT.\Stack.$procmux$1785_Y [0] $flatten\DUT.\Stack.$procmux$1785_Y [0] $flatten\DUT.\Stack.$procmux$1785_Y [0] $flatten\DUT.\Stack.$procmux$1785_Y [0] $flatten\DUT.\Stack.$procmux$1785_Y [0] $flatten\DUT.\Stack.$procmux$1785_Y [0] }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2554: { $flatten\DUT.\Brain.$procmux$2405_CTRL $flatten\DUT.\Brain.$procmux$2011_CMP $auto$opt_reduce.cc:134:opt_pmux$4305 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2835: { $auto$opt_reduce.cc:134:opt_pmux$4307 $flatten\DUT.\Brain.$procmux$2684_CTRL }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2203: { $flatten\DUT.\Brain.$procmux$2009_CMP $auto$opt_reduce.cc:134:opt_pmux$4309 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3677: { $auto$opt_reduce.cc:134:opt_pmux$4311 $flatten\DUT.\Brain.$procmux$2009_CMP $flatten\DUT.\Brain.$procmux$1995_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2445: { $flatten\DUT.\Brain.$procmux$2178_CTRL $auto$opt_reduce.cc:134:opt_pmux$4313 $flatten\DUT.\Brain.$procmux$1995_CMP }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$1821:
      Old ports: A=14'00000000000000, B=14'11111100000000, Y=$flatten\DUT.\Stack.$procmux$1821_Y
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\Stack.$procmux$1821_Y [8]
      New connections: { $flatten\DUT.\Stack.$procmux$1821_Y [13:9] $flatten\DUT.\Stack.$procmux$1821_Y [7:0] } = { $flatten\DUT.\Stack.$procmux$1821_Y [8] $flatten\DUT.\Stack.$procmux$1821_Y [8] $flatten\DUT.\Stack.$procmux$1821_Y [8] $flatten\DUT.\Stack.$procmux$1821_Y [8] $flatten\DUT.\Stack.$procmux$1821_Y [8] 8'00000000 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2860: { $flatten\DUT.\Brain.$procmux$2178_CTRL $auto$opt_reduce.cc:134:opt_pmux$4315 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2323: $auto$opt_reduce.cc:134:opt_pmux$4317
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3180: { $flatten\DUT.\Brain.$procmux$3105_CTRL $auto$opt_reduce.cc:134:opt_pmux$4319 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2924: { $flatten\DUT.\Brain.$procmux$2178_CTRL $auto$opt_reduce.cc:134:opt_pmux$4321 $flatten\DUT.\Brain.$procmux$1995_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3688: { $flatten\DUT.\Brain.$procmux$2178_CTRL $flatten\DUT.\Brain.$procmux$2009_CMP $auto$opt_reduce.cc:134:opt_pmux$4323 }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$1875:
      Old ports: A=14'00000000000000, B=14'11111111111111, Y=$flatten\DUT.\Stack.$procmux$1875_Y
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\Stack.$procmux$1875_Y [0]
      New connections: $flatten\DUT.\Stack.$procmux$1875_Y [13:1] = { $flatten\DUT.\Stack.$procmux$1875_Y [0] $flatten\DUT.\Stack.$procmux$1875_Y [0] $flatten\DUT.\Stack.$procmux$1875_Y [0] $flatten\DUT.\Stack.$procmux$1875_Y [0] $flatten\DUT.\Stack.$procmux$1875_Y [0] $flatten\DUT.\Stack.$procmux$1875_Y [0] $flatten\DUT.\Stack.$procmux$1875_Y [0] $flatten\DUT.\Stack.$procmux$1875_Y [0] $flatten\DUT.\Stack.$procmux$1875_Y [0] $flatten\DUT.\Stack.$procmux$1875_Y [0] $flatten\DUT.\Stack.$procmux$1875_Y [0] $flatten\DUT.\Stack.$procmux$1875_Y [0] $flatten\DUT.\Stack.$procmux$1875_Y [0] }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3474: { $auto$opt_reduce.cc:134:opt_pmux$4327 $auto$opt_reduce.cc:134:opt_pmux$4325 }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$1929:
      Old ports: A=14'11111111111111, B=14'00000000000000, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:749$1563_EN[13:0]$1576
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:749$1563_EN[13:0]$1576 [0]
      New connections: $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:749$1563_EN[13:0]$1576 [13:1] = { $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:749$1563_EN[13:0]$1576 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:749$1563_EN[13:0]$1576 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:749$1563_EN[13:0]$1576 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:749$1563_EN[13:0]$1576 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:749$1563_EN[13:0]$1576 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:749$1563_EN[13:0]$1576 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:749$1563_EN[13:0]$1576 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:749$1563_EN[13:0]$1576 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:749$1563_EN[13:0]$1576 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:749$1563_EN[13:0]$1576 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:749$1563_EN[13:0]$1576 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:749$1563_EN[13:0]$1576 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:749$1563_EN[13:0]$1576 [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$1932:
      Old ports: A=14'11111111111111, B=14'00000000000000, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:748$1562_EN[13:0]$1575
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:748$1562_EN[13:0]$1575 [0]
      New connections: $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:748$1562_EN[13:0]$1575 [13:1] = { $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:748$1562_EN[13:0]$1575 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:748$1562_EN[13:0]$1575 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:748$1562_EN[13:0]$1575 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:748$1562_EN[13:0]$1575 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:748$1562_EN[13:0]$1575 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:748$1562_EN[13:0]$1575 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:748$1562_EN[13:0]$1575 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:748$1562_EN[13:0]$1575 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:748$1562_EN[13:0]$1575 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:748$1562_EN[13:0]$1575 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:748$1562_EN[13:0]$1575 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:748$1562_EN[13:0]$1575 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:748$1562_EN[13:0]$1575 [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$1935:
      Old ports: A=14'11111111111111, B=14'00000000000000, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:747$1561_EN[13:0]$1574
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:747$1561_EN[13:0]$1574 [0]
      New connections: $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:747$1561_EN[13:0]$1574 [13:1] = { $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:747$1561_EN[13:0]$1574 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:747$1561_EN[13:0]$1574 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:747$1561_EN[13:0]$1574 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:747$1561_EN[13:0]$1574 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:747$1561_EN[13:0]$1574 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:747$1561_EN[13:0]$1574 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:747$1561_EN[13:0]$1574 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:747$1561_EN[13:0]$1574 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:747$1561_EN[13:0]$1574 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:747$1561_EN[13:0]$1574 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:747$1561_EN[13:0]$1574 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:747$1561_EN[13:0]$1574 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:747$1561_EN[13:0]$1574 [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$1938:
      Old ports: A=14'11111111111111, B=14'00000000000000, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:746$1560_EN[13:0]$1573
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:746$1560_EN[13:0]$1573 [0]
      New connections: $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:746$1560_EN[13:0]$1573 [13:1] = { $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:746$1560_EN[13:0]$1573 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:746$1560_EN[13:0]$1573 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:746$1560_EN[13:0]$1573 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:746$1560_EN[13:0]$1573 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:746$1560_EN[13:0]$1573 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:746$1560_EN[13:0]$1573 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:746$1560_EN[13:0]$1573 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:746$1560_EN[13:0]$1573 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:746$1560_EN[13:0]$1573 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:746$1560_EN[13:0]$1573 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:746$1560_EN[13:0]$1573 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:746$1560_EN[13:0]$1573 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:746$1560_EN[13:0]$1573 [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$1941:
      Old ports: A=14'11111111111111, B=14'00000000000000, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:745$1559_EN[13:0]$1572
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:745$1559_EN[13:0]$1572 [0]
      New connections: $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:745$1559_EN[13:0]$1572 [13:1] = { $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:745$1559_EN[13:0]$1572 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:745$1559_EN[13:0]$1572 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:745$1559_EN[13:0]$1572 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:745$1559_EN[13:0]$1572 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:745$1559_EN[13:0]$1572 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:745$1559_EN[13:0]$1572 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:745$1559_EN[13:0]$1572 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:745$1559_EN[13:0]$1572 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:745$1559_EN[13:0]$1572 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:745$1559_EN[13:0]$1572 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:745$1559_EN[13:0]$1572 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:745$1559_EN[13:0]$1572 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:745$1559_EN[13:0]$1572 [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$1944:
      Old ports: A=14'11111111111111, B=14'00000000000000, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:744$1558_EN[13:0]$1571
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:744$1558_EN[13:0]$1571 [0]
      New connections: $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:744$1558_EN[13:0]$1571 [13:1] = { $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:744$1558_EN[13:0]$1571 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:744$1558_EN[13:0]$1571 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:744$1558_EN[13:0]$1571 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:744$1558_EN[13:0]$1571 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:744$1558_EN[13:0]$1571 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:744$1558_EN[13:0]$1571 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:744$1558_EN[13:0]$1571 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:744$1558_EN[13:0]$1571 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:744$1558_EN[13:0]$1571 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:744$1558_EN[13:0]$1571 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:744$1558_EN[13:0]$1571 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:744$1558_EN[13:0]$1571 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:744$1558_EN[13:0]$1571 [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$1947:
      Old ports: A=14'11111111111111, B=14'00000000000000, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:743$1557_EN[13:0]$1570
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:743$1557_EN[13:0]$1570 [0]
      New connections: $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:743$1557_EN[13:0]$1570 [13:1] = { $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:743$1557_EN[13:0]$1570 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:743$1557_EN[13:0]$1570 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:743$1557_EN[13:0]$1570 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:743$1557_EN[13:0]$1570 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:743$1557_EN[13:0]$1570 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:743$1557_EN[13:0]$1570 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:743$1557_EN[13:0]$1570 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:743$1557_EN[13:0]$1570 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:743$1557_EN[13:0]$1570 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:743$1557_EN[13:0]$1570 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:743$1557_EN[13:0]$1570 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:743$1557_EN[13:0]$1570 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:743$1557_EN[13:0]$1570 [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$1950:
      Old ports: A=14'11111111111111, B=14'00000000000000, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:742$1556_EN[13:0]$1569
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:742$1556_EN[13:0]$1569 [0]
      New connections: $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:742$1556_EN[13:0]$1569 [13:1] = { $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:742$1556_EN[13:0]$1569 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:742$1556_EN[13:0]$1569 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:742$1556_EN[13:0]$1569 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:742$1556_EN[13:0]$1569 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:742$1556_EN[13:0]$1569 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:742$1556_EN[13:0]$1569 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:742$1556_EN[13:0]$1569 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:742$1556_EN[13:0]$1569 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:742$1556_EN[13:0]$1569 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:742$1556_EN[13:0]$1569 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:742$1556_EN[13:0]$1569 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:742$1556_EN[13:0]$1569 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:742$1556_EN[13:0]$1569 [0] }
    New ctrl vector for $pmux cell $flatten\DUT.\Unit.$procmux$3934: { $flatten\DUT.\Unit.$procmux$3942_CMP $flatten\DUT.\Unit.$procmux$3941_CMP $flatten\DUT.\Unit.$procmux$3939_CMP $auto$opt_reduce.cc:134:opt_pmux$4331 $auto$opt_reduce.cc:134:opt_pmux$4329 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2379: { $flatten\DUT.\Brain.$procmux$2405_CTRL $flatten\DUT.\Brain.$procmux$2011_CMP $auto$opt_reduce.cc:134:opt_pmux$4333 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2683: $auto$opt_reduce.cc:134:opt_pmux$4335
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3699: { $flatten\DUT.\Brain.$procmux$2178_CTRL $flatten\DUT.\Brain.$procmux$2009_CMP $auto$opt_reduce.cc:134:opt_pmux$4337 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2427: { $flatten\DUT.\Brain.$procmux$2011_CMP $auto$opt_reduce.cc:134:opt_pmux$4339 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2934: { $flatten\DUT.\Brain.$procmux$2405_CTRL $flatten\DUT.\Brain.$procmux$2011_CMP $auto$opt_reduce.cc:134:opt_pmux$4341 $flatten\DUT.\Brain.$procmux$1995_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2535: $auto$opt_reduce.cc:134:opt_pmux$4343
    New ctrl vector for $pmux cell $flatten\DUT.\Unit.$procmux$3958: { $auto$opt_reduce.cc:134:opt_pmux$4345 $flatten\DUT.\Unit.$eq$i8008_core.sv:224$977_Y }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2775: { $flatten\DUT.\Brain.$procmux$2686_CTRL $auto$opt_reduce.cc:134:opt_pmux$4347 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3089: { $flatten\DUT.\Brain.$procmux$3105_CTRL $auto$opt_reduce.cc:134:opt_pmux$4349 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3141: { $flatten\DUT.\Brain.$eq$i8008_core.sv:285$988_Y $auto$opt_reduce.cc:134:opt_pmux$4351 }
    New ctrl vector for $pmux cell $flatten\DUT.\Unit.$procmux$3972: { $flatten\DUT.\Unit.$procmux$3978_CMP $flatten\DUT.\Unit.$procmux$3977_CMP $auto$opt_reduce.cc:134:opt_pmux$4355 $auto$opt_reduce.cc:134:opt_pmux$4353 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2870: { $flatten\DUT.\Brain.$procmux$2405_CTRL $auto$opt_reduce.cc:134:opt_pmux$4357 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2007: { $flatten\DUT.\Brain.$procmux$2178_CTRL $auto$opt_reduce.cc:134:opt_pmux$4359 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3205: { $flatten\DUT.\Brain.$procmux$2178_CTRL $auto$opt_reduce.cc:134:opt_pmux$4361 }
    Consolidated identical input bits for $mux cell $flatten\DUT.\rf.$procmux$1726:
      Old ports: A=8'00000000, B=8'11111111, Y=$flatten\DUT.\rf.$procmux$1726_Y
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\rf.$procmux$1726_Y [0]
      New connections: $flatten\DUT.\rf.$procmux$1726_Y [7:1] = { $flatten\DUT.\rf.$procmux$1726_Y [0] $flatten\DUT.\rf.$procmux$1726_Y [0] $flatten\DUT.\rf.$procmux$1726_Y [0] $flatten\DUT.\rf.$procmux$1726_Y [0] $flatten\DUT.\rf.$procmux$1726_Y [0] $flatten\DUT.\rf.$procmux$1726_Y [0] $flatten\DUT.\rf.$procmux$1726_Y [0] }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2697: { $flatten\DUT.\Brain.$procmux$2686_CTRL $auto$opt_reduce.cc:134:opt_pmux$4363 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2574: { $flatten\DUT.\Brain.$procmux$2011_CMP $flatten\DUT.\Brain.$procmux$2178_CTRL $auto$opt_reduce.cc:134:opt_pmux$4365 $flatten\DUT.\Brain.$procmux$1995_CMP }
    Consolidated identical input bits for $mux cell $flatten\DUT.\rf.$procmux$1744:
      Old ports: A=8'11111111, B=8'00000000, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:706$1641_EN[7:0]$1650
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:706$1641_EN[7:0]$1650 [0]
      New connections: $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:706$1641_EN[7:0]$1650 [7:1] = { $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:706$1641_EN[7:0]$1650 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:706$1641_EN[7:0]$1650 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:706$1641_EN[7:0]$1650 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:706$1641_EN[7:0]$1650 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:706$1641_EN[7:0]$1650 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:706$1641_EN[7:0]$1650 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:706$1641_EN[7:0]$1650 [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\rf.$procmux$1747:
      Old ports: A=8'11111111, B=8'00000000, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:705$1640_EN[7:0]$1649
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:705$1640_EN[7:0]$1649 [0]
      New connections: $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:705$1640_EN[7:0]$1649 [7:1] = { $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:705$1640_EN[7:0]$1649 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:705$1640_EN[7:0]$1649 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:705$1640_EN[7:0]$1649 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:705$1640_EN[7:0]$1649 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:705$1640_EN[7:0]$1649 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:705$1640_EN[7:0]$1649 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:705$1640_EN[7:0]$1649 [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\rf.$procmux$1750:
      Old ports: A=8'11111111, B=8'00000000, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:704$1639_EN[7:0]$1648
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:704$1639_EN[7:0]$1648 [0]
      New connections: $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:704$1639_EN[7:0]$1648 [7:1] = { $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:704$1639_EN[7:0]$1648 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:704$1639_EN[7:0]$1648 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:704$1639_EN[7:0]$1648 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:704$1639_EN[7:0]$1648 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:704$1639_EN[7:0]$1648 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:704$1639_EN[7:0]$1648 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:704$1639_EN[7:0]$1648 [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\rf.$procmux$1753:
      Old ports: A=8'11111111, B=8'00000000, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:703$1638_EN[7:0]$1647
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:703$1638_EN[7:0]$1647 [0]
      New connections: $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:703$1638_EN[7:0]$1647 [7:1] = { $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:703$1638_EN[7:0]$1647 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:703$1638_EN[7:0]$1647 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:703$1638_EN[7:0]$1647 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:703$1638_EN[7:0]$1647 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:703$1638_EN[7:0]$1647 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:703$1638_EN[7:0]$1647 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:703$1638_EN[7:0]$1647 [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\rf.$procmux$1756:
      Old ports: A=8'11111111, B=8'00000000, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:702$1637_EN[7:0]$1646
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:702$1637_EN[7:0]$1646 [0]
      New connections: $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:702$1637_EN[7:0]$1646 [7:1] = { $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:702$1637_EN[7:0]$1646 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:702$1637_EN[7:0]$1646 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:702$1637_EN[7:0]$1646 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:702$1637_EN[7:0]$1646 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:702$1637_EN[7:0]$1646 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:702$1637_EN[7:0]$1646 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:702$1637_EN[7:0]$1646 [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\rf.$procmux$1759:
      Old ports: A=8'11111111, B=8'00000000, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:701$1636_EN[7:0]$1645
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:701$1636_EN[7:0]$1645 [0]
      New connections: $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:701$1636_EN[7:0]$1645 [7:1] = { $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:701$1636_EN[7:0]$1645 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:701$1636_EN[7:0]$1645 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:701$1636_EN[7:0]$1645 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:701$1636_EN[7:0]$1645 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:701$1636_EN[7:0]$1645 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:701$1636_EN[7:0]$1645 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:701$1636_EN[7:0]$1645 [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\rf.$procmux$1762:
      Old ports: A=8'11111111, B=8'00000000, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:700$1635_EN[7:0]$1644
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:700$1635_EN[7:0]$1644 [0]
      New connections: $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:700$1635_EN[7:0]$1644 [7:1] = { $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:700$1635_EN[7:0]$1644 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:700$1635_EN[7:0]$1644 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:700$1635_EN[7:0]$1644 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:700$1635_EN[7:0]$1644 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:700$1635_EN[7:0]$1644 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:700$1635_EN[7:0]$1644 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:700$1635_EN[7:0]$1644 [0] }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3485: { $auto$opt_reduce.cc:134:opt_pmux$4367 $flatten\DUT.\Brain.$procmux$1995_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4170: { $flatten\DUT.\Brain.$procmux$2622_CMP [0] $flatten\DUT.\Brain.$procmux$2497_CMP [1] $flatten\DUT.\Brain.$procmux$2496_CMP [1] $flatten\DUT.\Brain.$procmux$2088_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1044_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1040_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1039_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1028_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1024_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1023_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:509$1016_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4172: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2011_CMP $flatten\DUT.\Brain.$procmux$2010_CMP $flatten\DUT.\Brain.$procmux$2009_CMP $flatten\DUT.\Brain.$procmux$1995_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4174: { $flatten\DUT.\Brain.$procmux$3246_CMP [0] $flatten\DUT.\Brain.$procmux$3243_CMP $flatten\DUT.\Brain.$procmux$3066_CMP [1] $flatten\DUT.\Brain.$procmux$3065_CMP $flatten\DUT.\Brain.$procmux$3064_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:389$1005_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:309$992_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:309$989_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4176: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2010_CMP $flatten\DUT.\Brain.$procmux$2009_CMP $flatten\DUT.\Brain.$procmux$1995_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4178: { $flatten\DUT.\Brain.$procmux$2011_CMP $flatten\DUT.\Brain.$procmux$2010_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4180: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2011_CMP $flatten\DUT.\Brain.$procmux$2009_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4182: { $flatten\DUT.\Brain.$procmux$3066_CMP [1] $flatten\DUT.\Brain.$procmux$3065_CMP $flatten\DUT.\Brain.$procmux$3064_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:389$1005_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4184: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2011_CMP $flatten\DUT.\Brain.$procmux$2010_CMP $flatten\DUT.\Brain.$procmux$1995_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4186: { $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1044_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1040_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1039_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1028_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1024_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1023_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4188: { $flatten\DUT.\Brain.$procmux$2010_CMP $flatten\DUT.\Brain.$procmux$2009_CMP $flatten\DUT.\Brain.$procmux$1995_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4190: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2011_CMP $flatten\DUT.\Brain.$procmux$2010_CMP $flatten\DUT.\Brain.$procmux$1995_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4192: { $flatten\DUT.\Brain.$procmux$3243_CMP $flatten\DUT.\Brain.$procmux$3066_CMP [1] $flatten\DUT.\Brain.$procmux$3064_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:389$1005_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:309$992_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:309$989_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:285$988_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4194: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2011_CMP $flatten\DUT.\Brain.$procmux$2010_CMP $flatten\DUT.\Brain.$procmux$1995_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4196: { $flatten\DUT.\Brain.$procmux$3246_CMP [0] $flatten\DUT.\Brain.$procmux$3243_CMP $flatten\DUT.\Brain.$procmux$3066_CMP [1] $flatten\DUT.\Brain.$procmux$3065_CMP $flatten\DUT.\Brain.$procmux$3064_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:389$1005_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:309$992_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:309$989_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:285$988_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4200: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2011_CMP $flatten\DUT.\Brain.$procmux$2010_CMP $flatten\DUT.\Brain.$procmux$2009_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4202: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2011_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4204: { $flatten\DUT.\Brain.$procmux$2497_CMP [1:0] $flatten\DUT.\Brain.$procmux$2496_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:509$1016_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4206: { $flatten\DUT.\Brain.$procmux$2088_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1044_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1040_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1039_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1028_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1024_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1023_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4208: { $flatten\DUT.\Brain.$procmux$2622_CMP [0] $flatten\DUT.\Brain.$procmux$2497_CMP [1] $flatten\DUT.\Brain.$procmux$2496_CMP [1] $flatten\DUT.\Brain.$procmux$2088_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1044_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1040_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1039_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1028_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1024_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1023_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:509$1016_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4210: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2011_CMP $flatten\DUT.\Brain.$procmux$2009_CMP $flatten\DUT.\Brain.$procmux$1995_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4212: { $flatten\DUT.\Brain.$procmux$2010_CMP $flatten\DUT.\Brain.$procmux$1995_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4214: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2011_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4216: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2011_CMP $flatten\DUT.\Brain.$procmux$2010_CMP $flatten\DUT.\Brain.$procmux$1995_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4218: { $flatten\DUT.\Brain.$procmux$2622_CMP [0] $flatten\DUT.\Brain.$procmux$2497_CMP [1] $flatten\DUT.\Brain.$procmux$2496_CMP [1] $flatten\DUT.\Brain.$procmux$2088_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1044_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1040_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1039_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1028_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1024_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1023_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:509$1016_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4220: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2011_CMP $flatten\DUT.\Brain.$procmux$2010_CMP $flatten\DUT.\Brain.$procmux$2009_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4222: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2011_CMP $flatten\DUT.\Brain.$procmux$2009_CMP $flatten\DUT.\Brain.$procmux$1995_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4224: { $flatten\DUT.\Brain.$procmux$3066_CMP [1] $flatten\DUT.\Brain.$procmux$3065_CMP $flatten\DUT.\Brain.$procmux$3064_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:389$1005_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4226: { $flatten\DUT.\Brain.$procmux$2622_CMP [0] $flatten\DUT.\Brain.$procmux$2497_CMP [1:0] $flatten\DUT.\Brain.$procmux$2496_CMP $flatten\DUT.\Brain.$procmux$2088_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1044_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1040_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1039_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1028_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1024_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1023_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:509$1016_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:370$1004_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4228: { $flatten\DUT.\Brain.$procmux$3066_CMP [1] $flatten\DUT.\Brain.$procmux$3065_CMP $flatten\DUT.\Brain.$procmux$3064_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:389$1005_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4230: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2010_CMP $flatten\DUT.\Brain.$procmux$2009_CMP $flatten\DUT.\Brain.$procmux$1995_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4232: { $flatten\DUT.\Brain.$procmux$3246_CMP [0] $flatten\DUT.\Brain.$procmux$3066_CMP [1] $flatten\DUT.\Brain.$procmux$3065_CMP $flatten\DUT.\Brain.$procmux$3064_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:389$1005_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:285$988_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4234: { $flatten\DUT.\Brain.$procmux$3243_CMP $flatten\DUT.\Brain.$procmux$3064_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:309$992_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:309$989_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:285$988_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4236: { $flatten\DUT.\Brain.$procmux$3243_CMP $flatten\DUT.\Brain.$procmux$3066_CMP [1] $flatten\DUT.\Brain.$procmux$3064_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:389$1005_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:309$992_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:309$989_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:285$988_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4238: { $flatten\DUT.\Brain.$procmux$2010_CMP $flatten\DUT.\Brain.$procmux$2009_CMP $flatten\DUT.\Brain.$procmux$1995_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4240: { $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1044_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1040_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1039_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1028_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1024_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1023_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4242: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2011_CMP $flatten\DUT.\Brain.$procmux$2010_CMP $flatten\DUT.\Brain.$procmux$2009_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4244: { $flatten\DUT.\Brain.$procmux$3066_CMP [1] $flatten\DUT.\Brain.$procmux$3065_CMP $flatten\DUT.\Brain.$procmux$3064_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:389$1005_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4246: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2011_CMP $flatten\DUT.\Brain.$procmux$2009_CMP $flatten\DUT.\Brain.$procmux$1995_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4248: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2011_CMP $flatten\DUT.\Brain.$procmux$2010_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4250: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2011_CMP $flatten\DUT.\Brain.$procmux$2010_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4252: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2011_CMP $flatten\DUT.\Brain.$procmux$2010_CMP $flatten\DUT.\Brain.$procmux$1995_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4254: { $flatten\DUT.\Brain.$procmux$2622_CMP [0] $flatten\DUT.\Brain.$procmux$2497_CMP [1:0] $flatten\DUT.\Brain.$procmux$2496_CMP $flatten\DUT.\Brain.$procmux$2088_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1044_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1040_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1039_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1028_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1024_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1023_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:509$1016_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:370$1004_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4256: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2011_CMP $flatten\DUT.\Brain.$procmux$2010_CMP $flatten\DUT.\Brain.$procmux$2009_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4258: { $flatten\DUT.\Brain.$procmux$3243_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:309$992_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:309$989_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:285$988_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4260: { $flatten\DUT.\Brain.$procmux$3066_CMP [1] $flatten\DUT.\Brain.$procmux$3064_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:389$1005_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4262: { $flatten\DUT.\Brain.$procmux$2010_CMP $flatten\DUT.\Brain.$procmux$2009_CMP $flatten\DUT.\Brain.$procmux$1995_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4264: { $flatten\DUT.\Brain.$procmux$2622_CMP [0] $flatten\DUT.\Brain.$procmux$2497_CMP [0] $flatten\DUT.\Brain.$procmux$2496_CMP [0] $flatten\DUT.\Brain.$eq$i8008_core.sv:509$1016_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:370$1004_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4266: { $flatten\DUT.\Brain.$procmux$3246_CMP [0] $flatten\DUT.\Brain.$procmux$3243_CMP $flatten\DUT.\Brain.$procmux$3065_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:309$992_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:309$989_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:285$988_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4268: { $flatten\DUT.\Brain.$procmux$3066_CMP [1] $flatten\DUT.\Brain.$procmux$3064_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:389$1005_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4270: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2011_CMP $flatten\DUT.\Brain.$procmux$2009_CMP $flatten\DUT.\Brain.$procmux$1995_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4272: { $flatten\DUT.\Brain.$procmux$2010_CMP $flatten\DUT.\Brain.$procmux$2009_CMP $flatten\DUT.\Brain.$procmux$1995_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4274: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2011_CMP $flatten\DUT.\Brain.$procmux$2010_CMP $flatten\DUT.\Brain.$procmux$2009_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4276: { $flatten\DUT.\Brain.$procmux$3246_CMP [0] $flatten\DUT.\Brain.$procmux$3243_CMP $flatten\DUT.\Brain.$procmux$3066_CMP [1] $flatten\DUT.\Brain.$procmux$3065_CMP $flatten\DUT.\Brain.$procmux$3064_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:389$1005_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:309$992_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:309$989_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:285$988_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4278: { $flatten\DUT.\Brain.$procmux$3065_CMP $flatten\DUT.\Brain.$procmux$3064_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4280: { $flatten\DUT.\Brain.$procmux$3066_CMP [1] $flatten\DUT.\Brain.$eq$i8008_core.sv:389$1005_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:285$988_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4282: { $flatten\DUT.\Brain.$procmux$2088_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1044_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1040_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1039_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1028_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1024_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1023_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4284: { $flatten\DUT.\Brain.$procmux$2622_CMP [0] $flatten\DUT.\Brain.$procmux$2497_CMP [0] $flatten\DUT.\Brain.$procmux$2496_CMP [0] $flatten\DUT.\Brain.$eq$i8008_core.sv:509$1016_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:370$1004_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4286: { $flatten\DUT.\Brain.$procmux$3065_CMP $flatten\DUT.\Brain.$procmux$3064_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:285$988_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4288: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2011_CMP $flatten\DUT.\Brain.$procmux$2010_CMP $flatten\DUT.\Brain.$procmux$2009_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4290: { $flatten\DUT.\Brain.$procmux$2622_CMP [0] $flatten\DUT.\Brain.$procmux$2497_CMP [1] $flatten\DUT.\Brain.$procmux$2496_CMP [1] $flatten\DUT.\Brain.$procmux$2088_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1044_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1040_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1039_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1028_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1024_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1023_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:509$1016_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4292: { $flatten\DUT.\Brain.$procmux$3066_CMP [1] $flatten\DUT.\Brain.$procmux$3065_CMP $flatten\DUT.\Brain.$procmux$3064_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:389$1005_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4294: { $flatten\DUT.\Brain.$procmux$2497_CMP [1:0] $flatten\DUT.\Brain.$procmux$2496_CMP $flatten\DUT.\Brain.$procmux$2088_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1044_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1040_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1039_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1028_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1024_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1023_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:370$1004_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4296: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2011_CMP $flatten\DUT.\Brain.$procmux$1995_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4298: { $flatten\DUT.\Brain.$procmux$3246_CMP [0] $flatten\DUT.\Brain.$procmux$3243_CMP $flatten\DUT.\Brain.$procmux$3066_CMP [1] $flatten\DUT.\Brain.$procmux$3065_CMP $flatten\DUT.\Brain.$procmux$3064_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:389$1005_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:309$992_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:309$989_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4300: { $flatten\DUT.\Brain.$procmux$3066_CMP [1] $flatten\DUT.\Brain.$procmux$3064_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:389$1005_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4304: { $flatten\DUT.\Brain.$procmux$2010_CMP $flatten\DUT.\Brain.$procmux$2009_CMP $flatten\DUT.\Brain.$procmux$1995_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4306: { $flatten\DUT.\Brain.$procmux$2497_CMP [1:0] $flatten\DUT.\Brain.$procmux$2496_CMP $flatten\DUT.\Brain.$procmux$2088_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1044_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1040_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1039_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1028_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1024_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1023_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:370$1004_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4308: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2011_CMP $flatten\DUT.\Brain.$procmux$2010_CMP $flatten\DUT.\Brain.$procmux$1995_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4310: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2011_CMP $flatten\DUT.\Brain.$procmux$2010_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4312: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2011_CMP $flatten\DUT.\Brain.$procmux$2009_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4314: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2011_CMP $flatten\DUT.\Brain.$procmux$2009_CMP $flatten\DUT.\Brain.$procmux$1995_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4316: { $flatten\DUT.\Brain.$procmux$2088_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1044_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1040_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1039_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1028_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1024_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1023_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4318: { $flatten\DUT.\Brain.$procmux$3065_CMP $flatten\DUT.\Brain.$procmux$3064_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:285$988_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4320: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2011_CMP $flatten\DUT.\Brain.$procmux$2009_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4322: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2011_CMP $flatten\DUT.\Brain.$procmux$1995_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4324: { $flatten\DUT.\Brain.$procmux$2010_CMP $flatten\DUT.\Brain.$procmux$2009_CMP $flatten\DUT.\Brain.$procmux$1995_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4326: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2011_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4332: { $flatten\DUT.\Brain.$procmux$2010_CMP $flatten\DUT.\Brain.$procmux$2009_CMP $flatten\DUT.\Brain.$procmux$1995_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4334: { $flatten\DUT.\Brain.$procmux$2622_CMP [0] $flatten\DUT.\Brain.$procmux$2497_CMP [1:0] $flatten\DUT.\Brain.$procmux$2496_CMP $flatten\DUT.\Brain.$procmux$2088_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1044_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1040_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1039_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1028_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1024_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1023_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:509$1016_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:370$1004_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4336: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2011_CMP $flatten\DUT.\Brain.$procmux$1995_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4338: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2010_CMP $flatten\DUT.\Brain.$procmux$2009_CMP $flatten\DUT.\Brain.$procmux$1995_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4340: { $flatten\DUT.\Brain.$procmux$2010_CMP $flatten\DUT.\Brain.$procmux$2009_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4342: { $flatten\DUT.\Brain.$procmux$2497_CMP [1:0] $flatten\DUT.\Brain.$procmux$2496_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:509$1016_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4346: { $flatten\DUT.\Brain.$procmux$2622_CMP [0] $flatten\DUT.\Brain.$procmux$2497_CMP [0] $flatten\DUT.\Brain.$procmux$2496_CMP [0] $flatten\DUT.\Brain.$eq$i8008_core.sv:509$1016_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:370$1004_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4348: { $flatten\DUT.\Brain.$procmux$3065_CMP $flatten\DUT.\Brain.$procmux$3064_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:285$988_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4350: { $flatten\DUT.\Brain.$procmux$3066_CMP [1] $flatten\DUT.\Brain.$procmux$3065_CMP $flatten\DUT.\Brain.$procmux$3064_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:389$1005_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4356: { $flatten\DUT.\Brain.$procmux$2011_CMP $flatten\DUT.\Brain.$procmux$2010_CMP $flatten\DUT.\Brain.$procmux$2009_CMP $flatten\DUT.\Brain.$procmux$1995_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4358: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2011_CMP $flatten\DUT.\Brain.$procmux$2009_CMP $flatten\DUT.\Brain.$procmux$1995_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4360: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2011_CMP $flatten\DUT.\Brain.$procmux$2009_CMP $flatten\DUT.\Brain.$procmux$1995_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4362: { $flatten\DUT.\Brain.$procmux$2622_CMP [0] $flatten\DUT.\Brain.$procmux$2497_CMP [0] $flatten\DUT.\Brain.$procmux$2496_CMP [0] $flatten\DUT.\Brain.$eq$i8008_core.sv:509$1016_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:370$1004_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4364: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2009_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4366: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2011_CMP $flatten\DUT.\Brain.$procmux$2010_CMP $flatten\DUT.\Brain.$procmux$2009_CMP }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$1848:
      Old ports: A=$flatten\DUT.\Stack.$4$memwr$\rf$i8008_core.sv:756$1566_EN[13:0]$1624, B=14'00000000000000, Y=$flatten\DUT.\Stack.$procmux$1848_Y
      New ports: A=$flatten\DUT.\Stack.$procmux$1785_Y [0], B=1'0, Y=$flatten\DUT.\Stack.$procmux$1848_Y [0]
      New connections: $flatten\DUT.\Stack.$procmux$1848_Y [13:1] = { $flatten\DUT.\Stack.$procmux$1848_Y [0] $flatten\DUT.\Stack.$procmux$1848_Y [0] $flatten\DUT.\Stack.$procmux$1848_Y [0] $flatten\DUT.\Stack.$procmux$1848_Y [0] $flatten\DUT.\Stack.$procmux$1848_Y [0] $flatten\DUT.\Stack.$procmux$1848_Y [0] $flatten\DUT.\Stack.$procmux$1848_Y [0] $flatten\DUT.\Stack.$procmux$1848_Y [0] $flatten\DUT.\Stack.$procmux$1848_Y [0] $flatten\DUT.\Stack.$procmux$1848_Y [0] $flatten\DUT.\Stack.$procmux$1848_Y [0] $flatten\DUT.\Stack.$procmux$1848_Y [0] $flatten\DUT.\Stack.$procmux$1848_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$1911:
      Old ports: A=$flatten\DUT.\Stack.$3$memwr$\rf$i8008_core.sv:754$1565_EN[13:0]$1618, B=14'00000000000000, Y=$flatten\DUT.\Stack.$procmux$1911_Y
      New ports: A=$flatten\DUT.\Stack.$procmux$1821_Y [8], B=1'0, Y=$flatten\DUT.\Stack.$procmux$1911_Y [8]
      New connections: { $flatten\DUT.\Stack.$procmux$1911_Y [13:9] $flatten\DUT.\Stack.$procmux$1911_Y [7:0] } = { $flatten\DUT.\Stack.$procmux$1911_Y [8] $flatten\DUT.\Stack.$procmux$1911_Y [8] $flatten\DUT.\Stack.$procmux$1911_Y [8] $flatten\DUT.\Stack.$procmux$1911_Y [8] $flatten\DUT.\Stack.$procmux$1911_Y [8] 8'00000000 }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$1971:
      Old ports: A=14'00000000000000, B=$flatten\DUT.\Stack.$2$memwr$\rf$i8008_core.sv:752$1564_EN[13:0]$1606, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:752$1564_EN[13:0]$1579
      New ports: A=1'0, B=$flatten\DUT.\Stack.$procmux$1875_Y [0], Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:752$1564_EN[13:0]$1579 [0]
      New connections: $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:752$1564_EN[13:0]$1579 [13:1] = { $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:752$1564_EN[13:0]$1579 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:752$1564_EN[13:0]$1579 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:752$1564_EN[13:0]$1579 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:752$1564_EN[13:0]$1579 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:752$1564_EN[13:0]$1579 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:752$1564_EN[13:0]$1579 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:752$1564_EN[13:0]$1579 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:752$1564_EN[13:0]$1579 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:752$1564_EN[13:0]$1579 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:752$1564_EN[13:0]$1579 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:752$1564_EN[13:0]$1579 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:752$1564_EN[13:0]$1579 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:752$1564_EN[13:0]$1579 [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\rf.$procmux$1765:
      Old ports: A=8'00000000, B=$flatten\DUT.\rf.$2$memwr$\rf$i8008_core.sv:709$1642_EN[7:0]$1666, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:709$1642_EN[7:0]$1653
      New ports: A=1'0, B=$flatten\DUT.\rf.$procmux$1726_Y [0], Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:709$1642_EN[7:0]$1653 [0]
      New connections: $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:709$1642_EN[7:0]$1653 [7:1] = { $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:709$1642_EN[7:0]$1653 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:709$1642_EN[7:0]$1653 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:709$1642_EN[7:0]$1653 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:709$1642_EN[7:0]$1653 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:709$1642_EN[7:0]$1653 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:709$1642_EN[7:0]$1653 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.sv:709$1642_EN[7:0]$1653 [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$1893:
      Old ports: A=$flatten\DUT.\Stack.$3$memwr$\rf$i8008_core.sv:756$1566_EN[13:0]$1621, B=14'00000000000000, Y=$flatten\DUT.\Stack.$procmux$1893_Y
      New ports: A=$flatten\DUT.\Stack.$procmux$1848_Y [0], B=1'0, Y=$flatten\DUT.\Stack.$procmux$1893_Y [0]
      New connections: $flatten\DUT.\Stack.$procmux$1893_Y [13:1] = { $flatten\DUT.\Stack.$procmux$1893_Y [0] $flatten\DUT.\Stack.$procmux$1893_Y [0] $flatten\DUT.\Stack.$procmux$1893_Y [0] $flatten\DUT.\Stack.$procmux$1893_Y [0] $flatten\DUT.\Stack.$procmux$1893_Y [0] $flatten\DUT.\Stack.$procmux$1893_Y [0] $flatten\DUT.\Stack.$procmux$1893_Y [0] $flatten\DUT.\Stack.$procmux$1893_Y [0] $flatten\DUT.\Stack.$procmux$1893_Y [0] $flatten\DUT.\Stack.$procmux$1893_Y [0] $flatten\DUT.\Stack.$procmux$1893_Y [0] $flatten\DUT.\Stack.$procmux$1893_Y [0] $flatten\DUT.\Stack.$procmux$1893_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$1962:
      Old ports: A=14'00000000000000, B=$flatten\DUT.\Stack.$2$memwr$\rf$i8008_core.sv:754$1565_EN[13:0]$1609, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:754$1565_EN[13:0]$1582
      New ports: A=1'0, B=$flatten\DUT.\Stack.$procmux$1911_Y [8], Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:754$1565_EN[13:0]$1582 [8]
      New connections: { $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:754$1565_EN[13:0]$1582 [13:9] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:754$1565_EN[13:0]$1582 [7:0] } = { $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:754$1565_EN[13:0]$1582 [8] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:754$1565_EN[13:0]$1582 [8] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:754$1565_EN[13:0]$1582 [8] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:754$1565_EN[13:0]$1582 [8] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:754$1565_EN[13:0]$1582 [8] 8'00000000 }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$1953:
      Old ports: A=14'00000000000000, B=$flatten\DUT.\Stack.$2$memwr$\rf$i8008_core.sv:756$1566_EN[13:0]$1612, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:756$1566_EN[13:0]$1585
      New ports: A=1'0, B=$flatten\DUT.\Stack.$procmux$1893_Y [0], Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:756$1566_EN[13:0]$1585 [0]
      New connections: $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:756$1566_EN[13:0]$1585 [13:1] = { $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:756$1566_EN[13:0]$1585 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:756$1566_EN[13:0]$1585 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:756$1566_EN[13:0]$1585 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:756$1566_EN[13:0]$1585 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:756$1566_EN[13:0]$1585 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:756$1566_EN[13:0]$1585 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:756$1566_EN[13:0]$1585 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:756$1566_EN[13:0]$1585 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:756$1566_EN[13:0]$1585 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:756$1566_EN[13:0]$1585 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:756$1566_EN[13:0]$1585 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:756$1566_EN[13:0]$1585 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:756$1566_EN[13:0]$1585 [0] }
  Optimizing cells in module \top.
Performed a total of 209 changes.

3.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~354 debug messages>
Removed a total of 118 cells.

3.10.6. Executing OPT_DFF pass (perform DFF optimizations).

3.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 1553 unused wires.
<suppressed ~2 debug messages>

3.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.10.9. Rerunning OPT passes. (Maybe there is more to do..)

3.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~64 debug messages>

3.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2065: { $auto$opt_reduce.cc:134:opt_pmux$4369 $flatten\DUT.\Brain.$procmux$2010_CTRL $auto$opt_reduce.cc:134:opt_pmux$4199 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2400: { $auto$opt_reduce.cc:134:opt_pmux$4371 $auto$opt_reduce.cc:134:opt_pmux$4189 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2436: { $auto$opt_reduce.cc:134:opt_pmux$4373 $auto$opt_reduce.cc:134:opt_pmux$4189 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2554: { $auto$opt_reduce.cc:134:opt_pmux$4375 $auto$opt_reduce.cc:134:opt_pmux$4189 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2620: $auto$opt_reduce.cc:134:opt_pmux$4377
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2641: { $auto$opt_reduce.cc:134:opt_pmux$4379 $flatten\DUT.\Brain.$procmux$2010_CTRL $flatten\DUT.\Brain.$procmux$2009_CMP $flatten\DUT.\Brain.$procmux$1995_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2904: { $auto$opt_reduce.cc:134:opt_pmux$4381 $auto$opt_reduce.cc:134:opt_pmux$4189 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4368: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2011_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4370: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2011_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4372: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2011_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4374: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2011_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4376: { $flatten\DUT.\Brain.$procmux$2622_CMP [0] $flatten\DUT.\Brain.$procmux$2088_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1044_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1040_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:638$1039_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1028_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1024_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:629$1023_Y $flatten\DUT.\Brain.$eq$i8008_core.sv:370$1004_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4378: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2011_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4380: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2011_CMP }
  Optimizing cells in module \top.
Performed a total of 14 changes.

3.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

3.10.13. Executing OPT_DFF pass (perform DFF optimizations).

3.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

3.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.10.16. Rerunning OPT passes. (Maybe there is more to do..)

3.10.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~64 debug messages>

3.10.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

3.10.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.10.20. Executing OPT_DFF pass (perform DFF optimizations).

3.10.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

3.10.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.10.23. Finished OPT passes. (There is nothing left to do.)

3.11. Executing FSM pass (extract and optimize FSM).

3.11.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register top.DUT.Brain.cycle.
Not marking top.DUT.Brain.state as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.

3.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\DUT.Brain.cycle' from module `\top'.
  found $dff cell for state register: $flatten\DUT.\Brain.$procdff$4150
  root of input selection tree: $flatten\DUT.\Brain.$0\cycle[1:0]
  found reset state: 2'00 (guessed from mux tree)
  found ctrl input: \reset_n
  found state code: 2'00
  found ctrl input: $flatten\DUT.\Brain.$procmux$1987_CMP
  found ctrl input: $flatten\DUT.\Brain.$procmux$1988_CMP
  found ctrl input: $flatten\DUT.\Brain.$procmux$1989_CMP
  found ctrl input: $flatten\DUT.\Brain.$procmux$1995_CMP
  found ctrl input: $auto$opt_reduce.cc:134:opt_pmux$4181
  found ctrl input: $flatten\DUT.\Brain.$procmux$2010_CTRL
  found ctrl input: $flatten\DUT.\Brain.$procmux$2123_CTRL
  found ctrl input: $flatten\DUT.\Brain.$procmux$2150_CTRL
  found ctrl input: $flatten\DUT.\Brain.$procmux$2088_CMP
  found ctrl input: \DUT.Brain.CF
  found ctrl input: $auto$opt_reduce.cc:134:opt_pmux$4207
  found ctrl input: $flatten\DUT.\Brain.$procmux$2622_CTRL
  found ctrl input: \DUT.R.Q
  found state code: 2'01
  found state code: 2'10
  found ctrl input: $flatten\DUT.\Brain.$procmux$2009_CMP
  found ctrl input: $auto$opt_reduce.cc:134:opt_pmux$4203
  found ctrl input: $flatten\DUT.\Brain.$eq$i8008_core.sv:370$1004_Y
  found ctrl input: $flatten\DUT.\Brain.$procmux$3550_CTRL
  found ctrl input: $flatten\DUT.\Brain.$procmux$3242_CTRL
  found ctrl input: $flatten\DUT.\Brain.$procmux$3521_CTRL
  found ctrl input: $flatten\DUT.\Brain.$or$i8008_core.sv:309$994_Y
  found ctrl input: \DUT.I.Q
  found ctrl output: $flatten\DUT.\Brain.$procmux$1987_CMP
  found ctrl output: $flatten\DUT.\Brain.$procmux$1988_CMP
  found ctrl output: $flatten\DUT.\Brain.$procmux$1989_CMP
  ctrl inputs: { $auto$opt_reduce.cc:134:opt_pmux$4181 $auto$opt_reduce.cc:134:opt_pmux$4203 $auto$opt_reduce.cc:134:opt_pmux$4207 \DUT.R.Q \DUT.I.Q $flatten\DUT.\Brain.$procmux$3550_CTRL $flatten\DUT.\Brain.$procmux$3521_CTRL $flatten\DUT.\Brain.$procmux$3242_CTRL $flatten\DUT.\Brain.$procmux$2622_CTRL $flatten\DUT.\Brain.$procmux$2150_CTRL $flatten\DUT.\Brain.$procmux$2123_CTRL $flatten\DUT.\Brain.$procmux$2088_CMP $flatten\DUT.\Brain.$procmux$2010_CTRL $flatten\DUT.\Brain.$procmux$2009_CMP $flatten\DUT.\Brain.$procmux$1995_CMP $flatten\DUT.\Brain.$eq$i8008_core.sv:370$1004_Y $flatten\DUT.\Brain.$or$i8008_core.sv:309$994_Y \DUT.Brain.CF \reset_n }
  ctrl outputs: { $flatten\DUT.\Brain.$procmux$1989_CMP $flatten\DUT.\Brain.$procmux$1988_CMP $flatten\DUT.\Brain.$procmux$1987_CMP $flatten\DUT.\Brain.$0\cycle[1:0] }
  transition:       2'00 19'------------------0 ->       2'00 5'10000
  transition:       2'00 19'-0----------000---1 -> INVALID_STATE(2'x) 5'100xx  <ignored invalid transition!>
  transition:       2'00 19'-1----------------1 ->       2'00 5'10000
  transition:       2'00 19'-----000----1-----1 ->       2'00 5'10000
  transition:       2'00 19'----0-1-----1-----1 ->       2'00 5'10000
  transition:       2'00 19'----1-1-----1-----1 ->       2'00 5'10000
  transition:       2'00 19'-------1----1---0-1 ->       2'00 5'10000
  transition:       2'00 19'-------1----1---1-1 ->       2'00 5'10000
  transition:       2'00 19'-----1------1-----1 ->       2'01 5'10001
  transition:       2'00 19'-------------1-0--1 ->       2'00 5'10000
  transition:       2'00 19'-------------1-1--1 ->       2'01 5'10001
  transition:       2'00 19'--------------1---1 ->       2'00 5'10000
  transition:       2'10 19'------------------0 ->       2'00 5'00100
  transition:       2'10 19'0-----------0-0---1 -> INVALID_STATE(2'x) 5'001xx  <ignored invalid transition!>
  transition:       2'10 19'---------0001-----1 ->       2'10 5'00110
  transition:       2'10 19'-----------11-----1 ->       2'00 5'00100
  transition:       2'10 19'---------1--1----01 ->       2'00 5'00100
  transition:       2'10 19'---------1--1----11 ->       2'10 5'00110
  transition:       2'10 19'----------1-1----01 ->       2'10 5'00110
  transition:       2'10 19'----------1-1----11 ->       2'00 5'00100
  transition:       2'10 19'1-----------------1 ->       2'10 5'00110
  transition:       2'10 19'--------------1---1 ->       2'00 5'00100
  transition:       2'01 19'------------------0 ->       2'00 5'01000
  transition:       2'01 19'0-----------0-0---1 -> INVALID_STATE(2'x) 5'010xx  <ignored invalid transition!>
  transition:       2'01 19'--0-----0---1-----1 ->       2'01 5'01001
  transition:       2'01 19'---0----1---1-----1 ->       2'01 5'01001
  transition:       2'01 19'---1----1---1-----1 ->       2'00 5'01000
  transition:       2'01 19'--10--------1-----1 ->       2'01 5'01001
  transition:       2'01 19'--11--------1-----1 ->       2'10 5'01010
  transition:       2'01 19'1-----------------1 ->       2'01 5'01001
  transition:       2'01 19'--------------1---1 ->       2'00 5'01000

3.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\DUT.Brain.cycle$4382' from module `\top'.
  Merging pattern 19'-------1----1---0-1 and 19'-------1----1---1-1 from group (0 0 5'10000).
  Merging pattern 19'-------1----1---1-1 and 19'-------1----1---0-1 from group (0 0 5'10000).
  Merging pattern 19'----0-1-----1-----1 and 19'----1-1-----1-----1 from group (0 0 5'10000).
  Merging pattern 19'----1-1-----1-----1 and 19'----0-1-----1-----1 from group (0 0 5'10000).
  Removing unused input signal \DUT.I.Q.
  Removing unused input signal $flatten\DUT.\Brain.$or$i8008_core.sv:309$994_Y.

3.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 19 unused cells and 19 unused wires.
<suppressed ~21 debug messages>

3.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\DUT.Brain.cycle$4382' from module `\top'.
  Removing unused output signal $flatten\DUT.\Brain.$0\cycle[1:0] [0].
  Removing unused output signal $flatten\DUT.\Brain.$0\cycle[1:0] [1].

3.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\DUT.Brain.cycle$4382' from module `\top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> --1
  10 -> -1-
  01 -> 1--

3.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\DUT.Brain.cycle$4382' from module `top':
-------------------------------------

  Information on FSM $fsm$\DUT.Brain.cycle$4382 (\DUT.Brain.cycle):

  Number of input signals:   17
  Number of output signals:   3
  Number of state bits:       3

  Input signals:
    0: \reset_n
    1: \DUT.Brain.CF
    2: $flatten\DUT.\Brain.$eq$i8008_core.sv:370$1004_Y
    3: $flatten\DUT.\Brain.$procmux$1995_CMP
    4: $flatten\DUT.\Brain.$procmux$2009_CMP
    5: $flatten\DUT.\Brain.$procmux$2010_CTRL
    6: $flatten\DUT.\Brain.$procmux$2088_CMP
    7: $flatten\DUT.\Brain.$procmux$2123_CTRL
    8: $flatten\DUT.\Brain.$procmux$2150_CTRL
    9: $flatten\DUT.\Brain.$procmux$2622_CTRL
   10: $flatten\DUT.\Brain.$procmux$3242_CTRL
   11: $flatten\DUT.\Brain.$procmux$3521_CTRL
   12: $flatten\DUT.\Brain.$procmux$3550_CTRL
   13: \DUT.R.Q
   14: $auto$opt_reduce.cc:134:opt_pmux$4207
   15: $auto$opt_reduce.cc:134:opt_pmux$4203
   16: $auto$opt_reduce.cc:134:opt_pmux$4181

  Output signals:
    0: $flatten\DUT.\Brain.$procmux$1987_CMP
    1: $flatten\DUT.\Brain.$procmux$1988_CMP
    2: $flatten\DUT.\Brain.$procmux$1989_CMP

  State encoding:
    0:      3'--1  <RESET STATE>
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 17'----------------0   ->     0 3'100
      1:     0 17'------------1-0-1   ->     0 3'100
      2:     0 17'-------------1--1   ->     0 3'100
      3:     0 17'----000----1----1   ->     0 3'100
      4:     0 17'------1----1----1   ->     0 3'100
      5:     0 17'-----1-----1----1   ->     0 3'100
      6:     0 17'-1--------------1   ->     0 3'100
      7:     0 17'------------1-1-1   ->     2 3'100
      8:     0 17'----1------1----1   ->     2 3'100
      9:     1 17'----------------0   ->     0 3'001
     10:     1 17'--------1--1---01   ->     0 3'001
     11:     1 17'---------1-1---11   ->     0 3'001
     12:     1 17'-------------1--1   ->     0 3'001
     13:     1 17'----------11----1   ->     0 3'001
     14:     1 17'---------1-1---01   ->     1 3'001
     15:     1 17'--------1--1---11   ->     1 3'001
     16:     1 17'--------0001----1   ->     1 3'001
     17:     1 17'1---------------1   ->     1 3'001
     18:     2 17'----------------0   ->     0 3'010
     19:     2 17'-------------1--1   ->     0 3'010
     20:     2 17'---1---1---1----1   ->     0 3'010
     21:     2 17'--11-------1----1   ->     1 3'010
     22:     2 17'--0----0---1----1   ->     2 3'010
     23:     2 17'---0---1---1----1   ->     2 3'010
     24:     2 17'--10-------1----1   ->     2 3'010
     25:     2 17'1---------------1   ->     2 3'010

-------------------------------------

3.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\DUT.Brain.cycle$4382' from module `\top'.

3.12. Executing OPT pass (performing simple optimizations).

3.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

3.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

3.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~63 debug messages>

3.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

3.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.12.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\DUT.\regB.$procdff$4118 ($dff) from module top (D = $flatten\DUT.\regB.$0\Q[7:0], Q = \DUT.regB.Q).
Adding EN signal on $flatten\DUT.\regA.$procdff$4118 ($dff) from module top (D = $flatten\DUT.\regA.$0\Q[7:0], Q = \DUT.regA.Q).
Adding EN signal on $flatten\DUT.\Unit.\flag_reg.$procdff$4117 ($dff) from module top (D = $flatten\DUT.\Unit.\flag_reg.$0\Q[3:0], Q = \DUT.Unit.flag_reg.Q).
Adding EN signal on $flatten\DUT.\SP_SEL.$procdff$4131 ($dff) from module top (D = $flatten\DUT.\SP_SEL.$0\Q[2:0], Q = \DUT.SP_SEL.Q).
Adding EN signal on $flatten\DUT.\IR.$procdff$4118 ($dff) from module top (D = $flatten\DUT.\IR.$0\Q[7:0], Q = \DUT.IR.Q).
Adding EN signal on $flatten\DUT.\DBR.$procdff$4118 ($dff) from module top (D = $flatten\DUT.\DBR.$0\Q[7:0], Q = \DUT.DBR.Q).
Adding SRST signal on $flatten\DUT.\Brain.$procdff$4149 ($dff) from module top (D = \DUT.Brain.next_state, Q = \DUT.Brain.state, rval = 3'010).

3.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 9 unused wires.
<suppressed ~2 debug messages>

3.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~2 debug messages>

3.12.9. Rerunning OPT passes. (Maybe there is more to do..)

3.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~63 debug messages>

3.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

3.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

3.12.13. Executing OPT_DFF pass (perform DFF optimizations).

3.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

3.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.12.16. Rerunning OPT passes. (Maybe there is more to do..)

3.12.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~64 debug messages>

3.12.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

3.12.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.12.20. Executing OPT_DFF pass (perform DFF optimizations).

3.12.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

3.12.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.12.23. Finished OPT passes. (There is nothing left to do.)

3.13. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$4480 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$4495 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$4492 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$4486 ($ne).
Removed top 2 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$eq$i8008_core.sv:285$988 ($eq).
Removed top 2 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$eq$i8008_core.sv:309$989 ($eq).
Removed top 3 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$eq$i8008_core.sv:309$992 ($eq).
Removed top 2 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$eq$i8008_core.sv:389$1005 ($eq).
Removed top 2 bits (of 3) from mux cell top.$flatten\DUT.\Brain.$ternary$i8008_core.sv:389$1006 ($mux).
Removed top 1 bits (of 3) from mux cell top.$flatten\DUT.\Brain.$ternary$i8008_core.sv:479$1012 ($mux).
Removed top 1 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$eq$i8008_core.sv:509$1016 ($eq).
Removed top 1 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$eq$i8008_core.sv:629$1023 ($eq).
Removed top 1 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$eq$i8008_core.sv:629$1024 ($eq).
Removed top 1 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$eq$i8008_core.sv:629$1028 ($eq).
Removed top 1 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$eq$i8008_core.sv:638$1039 ($eq).
Removed top 1 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$eq$i8008_core.sv:638$1040 ($eq).
Removed top 1 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$eq$i8008_core.sv:638$1044 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$flatten\DUT.\Brain.$procmux$2010_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\DUT.\Brain.$procmux$2010_CMP2 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\DUT.\Brain.$procmux$2012_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$procmux$2088_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$4416 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$4441 ($eq).
Removed top 2 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$procmux$2497_CMP1 ($eq).
Removed top 1 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$procmux$2622_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$4462 ($eq).
Removed top 1 bits (of 3) from mux cell top.$flatten\DUT.\Brain.$procmux$3042 ($pmux).
Removed top 6 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$procmux$3064_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$procmux$3064_CMP1 ($eq).
Removed top 3 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$procmux$3064_CMP2 ($eq).
Removed top 3 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$procmux$3064_CMP3 ($eq).
Removed top 2 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$procmux$3066_CMP1 ($eq).
Removed top 2 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$procmux$3243_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$4458 ($eq).
Removed cell top.$flatten\DUT.\Brain.$procmux$3474 ($pmux).
Removed top 7 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$procmux$3521_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\DUT.\Brain.$procmux$3932_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$flatten\DUT.\Stack.$add$i8008_core.sv:756$1626 ($add).
Removed top 18 bits (of 32) from port Y of cell top.$flatten\DUT.\Stack.$add$i8008_core.sv:756$1626 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\DUT.\SP_SEL.$add$i8008_core.sv:817$1631 ($add).
Removed top 29 bits (of 32) from port Y of cell top.$flatten\DUT.\SP_SEL.$add$i8008_core.sv:817$1631 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\DUT.\SP_SEL.$sub$i8008_core.sv:819$1634 ($sub).
Removed top 29 bits (of 32) from port Y of cell top.$flatten\DUT.\SP_SEL.$sub$i8008_core.sv:819$1634 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$flatten\DUT.\Unit.$add$i8008_core.sv:187$959 ($add).
Removed top 23 bits (of 32) from port Y of cell top.$flatten\DUT.\Unit.$add$i8008_core.sv:187$959 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\DUT.\Unit.$sub$i8008_core.sv:188$960 ($sub).
Removed top 23 bits (of 32) from port Y of cell top.$flatten\DUT.\Unit.$sub$i8008_core.sv:188$960 ($sub).
Removed top 8 bits (of 9) from port B of cell top.$flatten\DUT.\Unit.$add$i8008_core.sv:211$964 ($add).
Removed top 8 bits (of 9) from port B of cell top.$flatten\DUT.\Unit.$sub$i8008_core.sv:213$968 ($sub).
Removed top 1 bits (of 3) from port B of cell top.$flatten\DUT.\Unit.$procmux$3939_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\DUT.\Unit.$procmux$3940_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$flatten\DUT.\Unit.$procmux$3941_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\DUT.\Unit.$procmux$3973_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\DUT.\Unit.$procmux$3974_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$flatten\DUT.\Unit.$procmux$3975_CMP0 ($eq).
Removed cell top.$flatten\DUT.\Brain.$procmux$2436 ($pmux).
Removed top 1 bits (of 2) from mux cell top.$flatten\DUT.\Brain.$procmux$2999 ($pmux).
Removed top 1 bits (of 3) from wire top.$flatten\DUT.\Brain.$40\ctrl_signals[5:3].
Removed top 2 bits (of 3) from wire top.$flatten\DUT.\Brain.$ternary$i8008_core.sv:389$1006_Y.
Removed top 1 bits (of 3) from wire top.$flatten\DUT.\Brain.$ternary$i8008_core.sv:479$1012_Y.
Removed top 29 bits (of 32) from wire top.$flatten\DUT.\SP_SEL.$add$i8008_core.sv:817$1631_Y.
Removed top 18 bits (of 32) from wire top.$flatten\DUT.\Stack.$add$i8008_core.sv:756$1626_Y.
Removed top 2 bits (of 12) from wire top.chip_inputs.

3.14. Executing PEEPOPT pass (run peephole optimizers).

3.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

3.16. Executing SHARE pass (SAT-based resource sharing).
Found 2 cells in module top that may be considered for resource sharing.
  Analyzing resource sharing options for $flatten\DUT.\rf.$memrd$\rf$i8008_core.sv:713$1668 ($memrd):
    Found 7 activation_patterns using ctrl signal { \DUT.R.Q \DUT.DBR.en \DUT.IR.en \DUT.regA.en \DUT.regB.en $flatten\DUT.\Stack.$logic_and$i8008_core.sv:753$1615_Y $flatten\DUT.\Stack.$logic_and$i8008_core.sv:751$1603_Y \DUT.Stack.Stack_ctrl [6] \DUT.Brain.ctrl_signals [11:10] \reset_n }.
    No candidates found.
  Analyzing resource sharing options for $flatten\DUT.\Stack.$memrd$\rf$i8008_core.sv:756$1625 ($memrd):
    Found 8 activation_patterns using ctrl signal { \DUT.R.Q \DUT.DBR.en \DUT.IR.en \DUT.regA.en \DUT.regB.en $flatten\DUT.\Stack.$logic_and$i8008_core.sv:753$1615_Y $flatten\DUT.\Stack.$logic_and$i8008_core.sv:751$1603_Y \DUT.Stack.Stack_ctrl [6] \DUT.Brain.ctrl_signals [10] \DUT.Brain.ctrl_signals [3] \reset_n }.
    No candidates found.

3.17. Executing TECHMAP pass (map to technology primitives).

3.17.1. Executing Verilog-2005 frontend: /Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/cmp2lut.v
Parsing Verilog input from `/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

3.17.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

3.18. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

3.20. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $flatten\DUT.\SP_SEL.$add$i8008_core.sv:817$1631 ($add).
  creating $macc model for $flatten\DUT.\SP_SEL.$sub$i8008_core.sv:819$1634 ($sub).
  creating $macc model for $flatten\DUT.\Stack.$add$i8008_core.sv:756$1626 ($add).
  creating $macc model for $flatten\DUT.\Unit.$add$i8008_core.sv:187$959 ($add).
  creating $macc model for $flatten\DUT.\Unit.$add$i8008_core.sv:210$961 ($add).
  creating $macc model for $flatten\DUT.\Unit.$add$i8008_core.sv:211$964 ($add).
  creating $macc model for $flatten\DUT.\Unit.$sub$i8008_core.sv:188$960 ($sub).
  creating $macc model for $flatten\DUT.\Unit.$sub$i8008_core.sv:212$965 ($sub).
  creating $macc model for $flatten\DUT.\Unit.$sub$i8008_core.sv:213$968 ($sub).
  creating $alu model for $macc $flatten\DUT.\Unit.$sub$i8008_core.sv:213$968.
  creating $alu model for $macc $flatten\DUT.\Unit.$sub$i8008_core.sv:212$965.
  creating $alu model for $macc $flatten\DUT.\Unit.$sub$i8008_core.sv:188$960.
  creating $alu model for $macc $flatten\DUT.\Unit.$add$i8008_core.sv:211$964.
  creating $alu model for $macc $flatten\DUT.\Unit.$add$i8008_core.sv:210$961.
  creating $alu model for $macc $flatten\DUT.\Unit.$add$i8008_core.sv:187$959.
  creating $alu model for $macc $flatten\DUT.\Stack.$add$i8008_core.sv:756$1626.
  creating $alu model for $macc $flatten\DUT.\SP_SEL.$sub$i8008_core.sv:819$1634.
  creating $alu model for $macc $flatten\DUT.\SP_SEL.$add$i8008_core.sv:817$1631.
  creating $alu cell for $flatten\DUT.\SP_SEL.$add$i8008_core.sv:817$1631: $auto$alumacc.cc:485:replace_alu$4504
  creating $alu cell for $flatten\DUT.\SP_SEL.$sub$i8008_core.sv:819$1634: $auto$alumacc.cc:485:replace_alu$4507
  creating $alu cell for $flatten\DUT.\Stack.$add$i8008_core.sv:756$1626: $auto$alumacc.cc:485:replace_alu$4510
  creating $alu cell for $flatten\DUT.\Unit.$add$i8008_core.sv:187$959: $auto$alumacc.cc:485:replace_alu$4513
  creating $alu cell for $flatten\DUT.\Unit.$add$i8008_core.sv:210$961: $auto$alumacc.cc:485:replace_alu$4516
  creating $alu cell for $flatten\DUT.\Unit.$add$i8008_core.sv:211$964: $auto$alumacc.cc:485:replace_alu$4519
  creating $alu cell for $flatten\DUT.\Unit.$sub$i8008_core.sv:188$960: $auto$alumacc.cc:485:replace_alu$4522
  creating $alu cell for $flatten\DUT.\Unit.$sub$i8008_core.sv:212$965: $auto$alumacc.cc:485:replace_alu$4525
  creating $alu cell for $flatten\DUT.\Unit.$sub$i8008_core.sv:213$968: $auto$alumacc.cc:485:replace_alu$4528
  created 9 $alu and 0 $macc cells.

3.21. Executing OPT pass (performing simple optimizations).

3.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.21.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~64 debug messages>

3.21.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

3.21.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.21.6. Executing OPT_DFF pass (perform DFF optimizations).

3.21.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

3.21.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.21.9. Finished OPT passes. (There is nothing left to do.)

3.22. Executing MEMORY pass.

3.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 8 transformations.

3.22.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 49 transformations.

3.22.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing top.DUT.Stack.rf write port 0.
  Analyzing top.DUT.Stack.rf write port 1.
  Analyzing top.DUT.Stack.rf write port 2.
  Analyzing top.DUT.Stack.rf write port 3.
  Analyzing top.DUT.Stack.rf write port 4.
  Analyzing top.DUT.Stack.rf write port 5.
  Analyzing top.DUT.Stack.rf write port 6.
  Analyzing top.DUT.Stack.rf write port 7.
  Analyzing top.DUT.Stack.rf write port 8.
  Analyzing top.DUT.Stack.rf write port 9.
  Analyzing top.DUT.Stack.rf write port 10.
  Analyzing top.DUT.rf.rf write port 0.
  Analyzing top.DUT.rf.rf write port 1.
  Analyzing top.DUT.rf.rf write port 2.
  Analyzing top.DUT.rf.rf write port 3.
  Analyzing top.DUT.rf.rf write port 4.
  Analyzing top.DUT.rf.rf write port 5.
  Analyzing top.DUT.rf.rf write port 6.
  Analyzing top.DUT.rf.rf write port 7.

3.22.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

3.22.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `\DUT.Stack.rf'[0] in module `\top': no output FF found.
Checking read port `\DUT.rf.rf'[0] in module `\top': no output FF found.
Checking read port address `\DUT.Stack.rf'[0] in module `\top': merged address FF to cell.
Checking read port address `\DUT.rf.rf'[0] in module `\top': no address FF found.

3.22.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

3.22.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating write ports of memory top.DUT.Stack.rf by address:
  Merging ports 0, 1 (address 3'000).
  Merging ports 0, 2 (address 3'000).
  Merging ports 0, 3 (address 3'000).
  Merging ports 0, 4 (address 3'000).
  Merging ports 6, 7 (address 3'110).
  Merging ports 8, 9 (address \DUT.SP_SEL.Q).
  Merging ports 8, 10 (address \DUT.SP_SEL.Q).
Consolidating write ports of memory top.DUT.Stack.rf by address:
  Merging ports 1, 2 (address 3'101).
Consolidating write ports of memory top.DUT.Stack.rf by address:
Consolidating write ports of memory top.DUT.rf.rf by address:
  Merging ports 0, 1 (address 3'000).
  Merging ports 0, 2 (address 3'000).
  Merging ports 0, 3 (address 3'000).
  Merging ports 0, 4 (address 3'000).
Consolidating write ports of memory top.DUT.rf.rf by address:
Consolidating write ports of memory top.DUT.Stack.rf using sat-based resource sharing:
Consolidating write ports of memory top.DUT.rf.rf using sat-based resource sharing:
  Checking group clocked with posedge \clk100, width 8: ports 1, 2, 3.
  Common input cone for all EN signals: 32 cells.
  Size of unconstrained SAT problem: 241 variables, 715 clauses
  According to SAT solver sharing of port 1 with port 2 is not possible.
  Merging port 3 into port 1.

3.22.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

3.22.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 9 unused cells and 9 unused wires.
<suppressed ~10 debug messages>

3.22.10. Executing MEMORY_COLLECT pass (generating $mem cells).

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

3.24. Executing MEMORY_LIBMAP pass (mapping memories to cells).
using FF mapping for memory top.DUT.Stack.rf
using FF mapping for memory top.DUT.rf.rf
<suppressed ~12 debug messages>

3.25. Executing TECHMAP pass (map to technology primitives).

3.25.1. Executing Verilog-2005 frontend: /Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K_'.
Successfully finished Verilog frontend.

3.25.2. Executing Verilog-2005 frontend: /Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/spram_map.v
Parsing Verilog input from `/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/spram_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_SPRAM_'.
Successfully finished Verilog frontend.

3.25.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

3.26. Executing ICE40_BRAMINIT pass.

3.27. Executing OPT pass (performing simple optimizations).

3.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~144 debug messages>

3.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

3.27.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$4493 ($dffe) from module top (D = \DUT.DBR.d, Q = \DUT.DBR.Q, rval = 8'00000000).
Adding SRST signal on $auto$ff.cc:266:slice$4481 ($dffe) from module top (D = \DUT.IR.d, Q = \DUT.regA.Q, rval = 8'00000000).
Adding SRST signal on $auto$ff.cc:266:slice$4490 ($dffe) from module top (D = \DUT.IR.d, Q = \DUT.IR.Q, rval = 8'00000000).
Adding SRST signal on $auto$ff.cc:266:slice$4478 ($dffe) from module top (D = \DUT.IR.d, Q = \DUT.regB.Q, rval = 8'00000000).
Adding SRST signal on $auto$ff.cc:266:slice$4484 ($dffe) from module top (D = \DUT.Unit.flag_reg.d, Q = \DUT.Unit.flag_reg.Q, rval = 4'0000).

3.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 25 unused cells and 65 unused wires.
<suppressed ~26 debug messages>

3.27.5. Rerunning OPT passes. (Removed registers in this run.)

3.27.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~2 debug messages>

3.27.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.27.8. Executing OPT_DFF pass (perform DFF optimizations).

3.27.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

3.27.10. Finished fast OPT passes.

3.28. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory \DUT.Stack.rf in module \top:
  created 8 $dff cells and 0 static cells of width 14.
Extracted addr FF from read port 0 of top.DUT.Stack.rf: $\DUT.Stack.rf$rdreg[0]
  read interface: 1 $dff and 7 $mux cells.
  write interface: 32 write mux blocks.
Mapping memory \DUT.rf.rf in module \top:
  created 8 $dff cells and 0 static cells of width 8.
  read interface: 0 $dff and 7 $mux cells.
  write interface: 24 write mux blocks.

3.29. Executing OPT pass (performing simple optimizations).

3.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~93 debug messages>

3.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $auto$memory_share.cc:453:consolidate_wr_using_sat$4556: $auto$rtlil.cc:2403:ReduceOr$4550 -> 1'1
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~80 debug messages>

3.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2074: { $auto$opt_reduce.cc:134:opt_pmux$4987 $flatten\DUT.\Brain.$41\ctrl_signals[14:10] [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$2336:
      Old ports: A=2'11, B=2'01, Y=$flatten\DUT.\Brain.$74\ctrl_signals[1:0]
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\Brain.$74\ctrl_signals[1:0] [1]
      New connections: $flatten\DUT.\Brain.$74\ctrl_signals[1:0] [0] = 1'1
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$2392:
      Old ports: A=3'101, B=3'000, Y=$flatten\DUT.\Brain.$80\ctrl_signals[14:11] [3:1]
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\Brain.$80\ctrl_signals[14:11] [1]
      New connections: $flatten\DUT.\Brain.$80\ctrl_signals[14:11] [3:2] = { $flatten\DUT.\Brain.$80\ctrl_signals[14:11] [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$2468:
      Old ports: A=3'110, B=3'000, Y=$flatten\DUT.\Brain.$76\ctrl_signals[14:11] [3:1]
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\Brain.$76\ctrl_signals[14:11] [2]
      New connections: { $flatten\DUT.\Brain.$76\ctrl_signals[14:11] [3] $flatten\DUT.\Brain.$76\ctrl_signals[14:11] [1] } = { $flatten\DUT.\Brain.$76\ctrl_signals[14:11] [2] 1'0 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2574: { $auto$opt_reduce.cc:134:opt_pmux$4989 $flatten\DUT.\Brain.$41\ctrl_signals[14:10] [0] }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2641: { $flatten\DUT.\Brain.$procmux$2009_CMP $auto$opt_reduce.cc:134:opt_pmux$4991 }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$2894:
      Old ports: A=3'101, B=3'000, Y=$flatten\DUT.\Brain.$55\ctrl_signals[14:11] [3:1]
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\Brain.$55\ctrl_signals[14:11] [1]
      New connections: $flatten\DUT.\Brain.$55\ctrl_signals[14:11] [3:2] = { $flatten\DUT.\Brain.$55\ctrl_signals[14:11] [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$2949:
      Old ports: A=3'110, B=3'000, Y=$flatten\DUT.\Brain.$50\ctrl_signals[14:11] [3:1]
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\Brain.$50\ctrl_signals[14:11] [2]
      New connections: { $flatten\DUT.\Brain.$50\ctrl_signals[14:11] [3] $flatten\DUT.\Brain.$50\ctrl_signals[14:11] [1] } = { $flatten\DUT.\Brain.$50\ctrl_signals[14:11] [2] 1'0 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2999: $auto$opt_reduce.cc:134:opt_pmux$4993
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3047: \DUT.Brain.cycle [2:1]
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$3089:
      Old ports: A={ 2'10 $auto$wreduce.cc:455:run$4498 [0] }, B=3'000, Y=$flatten\DUT.\Brain.$36\ctrl_signals[24:16] [4:2]
      New ports: A={ 1'1 $auto$wreduce.cc:455:run$4498 [0] }, B=2'00, Y={ $flatten\DUT.\Brain.$36\ctrl_signals[24:16] [4] $flatten\DUT.\Brain.$36\ctrl_signals[24:16] [2] }
      New connections: $flatten\DUT.\Brain.$36\ctrl_signals[24:16] [3] = 1'0
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$3229:
      Old ports: A=3'101, B=3'010, Y=$flatten\DUT.\Brain.$6\next_state[2:0]
      New ports: A=2'01, B=2'10, Y=$flatten\DUT.\Brain.$6\next_state[2:0] [1:0]
      New connections: $flatten\DUT.\Brain.$6\next_state[2:0] [2] = $flatten\DUT.\Brain.$6\next_state[2:0] [0]
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$3535:
      Old ports: A=3'011, B=3'110, Y=$flatten\DUT.\Brain.$4\next_state[2:0]
      New ports: A=2'01, B=2'10, Y={ $flatten\DUT.\Brain.$4\next_state[2:0] [2] $flatten\DUT.\Brain.$4\next_state[2:0] [0] }
      New connections: $flatten\DUT.\Brain.$4\next_state[2:0] [1] = 1'1
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3688: $auto$opt_reduce.cc:134:opt_pmux$4995
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3748: { $auto$opt_reduce.cc:134:opt_pmux$4997 $flatten\DUT.\Brain.$41\ctrl_signals[14:10] [0] }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3888: \DUT.Brain.cycle [0]
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$ternary$i8008_core.sv:310$995:
      Old ports: A=3'000, B=3'111, Y=$flatten\DUT.\Brain.$ternary$i8008_core.sv:310$995_Y
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\Brain.$ternary$i8008_core.sv:310$995_Y [0]
      New connections: $flatten\DUT.\Brain.$ternary$i8008_core.sv:310$995_Y [2:1] = { $flatten\DUT.\Brain.$ternary$i8008_core.sv:310$995_Y [0] $flatten\DUT.\Brain.$ternary$i8008_core.sv:310$995_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$ternary$i8008_core.sv:440$1008:
      Old ports: A=2'01, B=2'11, Y=$flatten\DUT.\Brain.$ternary$i8008_core.sv:440$1008_Y
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\Brain.$ternary$i8008_core.sv:440$1008_Y [1]
      New connections: $flatten\DUT.\Brain.$ternary$i8008_core.sv:440$1008_Y [0] = 1'1
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$ternary$i8008_core.sv:479$1012:
      Old ports: A=2'00, B=2'10, Y=$auto$wreduce.cc:455:run$4499 [1:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$4499 [1]
      New connections: $auto$wreduce.cc:455:run$4499 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$ternary$i8008_core.sv:752$1613:
      Old ports: A=\DUT.DBR.d, B={ 2'00 \DUT.DBR.d [5:3] 3'000 }, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:752$1564_DATA[13:0]$1578 [7:0]
      New ports: A={ \DUT.DBR.d [7:6] \DUT.DBR.d [2:0] }, B=5'00000, Y={ $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:752$1564_DATA[13:0]$1578 [7:6] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:752$1564_DATA[13:0]$1578 [2:0] }
      New connections: $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.sv:752$1564_DATA[13:0]$1578 [5:3] = \DUT.DBR.d [5:3]
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4986: { $flatten\DUT.\Brain.$procmux$2011_CMP $flatten\DUT.\Brain.$procmux$2010_CMP $flatten\DUT.\Brain.$procmux$2009_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4988: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2010_CMP $flatten\DUT.\Brain.$procmux$2009_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4990: { $flatten\DUT.\Brain.$procmux$2010_CMP $flatten\DUT.\Brain.$41\ctrl_signals[14:10] [0] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4992: { $flatten\DUT.\Brain.$procmux$2011_CMP $flatten\DUT.\Brain.$procmux$2010_CMP $flatten\DUT.\Brain.$procmux$2009_CMP $flatten\DUT.\Brain.$41\ctrl_signals[14:10] [0] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4994: { $flatten\DUT.\Brain.$procmux$2012_CMP $flatten\DUT.\Brain.$procmux$2011_CMP $flatten\DUT.\Brain.$procmux$2009_CMP $flatten\DUT.\Brain.$41\ctrl_signals[14:10] [0] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$4996: { $flatten\DUT.\Brain.$procmux$2011_CMP $flatten\DUT.\Brain.$procmux$2010_CMP $flatten\DUT.\Brain.$procmux$2009_CMP }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$2133:
      Old ports: A=$flatten\DUT.\Brain.$ternary$i8008_core.sv:310$995_Y, B=3'010, Y=$flatten\DUT.\Brain.$12\next_state[2:0]
      New ports: A={ $flatten\DUT.\Brain.$ternary$i8008_core.sv:310$995_Y [0] $flatten\DUT.\Brain.$ternary$i8008_core.sv:310$995_Y [0] }, B=2'10, Y=$flatten\DUT.\Brain.$12\next_state[2:0] [1:0]
      New connections: $flatten\DUT.\Brain.$12\next_state[2:0] [2] = $flatten\DUT.\Brain.$12\next_state[2:0] [0]
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$2161:
      Old ports: A=3'010, B=$flatten\DUT.\Brain.$ternary$i8008_core.sv:310$995_Y, Y=$flatten\DUT.\Brain.$11\next_state[2:0]
      New ports: A=2'10, B={ $flatten\DUT.\Brain.$ternary$i8008_core.sv:310$995_Y [0] $flatten\DUT.\Brain.$ternary$i8008_core.sv:310$995_Y [0] }, Y=$flatten\DUT.\Brain.$11\next_state[2:0] [1:0]
      New connections: $flatten\DUT.\Brain.$11\next_state[2:0] [2] = $flatten\DUT.\Brain.$11\next_state[2:0] [0]
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$2620:
      Old ports: A=$flatten\DUT.\Brain.$ternary$i8008_core.sv:310$995_Y, B={ 1'0 $auto$wreduce.cc:455:run$4499 [1:0] }, Y=$flatten\DUT.\Brain.$8\next_state[2:0]
      New ports: A={ $flatten\DUT.\Brain.$ternary$i8008_core.sv:310$995_Y [0] $flatten\DUT.\Brain.$ternary$i8008_core.sv:310$995_Y [0] }, B={ $auto$wreduce.cc:455:run$4499 [1] 1'0 }, Y=$flatten\DUT.\Brain.$8\next_state[2:0] [1:0]
      New connections: $flatten\DUT.\Brain.$8\next_state[2:0] [2] = $flatten\DUT.\Brain.$8\next_state[2:0] [0]
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$3726:
      Old ports: A=3'010, B=$flatten\DUT.\Brain.$ternary$i8008_core.sv:310$995_Y, Y=$flatten\DUT.\Brain.$5\next_state[2:0]
      New ports: A=2'10, B={ $flatten\DUT.\Brain.$ternary$i8008_core.sv:310$995_Y [0] $flatten\DUT.\Brain.$ternary$i8008_core.sv:310$995_Y [0] }, Y=$flatten\DUT.\Brain.$5\next_state[2:0] [1:0]
      New connections: $flatten\DUT.\Brain.$5\next_state[2:0] [2] = $flatten\DUT.\Brain.$5\next_state[2:0] [0]
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$3836:
      Old ports: A=9'000000000, B={ $auto$opt_reduce.cc:134:opt_pmux$4183 $flatten\DUT.\Brain.$36\ctrl_signals[24:16] [7:2] $auto$opt_reduce.cc:134:opt_pmux$4261 $flatten\DUT.\Brain.$36\ctrl_signals[24:16] [0] }, Y=$flatten\DUT.\Brain.$10\ctrl_signals[24:16]
      New ports: A=8'00000000, B={ $auto$opt_reduce.cc:134:opt_pmux$4183 $flatten\DUT.\Brain.$36\ctrl_signals[24:16] [7:4] $flatten\DUT.\Brain.$36\ctrl_signals[24:16] [2] $auto$opt_reduce.cc:134:opt_pmux$4261 $flatten\DUT.\Brain.$36\ctrl_signals[24:16] [0] }, Y={ $flatten\DUT.\Brain.$10\ctrl_signals[24:16] [8:4] $flatten\DUT.\Brain.$10\ctrl_signals[24:16] [2:0] }
      New connections: $flatten\DUT.\Brain.$10\ctrl_signals[24:16] [3] = 1'0
  Optimizing cells in module \top.
    Consolidated identical input bits for $pmux cell $flatten\DUT.\Brain.$procmux$2185:
      Old ports: A=$flatten\DUT.\Brain.$ternary$i8008_core.sv:310$995_Y, B={ 3'010 $flatten\DUT.\Brain.$11\next_state[2:0] $flatten\DUT.\Brain.$12\next_state[2:0] }, Y=$flatten\DUT.\Brain.$10\next_state[2:0]
      New ports: A={ $flatten\DUT.\Brain.$ternary$i8008_core.sv:310$995_Y [0] $flatten\DUT.\Brain.$ternary$i8008_core.sv:310$995_Y [0] }, B={ 2'10 $flatten\DUT.\Brain.$11\next_state[2:0] [1:0] $flatten\DUT.\Brain.$12\next_state[2:0] [1:0] }, Y=$flatten\DUT.\Brain.$10\next_state[2:0] [1:0]
      New connections: $flatten\DUT.\Brain.$10\next_state[2:0] [2] = $flatten\DUT.\Brain.$10\next_state[2:0] [0]
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$3894:
      Old ports: A=3'000, B=$flatten\DUT.\Brain.$10\ctrl_signals[24:16] [4:2], Y=\DUT.Unit.ALU_ctrl [5:3]
      New ports: A=2'00, B={ $flatten\DUT.\Brain.$10\ctrl_signals[24:16] [4] $flatten\DUT.\Brain.$10\ctrl_signals[24:16] [2] }, Y={ \DUT.Unit.ALU_ctrl [5] \DUT.Unit.ALU_ctrl [3] }
      New connections: \DUT.Unit.ALU_ctrl [4] = 1'0
  Optimizing cells in module \top.
Performed a total of 33 changes.

3.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~33 debug messages>
Removed a total of 11 cells.

3.29.6. Executing OPT_DFF pass (perform DFF optimizations).

3.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2 unused cells and 113 unused wires.
<suppressed ~3 debug messages>

3.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~5 debug messages>

3.29.9. Rerunning OPT passes. (Maybe there is more to do..)

3.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/6 on $pmux $flatten\DUT.\Unit.$procmux$3983.
    dead port 2/6 on $pmux $flatten\DUT.\Unit.$procmux$3983.
Removed 2 multiplexer ports.
<suppressed ~82 debug messages>

3.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $pmux cell $flatten\DUT.\Brain.$procmux$2379:
      Old ports: A={ $flatten\DUT.\Brain.$74\ctrl_signals[1:0] [1] $flatten\DUT.\Brain.$74\ctrl_signals[1:0] [1] 1'0 $flatten\DUT.\Brain.$74\ctrl_signals[1:0] [1] }, B={ $flatten\DUT.\Brain.$74\ctrl_signals[1:0] [1] 1'0 $flatten\DUT.\Brain.$74\ctrl_signals[1:0] [1] $flatten\DUT.\Brain.$74\ctrl_signals[1:0] [1] 4'0000 }, Y=$flatten\DUT.\Brain.$70\ctrl_signals[14:11]
      New ports: A={ $flatten\DUT.\Brain.$74\ctrl_signals[1:0] [1] 1'0 $flatten\DUT.\Brain.$74\ctrl_signals[1:0] [1] }, B={ 1'0 $flatten\DUT.\Brain.$74\ctrl_signals[1:0] [1] $flatten\DUT.\Brain.$74\ctrl_signals[1:0] [1] 3'000 }, Y=$flatten\DUT.\Brain.$70\ctrl_signals[14:11] [2:0]
      New connections: $flatten\DUT.\Brain.$70\ctrl_signals[14:11] [3] = $flatten\DUT.\Brain.$70\ctrl_signals[14:11] [0]
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$2620:
      Old ports: A={ $auto$wreduce.cc:455:run$4499 [1] $auto$wreduce.cc:455:run$4499 [1] }, B={ $auto$wreduce.cc:455:run$4499 [1] 1'0 }, Y={ $flatten\DUT.\Brain.$8\next_state[2:0] [1] $flatten\DUT.\Brain.$8\next_state[2:0] [2] }
      New ports: A=$auto$wreduce.cc:455:run$4499 [1], B=1'0, Y=$flatten\DUT.\Brain.$8\next_state[2:0] [2]
      New connections: $flatten\DUT.\Brain.$8\next_state[2:0] [1] = $auto$wreduce.cc:455:run$4499 [1]
  Optimizing cells in module \top.
Performed a total of 2 changes.

3.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.29.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $memory\DUT.rf.rf[7]$4803 ($dff) from module top (D = $auto$rtlil.cc:2496:Mux$4554, Q = \DUT.rf.rf[7]).
Adding SRST signal on $memory\DUT.rf.rf[6]$4801 ($dff) from module top (D = $memory\DUT.rf.rf$wrmux[6][1][0]$y$4961, Q = \DUT.rf.rf[6], rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$4999 ($sdff) from module top (D = $auto$rtlil.cc:2496:Mux$4554, Q = \DUT.rf.rf[6]).
Adding EN signal on $memory\DUT.rf.rf[5]$4799 ($dff) from module top (D = $auto$rtlil.cc:2496:Mux$4554, Q = \DUT.rf.rf[5]).
Adding EN signal on $memory\DUT.rf.rf[4]$4797 ($dff) from module top (D = $memory\DUT.rf.rf$wrmux[4][1][0]$y$4925, Q = \DUT.rf.rf[4]).
Adding EN signal on $memory\DUT.rf.rf[3]$4795 ($dff) from module top (D = $memory\DUT.rf.rf$wrmux[3][1][0]$y$4905, Q = \DUT.rf.rf[3]).
Adding EN signal on $memory\DUT.rf.rf[2]$4793 ($dff) from module top (D = $memory\DUT.rf.rf$wrmux[2][1][0]$y$4887, Q = \DUT.rf.rf[2]).
Adding EN signal on $memory\DUT.rf.rf[1]$4791 ($dff) from module top (D = $memory\DUT.rf.rf$wrmux[1][1][0]$y$4865, Q = \DUT.rf.rf[1]).
Adding EN signal on $memory\DUT.rf.rf[0]$4789 ($dff) from module top (D = $memory\DUT.rf.rf$wrmux[0][1][0]$y$4843, Q = \DUT.rf.rf[0]).
Adding EN signal on $memory\DUT.Stack.rf[7]$4596 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[7][2][0]$y$4784, Q = \DUT.Stack.rf[7] [7:0]).
Adding EN signal on $memory\DUT.Stack.rf[7]$4596 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[7][2][8]$y$4788, Q = \DUT.Stack.rf[7] [13:8]).
Adding EN signal on $memory\DUT.Stack.rf[6]$4594 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[6][2][8]$y$4770, Q = \DUT.Stack.rf[6] [13:8]).
Adding EN signal on $memory\DUT.Stack.rf[6]$4594 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[6][2][0]$y$4766, Q = \DUT.Stack.rf[6] [7:0]).
Adding EN signal on $memory\DUT.Stack.rf[5]$4592 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[5][2][0]$y$4746, Q = \DUT.Stack.rf[5] [7:0]).
Adding EN signal on $memory\DUT.Stack.rf[5]$4592 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[5][2][8]$y$4750, Q = \DUT.Stack.rf[5] [13:8]).
Adding EN signal on $memory\DUT.Stack.rf[4]$4590 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[4][2][0]$y$4728, Q = \DUT.Stack.rf[4] [7:0]).
Adding EN signal on $memory\DUT.Stack.rf[4]$4590 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[4][2][8]$y$4732, Q = \DUT.Stack.rf[4] [13:8]).
Adding EN signal on $memory\DUT.Stack.rf[3]$4588 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[3][2][0]$y$4704, Q = \DUT.Stack.rf[3] [7:0]).
Adding EN signal on $memory\DUT.Stack.rf[3]$4588 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[3][2][8]$y$4708, Q = \DUT.Stack.rf[3] [13:8]).
Adding EN signal on $memory\DUT.Stack.rf[2]$4586 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[2][2][0]$y$4686, Q = \DUT.Stack.rf[2] [7:0]).
Adding EN signal on $memory\DUT.Stack.rf[2]$4586 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[2][2][8]$y$4690, Q = \DUT.Stack.rf[2] [13:8]).
Adding EN signal on $memory\DUT.Stack.rf[1]$4584 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[1][2][0]$y$4664, Q = \DUT.Stack.rf[1] [7:0]).
Adding EN signal on $memory\DUT.Stack.rf[1]$4584 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[1][2][8]$y$4668, Q = \DUT.Stack.rf[1] [13:8]).
Adding EN signal on $memory\DUT.Stack.rf[0]$4582 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[0][2][8]$y$4648, Q = \DUT.Stack.rf[0] [13:8]).
Adding EN signal on $memory\DUT.Stack.rf[0]$4582 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[0][2][0]$y$4644, Q = \DUT.Stack.rf[0] [7:0]).

3.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 4 unused cells and 8 unused wires.
<suppressed ~5 debug messages>

3.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.29.16. Rerunning OPT passes. (Maybe there is more to do..)

3.29.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~79 debug messages>

3.29.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory\DUT.Stack.rf$wrmux[0][0][0]$4623:
      Old ports: A=14'00000000000000, B=14'x, Y=$memory\DUT.Stack.rf$wrmux[0][0][0]$y$4624
      New ports: A=1'0, B=1'x, Y=$memory\DUT.Stack.rf$wrmux[0][0][0]$y$4624 [0]
      New connections: $memory\DUT.Stack.rf$wrmux[0][0][0]$y$4624 [13:1] = { $memory\DUT.Stack.rf$wrmux[0][0][0]$y$4624 [0] $memory\DUT.Stack.rf$wrmux[0][0][0]$y$4624 [0] $memory\DUT.Stack.rf$wrmux[0][0][0]$y$4624 [0] $memory\DUT.Stack.rf$wrmux[0][0][0]$y$4624 [0] $memory\DUT.Stack.rf$wrmux[0][0][0]$y$4624 [0] $memory\DUT.Stack.rf$wrmux[0][0][0]$y$4624 [0] $memory\DUT.Stack.rf$wrmux[0][0][0]$y$4624 [0] $memory\DUT.Stack.rf$wrmux[0][0][0]$y$4624 [0] $memory\DUT.Stack.rf$wrmux[0][0][0]$y$4624 [0] $memory\DUT.Stack.rf$wrmux[0][0][0]$y$4624 [0] $memory\DUT.Stack.rf$wrmux[0][0][0]$y$4624 [0] $memory\DUT.Stack.rf$wrmux[0][0][0]$y$4624 [0] $memory\DUT.Stack.rf$wrmux[0][0][0]$y$4624 [0] }
    Consolidated identical input bits for $mux cell $memory\DUT.Stack.rf$wrmux[1][0][0]$4651:
      Old ports: A=14'00000000000000, B=14'x, Y=$memory\DUT.Stack.rf$wrmux[1][0][0]$y$4652
      New ports: A=1'0, B=1'x, Y=$memory\DUT.Stack.rf$wrmux[1][0][0]$y$4652 [0]
      New connections: $memory\DUT.Stack.rf$wrmux[1][0][0]$y$4652 [13:1] = { $memory\DUT.Stack.rf$wrmux[1][0][0]$y$4652 [0] $memory\DUT.Stack.rf$wrmux[1][0][0]$y$4652 [0] $memory\DUT.Stack.rf$wrmux[1][0][0]$y$4652 [0] $memory\DUT.Stack.rf$wrmux[1][0][0]$y$4652 [0] $memory\DUT.Stack.rf$wrmux[1][0][0]$y$4652 [0] $memory\DUT.Stack.rf$wrmux[1][0][0]$y$4652 [0] $memory\DUT.Stack.rf$wrmux[1][0][0]$y$4652 [0] $memory\DUT.Stack.rf$wrmux[1][0][0]$y$4652 [0] $memory\DUT.Stack.rf$wrmux[1][0][0]$y$4652 [0] $memory\DUT.Stack.rf$wrmux[1][0][0]$y$4652 [0] $memory\DUT.Stack.rf$wrmux[1][0][0]$y$4652 [0] $memory\DUT.Stack.rf$wrmux[1][0][0]$y$4652 [0] $memory\DUT.Stack.rf$wrmux[1][0][0]$y$4652 [0] }
    Consolidated identical input bits for $mux cell $memory\DUT.Stack.rf$wrmux[2][0][0]$4671:
      Old ports: A=14'00000000000000, B=14'x, Y=$memory\DUT.Stack.rf$wrmux[2][0][0]$y$4672
      New ports: A=1'0, B=1'x, Y=$memory\DUT.Stack.rf$wrmux[2][0][0]$y$4672 [0]
      New connections: $memory\DUT.Stack.rf$wrmux[2][0][0]$y$4672 [13:1] = { $memory\DUT.Stack.rf$wrmux[2][0][0]$y$4672 [0] $memory\DUT.Stack.rf$wrmux[2][0][0]$y$4672 [0] $memory\DUT.Stack.rf$wrmux[2][0][0]$y$4672 [0] $memory\DUT.Stack.rf$wrmux[2][0][0]$y$4672 [0] $memory\DUT.Stack.rf$wrmux[2][0][0]$y$4672 [0] $memory\DUT.Stack.rf$wrmux[2][0][0]$y$4672 [0] $memory\DUT.Stack.rf$wrmux[2][0][0]$y$4672 [0] $memory\DUT.Stack.rf$wrmux[2][0][0]$y$4672 [0] $memory\DUT.Stack.rf$wrmux[2][0][0]$y$4672 [0] $memory\DUT.Stack.rf$wrmux[2][0][0]$y$4672 [0] $memory\DUT.Stack.rf$wrmux[2][0][0]$y$4672 [0] $memory\DUT.Stack.rf$wrmux[2][0][0]$y$4672 [0] $memory\DUT.Stack.rf$wrmux[2][0][0]$y$4672 [0] }
    Consolidated identical input bits for $mux cell $memory\DUT.Stack.rf$wrmux[3][0][0]$4693:
      Old ports: A=14'00000000000000, B=14'x, Y=$memory\DUT.Stack.rf$wrmux[3][0][0]$y$4694
      New ports: A=1'0, B=1'x, Y=$memory\DUT.Stack.rf$wrmux[3][0][0]$y$4694 [0]
      New connections: $memory\DUT.Stack.rf$wrmux[3][0][0]$y$4694 [13:1] = { $memory\DUT.Stack.rf$wrmux[3][0][0]$y$4694 [0] $memory\DUT.Stack.rf$wrmux[3][0][0]$y$4694 [0] $memory\DUT.Stack.rf$wrmux[3][0][0]$y$4694 [0] $memory\DUT.Stack.rf$wrmux[3][0][0]$y$4694 [0] $memory\DUT.Stack.rf$wrmux[3][0][0]$y$4694 [0] $memory\DUT.Stack.rf$wrmux[3][0][0]$y$4694 [0] $memory\DUT.Stack.rf$wrmux[3][0][0]$y$4694 [0] $memory\DUT.Stack.rf$wrmux[3][0][0]$y$4694 [0] $memory\DUT.Stack.rf$wrmux[3][0][0]$y$4694 [0] $memory\DUT.Stack.rf$wrmux[3][0][0]$y$4694 [0] $memory\DUT.Stack.rf$wrmux[3][0][0]$y$4694 [0] $memory\DUT.Stack.rf$wrmux[3][0][0]$y$4694 [0] $memory\DUT.Stack.rf$wrmux[3][0][0]$y$4694 [0] }
    Consolidated identical input bits for $mux cell $memory\DUT.Stack.rf$wrmux[4][0][0]$4711:
      Old ports: A=14'00000000000000, B=14'x, Y=$memory\DUT.Stack.rf$wrmux[4][0][0]$y$4712
      New ports: A=1'0, B=1'x, Y=$memory\DUT.Stack.rf$wrmux[4][0][0]$y$4712 [0]
      New connections: $memory\DUT.Stack.rf$wrmux[4][0][0]$y$4712 [13:1] = { $memory\DUT.Stack.rf$wrmux[4][0][0]$y$4712 [0] $memory\DUT.Stack.rf$wrmux[4][0][0]$y$4712 [0] $memory\DUT.Stack.rf$wrmux[4][0][0]$y$4712 [0] $memory\DUT.Stack.rf$wrmux[4][0][0]$y$4712 [0] $memory\DUT.Stack.rf$wrmux[4][0][0]$y$4712 [0] $memory\DUT.Stack.rf$wrmux[4][0][0]$y$4712 [0] $memory\DUT.Stack.rf$wrmux[4][0][0]$y$4712 [0] $memory\DUT.Stack.rf$wrmux[4][0][0]$y$4712 [0] $memory\DUT.Stack.rf$wrmux[4][0][0]$y$4712 [0] $memory\DUT.Stack.rf$wrmux[4][0][0]$y$4712 [0] $memory\DUT.Stack.rf$wrmux[4][0][0]$y$4712 [0] $memory\DUT.Stack.rf$wrmux[4][0][0]$y$4712 [0] $memory\DUT.Stack.rf$wrmux[4][0][0]$y$4712 [0] }
    Consolidated identical input bits for $mux cell $memory\DUT.Stack.rf$wrmux[5][1][0]$4739:
      Old ports: A=14'00000000000000, B=14'x, Y=$memory\DUT.Stack.rf$wrmux[5][1][0]$y$4740
      New ports: A=1'0, B=1'x, Y=$memory\DUT.Stack.rf$wrmux[5][1][0]$y$4740 [0]
      New connections: $memory\DUT.Stack.rf$wrmux[5][1][0]$y$4740 [13:1] = { $memory\DUT.Stack.rf$wrmux[5][1][0]$y$4740 [0] $memory\DUT.Stack.rf$wrmux[5][1][0]$y$4740 [0] $memory\DUT.Stack.rf$wrmux[5][1][0]$y$4740 [0] $memory\DUT.Stack.rf$wrmux[5][1][0]$y$4740 [0] $memory\DUT.Stack.rf$wrmux[5][1][0]$y$4740 [0] $memory\DUT.Stack.rf$wrmux[5][1][0]$y$4740 [0] $memory\DUT.Stack.rf$wrmux[5][1][0]$y$4740 [0] $memory\DUT.Stack.rf$wrmux[5][1][0]$y$4740 [0] $memory\DUT.Stack.rf$wrmux[5][1][0]$y$4740 [0] $memory\DUT.Stack.rf$wrmux[5][1][0]$y$4740 [0] $memory\DUT.Stack.rf$wrmux[5][1][0]$y$4740 [0] $memory\DUT.Stack.rf$wrmux[5][1][0]$y$4740 [0] $memory\DUT.Stack.rf$wrmux[5][1][0]$y$4740 [0] }
    Consolidated identical input bits for $mux cell $memory\DUT.Stack.rf$wrmux[6][1][0]$4757:
      Old ports: A=14'00000000000000, B=14'x, Y=$memory\DUT.Stack.rf$wrmux[6][1][0]$y$4758
      New ports: A=1'0, B=1'x, Y=$memory\DUT.Stack.rf$wrmux[6][1][0]$y$4758 [0]
      New connections: $memory\DUT.Stack.rf$wrmux[6][1][0]$y$4758 [13:1] = { $memory\DUT.Stack.rf$wrmux[6][1][0]$y$4758 [0] $memory\DUT.Stack.rf$wrmux[6][1][0]$y$4758 [0] $memory\DUT.Stack.rf$wrmux[6][1][0]$y$4758 [0] $memory\DUT.Stack.rf$wrmux[6][1][0]$y$4758 [0] $memory\DUT.Stack.rf$wrmux[6][1][0]$y$4758 [0] $memory\DUT.Stack.rf$wrmux[6][1][0]$y$4758 [0] $memory\DUT.Stack.rf$wrmux[6][1][0]$y$4758 [0] $memory\DUT.Stack.rf$wrmux[6][1][0]$y$4758 [0] $memory\DUT.Stack.rf$wrmux[6][1][0]$y$4758 [0] $memory\DUT.Stack.rf$wrmux[6][1][0]$y$4758 [0] $memory\DUT.Stack.rf$wrmux[6][1][0]$y$4758 [0] $memory\DUT.Stack.rf$wrmux[6][1][0]$y$4758 [0] $memory\DUT.Stack.rf$wrmux[6][1][0]$y$4758 [0] }
    Consolidated identical input bits for $mux cell $memory\DUT.Stack.rf$wrmux[7][1][0]$4777:
      Old ports: A=14'00000000000000, B=14'x, Y=$memory\DUT.Stack.rf$wrmux[7][1][0]$y$4778
      New ports: A=1'0, B=1'x, Y=$memory\DUT.Stack.rf$wrmux[7][1][0]$y$4778 [0]
      New connections: $memory\DUT.Stack.rf$wrmux[7][1][0]$y$4778 [13:1] = { $memory\DUT.Stack.rf$wrmux[7][1][0]$y$4778 [0] $memory\DUT.Stack.rf$wrmux[7][1][0]$y$4778 [0] $memory\DUT.Stack.rf$wrmux[7][1][0]$y$4778 [0] $memory\DUT.Stack.rf$wrmux[7][1][0]$y$4778 [0] $memory\DUT.Stack.rf$wrmux[7][1][0]$y$4778 [0] $memory\DUT.Stack.rf$wrmux[7][1][0]$y$4778 [0] $memory\DUT.Stack.rf$wrmux[7][1][0]$y$4778 [0] $memory\DUT.Stack.rf$wrmux[7][1][0]$y$4778 [0] $memory\DUT.Stack.rf$wrmux[7][1][0]$y$4778 [0] $memory\DUT.Stack.rf$wrmux[7][1][0]$y$4778 [0] $memory\DUT.Stack.rf$wrmux[7][1][0]$y$4778 [0] $memory\DUT.Stack.rf$wrmux[7][1][0]$y$4778 [0] $memory\DUT.Stack.rf$wrmux[7][1][0]$y$4778 [0] }
    Consolidated identical input bits for $mux cell $memory\DUT.rf.rf$wrmux[0][0][0]$4828:
      Old ports: A=8'00000000, B=8'x, Y=$memory\DUT.rf.rf$wrmux[0][0][0]$y$4829
      New ports: A=1'0, B=1'x, Y=$memory\DUT.rf.rf$wrmux[0][0][0]$y$4829 [0]
      New connections: $memory\DUT.rf.rf$wrmux[0][0][0]$y$4829 [7:1] = { $memory\DUT.rf.rf$wrmux[0][0][0]$y$4829 [0] $memory\DUT.rf.rf$wrmux[0][0][0]$y$4829 [0] $memory\DUT.rf.rf$wrmux[0][0][0]$y$4829 [0] $memory\DUT.rf.rf$wrmux[0][0][0]$y$4829 [0] $memory\DUT.rf.rf$wrmux[0][0][0]$y$4829 [0] $memory\DUT.rf.rf$wrmux[0][0][0]$y$4829 [0] $memory\DUT.rf.rf$wrmux[0][0][0]$y$4829 [0] }
    Consolidated identical input bits for $mux cell $memory\DUT.rf.rf$wrmux[1][0][0]$4856:
      Old ports: A=8'00000000, B=8'x, Y=$memory\DUT.rf.rf$wrmux[1][0][0]$y$4857
      New ports: A=1'0, B=1'x, Y=$memory\DUT.rf.rf$wrmux[1][0][0]$y$4857 [0]
      New connections: $memory\DUT.rf.rf$wrmux[1][0][0]$y$4857 [7:1] = { $memory\DUT.rf.rf$wrmux[1][0][0]$y$4857 [0] $memory\DUT.rf.rf$wrmux[1][0][0]$y$4857 [0] $memory\DUT.rf.rf$wrmux[1][0][0]$y$4857 [0] $memory\DUT.rf.rf$wrmux[1][0][0]$y$4857 [0] $memory\DUT.rf.rf$wrmux[1][0][0]$y$4857 [0] $memory\DUT.rf.rf$wrmux[1][0][0]$y$4857 [0] $memory\DUT.rf.rf$wrmux[1][0][0]$y$4857 [0] }
    Consolidated identical input bits for $mux cell $memory\DUT.rf.rf$wrmux[2][0][0]$4876:
      Old ports: A=8'00000000, B=8'x, Y=$memory\DUT.rf.rf$wrmux[2][0][0]$y$4877
      New ports: A=1'0, B=1'x, Y=$memory\DUT.rf.rf$wrmux[2][0][0]$y$4877 [0]
      New connections: $memory\DUT.rf.rf$wrmux[2][0][0]$y$4877 [7:1] = { $memory\DUT.rf.rf$wrmux[2][0][0]$y$4877 [0] $memory\DUT.rf.rf$wrmux[2][0][0]$y$4877 [0] $memory\DUT.rf.rf$wrmux[2][0][0]$y$4877 [0] $memory\DUT.rf.rf$wrmux[2][0][0]$y$4877 [0] $memory\DUT.rf.rf$wrmux[2][0][0]$y$4877 [0] $memory\DUT.rf.rf$wrmux[2][0][0]$y$4877 [0] $memory\DUT.rf.rf$wrmux[2][0][0]$y$4877 [0] }
    Consolidated identical input bits for $mux cell $memory\DUT.rf.rf$wrmux[3][0][0]$4898:
      Old ports: A=8'00000000, B=8'x, Y=$memory\DUT.rf.rf$wrmux[3][0][0]$y$4899
      New ports: A=1'0, B=1'x, Y=$memory\DUT.rf.rf$wrmux[3][0][0]$y$4899 [0]
      New connections: $memory\DUT.rf.rf$wrmux[3][0][0]$y$4899 [7:1] = { $memory\DUT.rf.rf$wrmux[3][0][0]$y$4899 [0] $memory\DUT.rf.rf$wrmux[3][0][0]$y$4899 [0] $memory\DUT.rf.rf$wrmux[3][0][0]$y$4899 [0] $memory\DUT.rf.rf$wrmux[3][0][0]$y$4899 [0] $memory\DUT.rf.rf$wrmux[3][0][0]$y$4899 [0] $memory\DUT.rf.rf$wrmux[3][0][0]$y$4899 [0] $memory\DUT.rf.rf$wrmux[3][0][0]$y$4899 [0] }
    Consolidated identical input bits for $mux cell $memory\DUT.rf.rf$wrmux[4][0][0]$4914:
      Old ports: A=8'00000000, B=8'x, Y=$memory\DUT.rf.rf$wrmux[4][0][0]$y$4915
      New ports: A=1'0, B=1'x, Y=$memory\DUT.rf.rf$wrmux[4][0][0]$y$4915 [0]
      New connections: $memory\DUT.rf.rf$wrmux[4][0][0]$y$4915 [7:1] = { $memory\DUT.rf.rf$wrmux[4][0][0]$y$4915 [0] $memory\DUT.rf.rf$wrmux[4][0][0]$y$4915 [0] $memory\DUT.rf.rf$wrmux[4][0][0]$y$4915 [0] $memory\DUT.rf.rf$wrmux[4][0][0]$y$4915 [0] $memory\DUT.rf.rf$wrmux[4][0][0]$y$4915 [0] $memory\DUT.rf.rf$wrmux[4][0][0]$y$4915 [0] $memory\DUT.rf.rf$wrmux[4][0][0]$y$4915 [0] }
  Optimizing cells in module \top.
Performed a total of 13 changes.

3.29.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~36 debug messages>
Removed a total of 12 cells.

3.29.20. Executing OPT_DFF pass (perform DFF optimizations).

3.29.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 12 unused wires.
<suppressed ~1 debug messages>

3.29.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.29.23. Rerunning OPT passes. (Maybe there is more to do..)

3.29.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~72 debug messages>

3.29.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

3.29.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.29.27. Executing OPT_DFF pass (perform DFF optimizations).

3.29.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

3.29.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.29.30. Finished OPT passes. (There is nothing left to do.)

3.30. Executing ICE40_WRAPCARRY pass (wrap carries).

3.31. Executing TECHMAP pass (map to technology primitives).

3.31.1. Executing Verilog-2005 frontend: /Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/techmap.v
Parsing Verilog input from `/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.31.2. Executing Verilog-2005 frontend: /Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

3.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $or.
Using template $paramod$d629d85c8826a74239b9178d1930215a43b0ceb0\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$c5c783b17ab1d780abfad8cfe6563a0a7b47a3b0\_90_pmux for cells of type $pmux.
Using template $paramod$97565c3687be688407d1272a293bd9d0ae6852dc\_90_pmux for cells of type $pmux.
Using template $paramod$32e7c4d6f92ff4337599ece53082d2e88a82a9f2\_90_pmux for cells of type $pmux.
Using template $paramod$d31bf4d7d72e59528d18fbd4f322e9d608532043\_90_pmux for cells of type $pmux.
Using template $paramod$521ce43182eecb9f60c72393a788160d2c356bf5\_90_pmux for cells of type $pmux.
Using template $paramod$85df5dc01c7df96a7d8e5f1fdf76ce9ac452af63\_90_pmux for cells of type $pmux.
Using template $paramod$c2e415ef15bc3ccd2723772353a6b450d3d76206\_90_pmux for cells of type $pmux.
Using template $paramod$bf2533632d512eac76dd186c0da49367e29b8e98\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod$a2af9b43308e3114c3b5dd3f4dc3329b2387395d\_80_ice40_alu for cells of type $alu.
Using template $paramod$b8c0a997bce700f23568a5ada79cc6781d1f5ca0\_80_ice40_alu for cells of type $alu.
Using template $paramod$713617589782cfade849bb573b5c36106c4b708f\_80_ice40_alu for cells of type $alu.
Using template $paramod$4ccbe221165818e15f326ddee3d1183c7924e12f\_80_ice40_alu for cells of type $alu.
Using template $paramod$53700bbee849b2010ad0b60a61ccd204a10e24ca\_80_ice40_alu for cells of type $alu.
Using template $paramod$19189243523493d505a4933d1bad417c570ea8a6\_80_ice40_alu for cells of type $alu.
Using template $paramod$6f67705c43e5e94c02b6ebb52209ce5aa5ade4c1\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $reduce_xor.
Using template $paramod$b3b6ac92d800c6f07aa48f510f923d86a674e5a7\_90_pmux for cells of type $pmux.
Using template $paramod$d7387fdb214042e5ef2d69a3f74948694b4bb65e\_90_pmux for cells of type $pmux.
Using template $paramod$645fe0cc96ae5edb83bff90cc2c78f4a20ca3e3c\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $sdff.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
No more expansions possible.
<suppressed ~1169 debug messages>

3.32. Executing OPT pass (performing simple optimizations).

3.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~780 debug messages>

3.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~1134 debug messages>
Removed a total of 378 cells.

3.32.3. Executing OPT_DFF pass (perform DFF optimizations).

3.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 50 unused cells and 1303 unused wires.
<suppressed ~51 debug messages>

3.32.5. Finished fast OPT passes.

3.33. Executing ICE40_OPT pass (performing simple optimizations).

3.33.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4504.slice[0].carry: CO=\DUT.SP_SEL.Q [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4507.slice[0].carry: CO=\DUT.SP_SEL.Q [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4510.slice[0].carry: CO=\DUT.Stack.rs [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4513.slice[0].carry: CO=\DUT.regA.Q [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4513.slice[8].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4516.slice[8].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4522.slice[0].carry: CO=\DUT.regA.Q [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4522.slice[8].carry: CO=$auto$alumacc.cc:485:replace_alu$4522.C [8]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4525.slice[8].carry: CO=$auto$alumacc.cc:485:replace_alu$4525.C [8]

3.33.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

3.33.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.33.4. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$7786 ($_SDFF_PN0_) from module top (D = $flatten\DUT.\Brain.$procmux$3867.Y_B [2], Q = \DUT.Brain.state [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7785 ($_SDFF_PN1_) from module top (D = $flatten\DUT.\Brain.$procmux$3867.Y_B [1], Q = \DUT.Brain.state [1], rval = 1'1).
Adding SRST signal on $auto$ff.cc:266:slice$7784 ($_SDFF_PN0_) from module top (D = $flatten\DUT.\Brain.$procmux$3867.Y_B [0], Q = \DUT.Brain.state [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7468 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [5], Q = \DUT.Stack.rf[0] [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7467 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [4], Q = \DUT.Stack.rf[0] [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7466 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [3], Q = \DUT.Stack.rf[0] [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7465 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [2], Q = \DUT.Stack.rf[0] [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7464 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [1], Q = \DUT.Stack.rf[0] [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7463 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [0], Q = \DUT.Stack.rf[0] [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7421 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [7], Q = \DUT.Stack.rf[1] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7420 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [6], Q = \DUT.Stack.rf[1] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7419 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [5], Q = \DUT.Stack.rf[1] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7418 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [4], Q = \DUT.Stack.rf[1] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7417 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [3], Q = \DUT.Stack.rf[1] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7416 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [2], Q = \DUT.Stack.rf[1] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7415 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [1], Q = \DUT.Stack.rf[1] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7414 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [0], Q = \DUT.Stack.rf[1] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7290 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [7], Q = \DUT.Stack.rf[2] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7289 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [6], Q = \DUT.Stack.rf[2] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7288 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [5], Q = \DUT.Stack.rf[2] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7287 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [4], Q = \DUT.Stack.rf[2] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7286 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [3], Q = \DUT.Stack.rf[2] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7285 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [2], Q = \DUT.Stack.rf[2] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7284 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [1], Q = \DUT.Stack.rf[2] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$7283 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [0], Q = \DUT.Stack.rf[2] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6765 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [7], Q = \DUT.Stack.rf[3] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6764 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [6], Q = \DUT.Stack.rf[3] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6763 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [5], Q = \DUT.Stack.rf[3] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6762 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [4], Q = \DUT.Stack.rf[3] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6761 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [3], Q = \DUT.Stack.rf[3] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6760 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [2], Q = \DUT.Stack.rf[3] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6759 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [1], Q = \DUT.Stack.rf[3] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6758 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [0], Q = \DUT.Stack.rf[3] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5647 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [5], Q = \DUT.Stack.rf[7] [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5646 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [4], Q = \DUT.Stack.rf[7] [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5645 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [3], Q = \DUT.Stack.rf[7] [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5644 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [2], Q = \DUT.Stack.rf[7] [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5643 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [1], Q = \DUT.Stack.rf[7] [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5642 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [0], Q = \DUT.Stack.rf[7] [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5631 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [7], Q = \DUT.Stack.rf[6] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5630 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [6], Q = \DUT.Stack.rf[6] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5629 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [5], Q = \DUT.Stack.rf[6] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5628 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [4], Q = \DUT.Stack.rf[6] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5627 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [3], Q = \DUT.Stack.rf[6] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5626 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [2], Q = \DUT.Stack.rf[6] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5625 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [1], Q = \DUT.Stack.rf[6] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5624 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [0], Q = \DUT.Stack.rf[6] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5600 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [5], Q = \DUT.Stack.rf[5] [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5599 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [4], Q = \DUT.Stack.rf[5] [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5598 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [3], Q = \DUT.Stack.rf[5] [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5597 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [2], Q = \DUT.Stack.rf[5] [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5596 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [1], Q = \DUT.Stack.rf[5] [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5595 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [0], Q = \DUT.Stack.rf[5] [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5569 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [5], Q = \DUT.Stack.rf[4] [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5568 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [4], Q = \DUT.Stack.rf[4] [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5567 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [3], Q = \DUT.Stack.rf[4] [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5566 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [2], Q = \DUT.Stack.rf[4] [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5565 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [1], Q = \DUT.Stack.rf[4] [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5564 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [0], Q = \DUT.Stack.rf[4] [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5546 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [5], Q = \DUT.Stack.rf[3] [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5545 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [4], Q = \DUT.Stack.rf[3] [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5544 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [3], Q = \DUT.Stack.rf[3] [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5543 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [2], Q = \DUT.Stack.rf[3] [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5542 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [1], Q = \DUT.Stack.rf[3] [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5541 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [0], Q = \DUT.Stack.rf[3] [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5508 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [5], Q = \DUT.Stack.rf[2] [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5507 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [4], Q = \DUT.Stack.rf[2] [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5506 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [3], Q = \DUT.Stack.rf[2] [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5505 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [2], Q = \DUT.Stack.rf[2] [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5504 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [1], Q = \DUT.Stack.rf[2] [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5503 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [0], Q = \DUT.Stack.rf[2] [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5485 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [5], Q = \DUT.Stack.rf[1] [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5484 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [4], Q = \DUT.Stack.rf[1] [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5483 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [3], Q = \DUT.Stack.rf[1] [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5482 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [2], Q = \DUT.Stack.rf[1] [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5481 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [1], Q = \DUT.Stack.rf[1] [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5480 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [0], Q = \DUT.Stack.rf[1] [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5444 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [7], Q = \DUT.Stack.rf[0] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5443 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [6], Q = \DUT.Stack.rf[0] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5442 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [5], Q = \DUT.Stack.rf[0] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5441 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [4], Q = \DUT.Stack.rf[0] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5440 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [3], Q = \DUT.Stack.rf[0] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5439 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [2], Q = \DUT.Stack.rf[0] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5438 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [1], Q = \DUT.Stack.rf[0] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5437 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [0], Q = \DUT.Stack.rf[0] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5357 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4554 [7], Q = \DUT.rf.rf[4] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5356 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4554 [6], Q = \DUT.rf.rf[4] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5355 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4554 [5], Q = \DUT.rf.rf[4] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5354 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4554 [4], Q = \DUT.rf.rf[4] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5353 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4554 [3], Q = \DUT.rf.rf[4] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5352 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4554 [2], Q = \DUT.rf.rf[4] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5351 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4554 [1], Q = \DUT.rf.rf[4] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5350 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4554 [0], Q = \DUT.rf.rf[4] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5349 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4554 [7], Q = \DUT.rf.rf[3] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5348 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4554 [6], Q = \DUT.rf.rf[3] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5347 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4554 [5], Q = \DUT.rf.rf[3] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5346 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4554 [4], Q = \DUT.rf.rf[3] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5345 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4554 [3], Q = \DUT.rf.rf[3] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5344 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4554 [2], Q = \DUT.rf.rf[3] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5343 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4554 [1], Q = \DUT.rf.rf[3] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5342 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4554 [0], Q = \DUT.rf.rf[3] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5341 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4554 [7], Q = \DUT.rf.rf[2] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5340 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4554 [6], Q = \DUT.rf.rf[2] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5339 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4554 [5], Q = \DUT.rf.rf[2] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5338 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4554 [4], Q = \DUT.rf.rf[2] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5337 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4554 [3], Q = \DUT.rf.rf[2] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5336 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4554 [2], Q = \DUT.rf.rf[2] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5335 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4554 [1], Q = \DUT.rf.rf[2] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5334 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4554 [0], Q = \DUT.rf.rf[2] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5333 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4554 [7], Q = \DUT.rf.rf[1] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5332 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4554 [6], Q = \DUT.rf.rf[1] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5331 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4554 [5], Q = \DUT.rf.rf[1] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5330 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4554 [4], Q = \DUT.rf.rf[1] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5329 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4554 [3], Q = \DUT.rf.rf[1] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5328 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4554 [2], Q = \DUT.rf.rf[1] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5327 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4554 [1], Q = \DUT.rf.rf[1] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5326 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4554 [0], Q = \DUT.rf.rf[1] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5325 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4554 [7], Q = \DUT.rf.rf[0] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5324 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4554 [6], Q = \DUT.rf.rf[0] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5323 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4554 [5], Q = \DUT.rf.rf[0] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5322 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4554 [4], Q = \DUT.rf.rf[0] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5321 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4554 [3], Q = \DUT.rf.rf[0] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5320 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4554 [2], Q = \DUT.rf.rf[0] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5319 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4554 [1], Q = \DUT.rf.rf[0] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5318 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4554 [0], Q = \DUT.rf.rf[0] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5317 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [7], Q = \DUT.Stack.rf[7] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5316 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [6], Q = \DUT.Stack.rf[7] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5315 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [5], Q = \DUT.Stack.rf[7] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5314 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [4], Q = \DUT.Stack.rf[7] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5313 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [3], Q = \DUT.Stack.rf[7] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5312 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [2], Q = \DUT.Stack.rf[7] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5311 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [1], Q = \DUT.Stack.rf[7] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5310 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [0], Q = \DUT.Stack.rf[7] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5264 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [5], Q = \DUT.Stack.rf[6] [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5263 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [4], Q = \DUT.Stack.rf[6] [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5262 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [3], Q = \DUT.Stack.rf[6] [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5261 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [2], Q = \DUT.Stack.rf[6] [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5260 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [1], Q = \DUT.Stack.rf[6] [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5259 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4546 [0], Q = \DUT.Stack.rf[6] [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5218 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [7], Q = \DUT.Stack.rf[5] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5217 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [6], Q = \DUT.Stack.rf[5] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5216 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [5], Q = \DUT.Stack.rf[5] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5215 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [4], Q = \DUT.Stack.rf[5] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5214 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [3], Q = \DUT.Stack.rf[5] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5213 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [2], Q = \DUT.Stack.rf[5] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5212 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [1], Q = \DUT.Stack.rf[5] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5211 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [0], Q = \DUT.Stack.rf[5] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5183 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [7], Q = \DUT.Stack.rf[4] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5182 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [6], Q = \DUT.Stack.rf[4] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5181 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [5], Q = \DUT.Stack.rf[4] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5180 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [4], Q = \DUT.Stack.rf[4] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5179 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [3], Q = \DUT.Stack.rf[4] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5178 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [2], Q = \DUT.Stack.rf[4] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5177 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [1], Q = \DUT.Stack.rf[4] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5176 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$4542 [0], Q = \DUT.Stack.rf[4] [0], rval = 1'0).

3.33.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 155 unused cells and 30 unused wires.
<suppressed ~157 debug messages>

3.33.6. Rerunning OPT passes. (Removed registers in this run.)

3.33.7. Running ICE40 specific optimizations.

3.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.33.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

3.33.10. Executing OPT_DFF pass (perform DFF optimizations).

3.33.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

3.33.12. Rerunning OPT passes. (Removed registers in this run.)

3.33.13. Running ICE40 specific optimizations.

3.33.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.33.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.33.16. Executing OPT_DFF pass (perform DFF optimizations).

3.33.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

3.33.18. Finished OPT passes. (There is nothing left to do.)

3.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

3.35. Executing TECHMAP pass (map to technology primitives).

3.35.1. Executing Verilog-2005 frontend: /Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

3.35.2. Continuing TECHMAP pass.
Using template \$_SDFFCE_PP0P_ for cells of type $_SDFFCE_PP0P_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template \$_SDFF_PP1_ for cells of type $_SDFF_PP1_.
No more expansions possible.
<suppressed ~250 debug messages>

3.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping top.$auto$alumacc.cc:485:replace_alu$4504.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$4507.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$4510.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$4513.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$4513.slice[8].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$4516.slice[8].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$4522.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$4522.slice[8].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$4525.slice[8].carry ($lut).

3.38. Executing ICE40_OPT pass (performing simple optimizations).

3.38.1. Running ICE40 specific optimizations.

3.38.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~212 debug messages>

3.38.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~561 debug messages>
Removed a total of 187 cells.

3.38.4. Executing OPT_DFF pass (perform DFF optimizations).

3.38.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1542 unused wires.
<suppressed ~1 debug messages>

3.38.6. Rerunning OPT passes. (Removed registers in this run.)

3.38.7. Running ICE40 specific optimizations.

3.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

3.38.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.38.10. Executing OPT_DFF pass (perform DFF optimizations).

3.38.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

3.38.12. Rerunning OPT passes. (Removed registers in this run.)

3.38.13. Running ICE40 specific optimizations.

3.38.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

3.38.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

3.38.16. Executing OPT_DFF pass (perform DFF optimizations).

3.38.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

3.38.18. Finished OPT passes. (There is nothing left to do.)

3.39. Executing TECHMAP pass (map to technology primitives).

3.39.1. Executing Verilog-2005 frontend: /Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

3.39.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

3.40. Executing ABC pass (technology mapping using ABC).

3.40.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 1378 gates and 1676 wires to a netlist network with 296 inputs and 128 outputs.

3.40.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + &get -n 
ABC: + &fraig -x 
ABC: + &put 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress <abc-temp-dir>/input.blif 
ABC: Total number of equiv classes                =     257.
ABC: Participating nodes from both networks       =     624.
ABC: Participating nodes from the first network   =     256. (  49.52 % of nodes)
ABC: Participating nodes from the second network  =     368. (  71.18 % of nodes)
ABC: Node pairs (any polarity)                    =     256. (  49.52 % of names can be moved)
ABC: Node pairs (same polarity)                   =     219. (  42.36 % of names can be moved)
ABC: Total runtime =     0.10 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

3.40.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      516
ABC RESULTS:        internal signals:     1252
ABC RESULTS:           input signals:      296
ABC RESULTS:          output signals:      128
Removing temp directory.

3.41. Executing ICE40_WRAPCARRY pass (wrap carries).

3.42. Executing TECHMAP pass (map to technology primitives).

3.42.1. Executing Verilog-2005 frontend: /Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

3.42.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 5 unused cells and 1039 unused wires.

3.43. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:      581
  1-LUT               12
  2-LUT              110
  3-LUT              153
  4-LUT              306
  with \SB_CARRY    (#0)   60
  with \SB_CARRY    (#1)   57

Eliminating LUTs.
Number of LUTs:      581
  1-LUT               12
  2-LUT              110
  3-LUT              153
  4-LUT              306
  with \SB_CARRY    (#0)   60
  with \SB_CARRY    (#1)   57

Combining LUTs.
Number of LUTs:      575
  1-LUT               11
  2-LUT              105
  3-LUT              148
  4-LUT              311
  with \SB_CARRY    (#0)   60
  with \SB_CARRY    (#1)   57

Eliminated 0 LUTs.
Combined 6 LUTs.
<suppressed ~3759 debug messages>

3.44. Executing TECHMAP pass (map to technology primitives).

3.44.1. Executing Verilog-2005 frontend: /Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

3.44.2. Continuing TECHMAP pass.
Using template $paramod$e49f6e3576ef1a6d2f58c54414dbb786af8cc869\$lut for cells of type $lut.
Using template $paramod$973818279bc95792902f3c09371fd2407d04a2a5\$lut for cells of type $lut.
Using template $paramod$7a9d9396461df152f697894fa3b294ad1b285e08\$lut for cells of type $lut.
Using template $paramod$d6d3aaeac1b9aa2c4b652c48e0deb565040dda72\$lut for cells of type $lut.
Using template $paramod$ea0faad69a26c91786a25961ea149d0e0961eb1f\$lut for cells of type $lut.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod$df196ed0a1da5c4a58c5e08a1dac304fd3fccaab\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod$1bf62ab10e48d71d6497bccacf5c70420c470fe9\$lut for cells of type $lut.
Using template $paramod$b431bfd938e35871dd0b7668e1503c7e8b9d491c\$lut for cells of type $lut.
Using template $paramod$9d707d218adbd63b6f9a0c79d7ee037306fb6296\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10111111 for cells of type $lut.
Using template $paramod$b82dd4a20dbf0d54061c2335089cd4250464eb8a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000001 for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod$81d8a60fd95b1a9f9ef71c12a774ae6988cb9fd5\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000111 for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod$f3e1547c4b47e64c590e75cf09078b2507c8cc75\$lut for cells of type $lut.
Using template $paramod$179512a187da069f3b79ef6612a41e494e7d54b6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1011 for cells of type $lut.
Using template $paramod$fe9a0158d0352193457c4f5b6282ac86d35fb3ee\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100000 for cells of type $lut.
Using template $paramod$6e238df02989b317f10820a22773676e71120644\$lut for cells of type $lut.
Using template $paramod$30234ddca80ec18fbcf4d45d8bd1821aad47e8fd\$lut for cells of type $lut.
Using template $paramod$b93d1ea7a612a32c185108f67a153d44ffb9aac2\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0111 for cells of type $lut.
Using template $paramod$11ec7271d8e6e5aeaace08c13e4c601f10e31038\$lut for cells of type $lut.
Using template $paramod$1843b3c15f2447d117e2d5de9b00f791ef5f9fa3\$lut for cells of type $lut.
Using template $paramod$d35161d1d7976dcc02e7c7d51172431be85143b4\$lut for cells of type $lut.
Using template $paramod$c4c148354f86d2131dbfed31e2e01cbbb5aefda7\$lut for cells of type $lut.
Using template $paramod$e5759512db67494ff77fbdfc66dff4006376568f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod$f63fe32f78d5f3c5de711945c592c8c5ec2303ae\$lut for cells of type $lut.
Using template $paramod$b297295e19b03521716155b85537bbe86d6a9ae6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110000 for cells of type $lut.
Using template $paramod$2e11c0e004fab0373ef80005c65c968bc830b55a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110001 for cells of type $lut.
Using template $paramod$608f40069c27841a5b3bdf03643a34bdc8974072\$lut for cells of type $lut.
Using template $paramod$ab8bb87959c5d7cfa27886cee1355b38e054a61a\$lut for cells of type $lut.
Using template $paramod$332a399730bfc61adea04021a76b1c4e4030f37d\$lut for cells of type $lut.
Using template $paramod$b4410865e8124402796f9dfbf73ef8d279fdbd08\$lut for cells of type $lut.
Using template $paramod$314fe9458b07176c4d2c8c59533027c4c55155b5\$lut for cells of type $lut.
Using template $paramod$82b4a585d1edcb5c6e755dc9bd3392228a1c1304\$lut for cells of type $lut.
Using template $paramod$4789582d00084c3344b7a6dacf516efd46244876\$lut for cells of type $lut.
Using template $paramod$6e3b22478ca21c5590744f2e30b92938c4d90996\$lut for cells of type $lut.
Using template $paramod$5a621b016c894274d07edef48c49b401a15fd796\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010011 for cells of type $lut.
Using template $paramod$e2e4d79bec18c28fa313e8bd8f4df6f8a38115b2\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001010 for cells of type $lut.
Using template $paramod$ae9b8abdb4f811ce37985dd5106af9cd21223954\$lut for cells of type $lut.
Using template $paramod$933f4f3e373a784da64d137def3625bdd36d1695\$lut for cells of type $lut.
Using template $paramod$6d23198eb2b8f79a41c7626605a61009695893b1\$lut for cells of type $lut.
Using template $paramod$c5b694ec89d7629b942ccf6a9be1d39e24f8edec\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001110 for cells of type $lut.
Using template $paramod$d53578aacfd93124244778d88be0e90eb09c1b1b\$lut for cells of type $lut.
Using template $paramod$bba54c1ef87367812b4c15f4aed5ac70773df775\$lut for cells of type $lut.
Using template $paramod$246006d276d15b0766d6d890a33a28800bfa7295\$lut for cells of type $lut.
Using template $paramod$c1a19a87ccbbb03d43a72335db63f692ddf82cc1\$lut for cells of type $lut.
Using template $paramod$38f9bf4dd2329347b8471f0a98443dd323386889\$lut for cells of type $lut.
Using template $paramod$04b674496422df8889c01c3744b94097628ccfbc\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010000 for cells of type $lut.
Using template $paramod$5c32c59025c0b98f20e63f249d83e7ebb4b085e3\$lut for cells of type $lut.
Using template $paramod$aff3a645bb9f572421a4f0f49cf8987ceb4bcdc5\$lut for cells of type $lut.
Using template $paramod$6e46ec5a196ba1a24b8e69ab094cadc07c13ac1f\$lut for cells of type $lut.
Using template $paramod$4b2297966ddb718657b80566604f97685ffc0120\$lut for cells of type $lut.
Using template $paramod$94ac66a11090dca84889e55fcf03297912a5b7ec\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10111100 for cells of type $lut.
Using template $paramod$164bdefb5d1c06a6528ecdb35b429071950e50d7\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101100 for cells of type $lut.
Using template $paramod$edc3c77d6d0cfa370b4c94131cecc413b4b0ef1c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010011 for cells of type $lut.
Using template $paramod$b4d0f4738a5ce50c7f36c2aa2ecc09cfb874f2b6\$lut for cells of type $lut.
Using template $paramod$a50be0e6fa3a01511bb234559cb74fb8bd3e2061\$lut for cells of type $lut.
Using template $paramod$ac7a207a5de4a659df4b9ba9460253572f293a8d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111000 for cells of type $lut.
Using template $paramod$4282def8dbd6df3d1248ad282c629bee684502c2\$lut for cells of type $lut.
Using template $paramod$e0bde73e598487237493c8a43ca52c95a3727354\$lut for cells of type $lut.
Using template $paramod$bd45c77b15ff5659ffc25ba4197b123177ac968d\$lut for cells of type $lut.
Using template $paramod$cd6c4b4da6d8737b72fd2dc8f5d83d8967445809\$lut for cells of type $lut.
Using template $paramod$a20b0c093af372402eecf32644de5f0208303079\$lut for cells of type $lut.
Using template $paramod$12879138d1e376f344e47ea40be66b776233be75\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101111 for cells of type $lut.
Using template $paramod$4972722c284f07fee673f7cb99e6a36ce4a244f0\$lut for cells of type $lut.
Using template $paramod$0de052767abdccc3aefc818722bdc3c7850d25d6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110100 for cells of type $lut.
Using template $paramod$43779580bfffd5d5a9f321249a174febf1dac288\$lut for cells of type $lut.
Using template $paramod$b4f85a6321a00b090afc4e21d68e7b99eb94d149\$lut for cells of type $lut.
Using template $paramod$fc318a7df7fe07fd6e06d67fcbc358e9823ea389\$lut for cells of type $lut.
Using template $paramod$f54c0ffd7b041ca43eac7710ab19c0666d826c22\$lut for cells of type $lut.
Using template $paramod$4da6fe9957da309dc16b8f31a6b80b19c05c808d\$lut for cells of type $lut.
Using template $paramod$b4f15f202f50520dbc381cd0880ac94f830f05a8\$lut for cells of type $lut.
Using template $paramod$055b455d86a112f8e156f7933b9de48b1f25f2b4\$lut for cells of type $lut.
Using template $paramod$05f19d9c2311a3d1ab38ece311a1bb9f96c62043\$lut for cells of type $lut.
Using template $paramod$cc08dba3aac8677e797984bdf18a09dd37547dd3\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1001 for cells of type $lut.
Using template $paramod$ebc984149b682ff68e8506aa94d7623c7dee7716\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~1995 debug messages>
Removed 0 unused cells and 1330 unused wires.

3.45. Executing AUTONAME pass.
Renamed 23365 objects in module top (68 iterations).
<suppressed ~1181 debug messages>

3.46. Executing HIERARCHY pass (managing design hierarchy).

3.46.1. Analyzing design hierarchy..
Top module:  \top

3.46.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

3.47. Printing statistics.

=== top ===

   Number of wires:                444
   Number of wire bits:           1747
   Number of public wires:         444
   Number of public wire bits:    1747
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                863
     SB_CARRY                       60
     SB_DFF                         10
     SB_DFFE                        19
     SB_DFFESR                     196
     SB_DFFSR                        2
     SB_DFFSS                        1
     SB_LUT4                       575

3.48. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

3.49. Executing JSON backend.

Warnings: 30 unique messages, 30 total
End of script. Logfile hash: 3466957cd2, CPU: user 4.85s system 0.16s
Yosys 0.25+97 (git sha1 221036c5b, x86_64-apple-darwin20.2-clang 10.0.0-4ubuntu1 -fPIC -Os)
Time spent: 24% 14x read_verilog (1 sec), 17% 28x opt_expr (0 sec), ...
