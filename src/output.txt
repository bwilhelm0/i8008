
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.25+97 (git sha1 221036c5b, x86_64-apple-darwin20.2-clang 10.0.0-4ubuntu1 -fPIC -Os)


-- Running command `read_verilog -sv i8008_core.v; synth_ice40 -json build/synthesis.json -top top' --

1. Executing Verilog-2005 frontend: i8008_core.v
Parsing SystemVerilog input from `i8008_core.v' to AST representation.
Warning: Yosys has only limited support for tri-state logic at the moment. (i8008_core.v:347)
Generating RTLIL representation for module `\top'.
Generating RTLIL representation for module `\i8008_core'.
Generating RTLIL representation for module `\ALU'.
Generating RTLIL representation for module `\fsm_decoder'.
Generating RTLIL representation for module `\reg_file'.
Generating RTLIL representation for module `\stack'.
Generating RTLIL representation for module `\Register'.
Generating RTLIL representation for module `\FlagRegister'.
Generating RTLIL representation for module `\Counter'.
Successfully finished Verilog frontend.

2. Executing SYNTH_ICE40 pass.

2.1. Executing Verilog-2005 frontend: /Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

2.2. Executing HIERARCHY pass (managing design hierarchy).

2.2.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \i8008_core
Used module:         \fsm_decoder
Used module:         \stack
Used module:         \Counter
Used module:         \reg_file
Used module:         \ALU
Used module:             \FlagRegister
Used module:         \Register
Parameter \WIDTH = 8
Parameter \STACK_HEIGHT = 8

2.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\i8008_core'.
Parameter \WIDTH = 8
Parameter \STACK_HEIGHT = 8
Generating RTLIL representation for module `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core'.
Parameter \WIDTH = 14
Parameter \HEIGHT = 8

2.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\stack'.
Parameter \WIDTH = 14
Parameter \HEIGHT = 8
Generating RTLIL representation for module `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack'.
Parameter \WIDTH = 3

2.2.4. Executing AST frontend in derive mode using pre-parsed AST for module `\Counter'.
Parameter \WIDTH = 3
Generating RTLIL representation for module `$paramod\Counter\WIDTH=s32'00000000000000000000000000000011'.
Parameter \WIDTH = 8
Parameter \HEIGHT = 7

2.2.5. Executing AST frontend in derive mode using pre-parsed AST for module `\reg_file'.
Parameter \WIDTH = 8
Parameter \HEIGHT = 7
Generating RTLIL representation for module `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file'.
Parameter \WIDTH = 8

2.2.6. Executing AST frontend in derive mode using pre-parsed AST for module `\Register'.
Parameter \WIDTH = 8
Generating RTLIL representation for module `$paramod\Register\WIDTH=s32'00000000000000000000000000001000'.
Parameter \WIDTH = 8
Found cached RTLIL representation for module `$paramod\Register\WIDTH=s32'00000000000000000000000000001000'.
Parameter \WIDTH = 4

2.2.7. Executing AST frontend in derive mode using pre-parsed AST for module `\FlagRegister'.
Parameter \WIDTH = 4
Generating RTLIL representation for module `$paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100'.

2.2.8. Analyzing design hierarchy..
Top module:  \top
Used module:     $paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core
Used module:         \fsm_decoder
Used module:         \stack
Used module:         \Counter
Used module:         \reg_file
Used module:         \ALU
Used module:             $paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100
Used module:         \Register
Parameter \WIDTH = 14
Parameter \HEIGHT = 8
Found cached RTLIL representation for module `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack'.
Parameter \WIDTH = 3
Found cached RTLIL representation for module `$paramod\Counter\WIDTH=s32'00000000000000000000000000000011'.
Parameter \WIDTH = 8
Parameter \HEIGHT = 7
Found cached RTLIL representation for module `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file'.
Parameter \WIDTH = 8
Found cached RTLIL representation for module `$paramod\Register\WIDTH=s32'00000000000000000000000000001000'.
Parameter \WIDTH = 8
Found cached RTLIL representation for module `$paramod\Register\WIDTH=s32'00000000000000000000000000001000'.

2.2.9. Analyzing design hierarchy..
Top module:  \top
Used module:     $paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core
Used module:         \fsm_decoder
Used module:         $paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack
Used module:         $paramod\Counter\WIDTH=s32'00000000000000000000000000000011
Used module:         $paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file
Used module:         \ALU
Used module:             $paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100
Used module:         $paramod\Register\WIDTH=s32'00000000000000000000000000001000

2.2.10. Analyzing design hierarchy..
Top module:  \top
Used module:     $paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core
Used module:         \fsm_decoder
Used module:         $paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack
Used module:         $paramod\Counter\WIDTH=s32'00000000000000000000000000000011
Used module:         $paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file
Used module:         \ALU
Used module:             $paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100
Used module:         $paramod\Register\WIDTH=s32'00000000000000000000000000001000
Removing unused module `\Counter'.
Removing unused module `\FlagRegister'.
Removing unused module `\Register'.
Removing unused module `\stack'.
Removing unused module `\reg_file'.
Removing unused module `\i8008_core'.
Removed 6 unused modules.

2.3. Executing PROC pass (convert processes to netlists).

2.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1414$495 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1353$488 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1273$484 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1212$477 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1138$474 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1088$471 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1017$468 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:967$465 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:803$457 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:742$450 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:662$446 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:601$439 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:527$436 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:477$433 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:406$430 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:356$427 in module SB_DFFSR.
Marked 1 switch rules as full_case in process $proc$i8008_core.v:800$775 in module $paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100.
Marked 1 switch rules as full_case in process $proc$i8008_core.v:781$774 in module $paramod\Register\WIDTH=s32'00000000000000000000000000001000.
Marked 2 switch rules as full_case in process $proc$i8008_core.v:707$748 in module $paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.
Marked 3 switch rules as full_case in process $proc$i8008_core.v:823$734 in module $paramod\Counter\WIDTH=s32'00000000000000000000000000000011.
Marked 4 switch rules as full_case in process $proc$i8008_core.v:749$668 in module $paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.
Marked 1 switch rules as full_case in process $proc$i8008_core.v:679$133 in module fsm_decoder.
Removed 4 dead cases from process $proc$i8008_core.v:325$58 in module fsm_decoder.
Marked 27 switch rules as full_case in process $proc$i8008_core.v:325$58 in module fsm_decoder.
Removed 1 dead cases from process $proc$i8008_core.v:317$54 in module fsm_decoder.
Marked 1 switch rules as full_case in process $proc$i8008_core.v:317$54 in module fsm_decoder.
Removed 1 dead cases from process $proc$i8008_core.v:246$26 in module ALU.
Marked 3 switch rules as full_case in process $proc$i8008_core.v:246$26 in module ALU.
Marked 1 switch rules as full_case in process $proc$i8008_core.v:143$642 in module $paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.
Marked 7 switch rules as full_case in process $proc$i8008_core.v:119$638 in module $paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.
Marked 2 switch rules as full_case in process $proc$i8008_core.v:110$635 in module $paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.
Removed a total of 6 dead cases.

2.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 11 redundant assignments.
Promoted 69 assignments to connections.

2.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$498'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$494'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$487'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$483'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$476'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$473'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$470'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$467'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$464'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$462'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$460'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$456'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$449'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$445'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$438'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$435'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$432'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$429'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$426'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$424'.
  Set init value: \Q = 1'0

2.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1414$495'.
Found async reset \R in `\SB_DFFNER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1273$484'.
Found async reset \S in `\SB_DFFNS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1138$474'.
Found async reset \R in `\SB_DFFNR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1017$468'.
Found async reset \S in `\SB_DFFES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:803$457'.
Found async reset \R in `\SB_DFFER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:662$446'.
Found async reset \S in `\SB_DFFS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:527$436'.
Found async reset \R in `\SB_DFFR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:406$430'.
Found VHDL-style edge-trigger \Ready in `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.$proc$i8008_core.v:143$642'.

2.3.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~73 debug messages>

2.3.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SB_DFFNES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$498'.
Creating decoders for process `\SB_DFFNES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1414$495'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$494'.
Creating decoders for process `\SB_DFFNESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1353$488'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$487'.
Creating decoders for process `\SB_DFFNER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1273$484'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$483'.
Creating decoders for process `\SB_DFFNESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1212$477'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$476'.
Creating decoders for process `\SB_DFFNS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1138$474'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$473'.
Creating decoders for process `\SB_DFFNSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1088$471'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$470'.
Creating decoders for process `\SB_DFFNR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1017$468'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$467'.
Creating decoders for process `\SB_DFFNSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:967$465'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$464'.
Creating decoders for process `\SB_DFFNE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:922$463'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$462'.
Creating decoders for process `\SB_DFFN.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:882$461'.
Creating decoders for process `\SB_DFFES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$460'.
Creating decoders for process `\SB_DFFES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:803$457'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$456'.
Creating decoders for process `\SB_DFFESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:742$450'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$449'.
Creating decoders for process `\SB_DFFER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:662$446'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$445'.
Creating decoders for process `\SB_DFFESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:601$439'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$438'.
Creating decoders for process `\SB_DFFS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:527$436'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$435'.
Creating decoders for process `\SB_DFFSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:477$433'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$432'.
Creating decoders for process `\SB_DFFR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:406$430'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$429'.
Creating decoders for process `\SB_DFFSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:356$427'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$426'.
Creating decoders for process `\SB_DFFE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:311$425'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$424'.
Creating decoders for process `\SB_DFF.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:271$423'.
Creating decoders for process `$paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100.$proc$i8008_core.v:800$775'.
     1/1: $0\Q[3:0]
Creating decoders for process `$paramod\Register\WIDTH=s32'00000000000000000000000000001000.$proc$i8008_core.v:781$774'.
     1/1: $0\Q[7:0]
Creating decoders for process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.v:719$772'.
Creating decoders for process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.v:707$748'.
     1/13: $2$memwr$\rf$i8008_core.v:718$747_EN[7:0]$771
     2/13: $2$memwr$\rf$i8008_core.v:718$747_DATA[7:0]$770
     3/13: $2$memwr$\rf$i8008_core.v:718$747_ADDR[2:0]$769
     4/13: $1$memwr$\rf$i8008_core.v:715$746_EN[7:0]$765
     5/13: $1$memwr$\rf$i8008_core.v:714$745_EN[7:0]$764
     6/13: $1$memwr$\rf$i8008_core.v:713$744_EN[7:0]$763
     7/13: $1$memwr$\rf$i8008_core.v:712$743_EN[7:0]$762
     8/13: $1$memwr$\rf$i8008_core.v:711$742_EN[7:0]$761
     9/13: $1$memwr$\rf$i8008_core.v:710$741_EN[7:0]$760
    10/13: $1$memwr$\rf$i8008_core.v:709$740_EN[7:0]$759
    11/13: $1$memwr$\rf$i8008_core.v:718$747_EN[7:0]$768
    12/13: $1$memwr$\rf$i8008_core.v:718$747_DATA[7:0]$767
    13/13: $1$memwr$\rf$i8008_core.v:718$747_ADDR[2:0]$766
Creating decoders for process `$paramod\Counter\WIDTH=s32'00000000000000000000000000000011.$proc$i8008_core.v:823$734'.
     1/1: $0\Q[2:0]
Creating decoders for process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:766$732'.
Creating decoders for process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:749$668'.
     1/39: $4$memwr$\rf$i8008_core.v:765$666_EN[13:0]$729
     2/39: $4$memwr$\rf$i8008_core.v:765$666_DATA[13:0]$728
     3/39: $4$memwr$\rf$i8008_core.v:765$666_ADDR[2:0]$727
     4/39: $4$mem2bits$\rf$i8008_core.v:765$665[13:0]$726
     5/39: $3$memwr$\rf$i8008_core.v:763$664_EN[13:0]$721
     6/39: $3$memwr$\rf$i8008_core.v:763$664_DATA[13:0]$720
     7/39: $3$memwr$\rf$i8008_core.v:763$664_ADDR[2:0]$719
     8/39: $3$memwr$\rf$i8008_core.v:765$666_EN[13:0]$725
     9/39: $3$memwr$\rf$i8008_core.v:765$666_DATA[13:0]$724
    10/39: $3$memwr$\rf$i8008_core.v:765$666_ADDR[2:0]$723
    11/39: $3$mem2bits$\rf$i8008_core.v:765$665[13:0]$722
    12/39: $2$memwr$\rf$i8008_core.v:761$663_EN[13:0]$708
    13/39: $2$memwr$\rf$i8008_core.v:761$663_DATA[13:0]$707
    14/39: $2$memwr$\rf$i8008_core.v:761$663_ADDR[2:0]$706
    15/39: $2$memwr$\rf$i8008_core.v:765$666_EN[13:0]$715
    16/39: $2$memwr$\rf$i8008_core.v:765$666_DATA[13:0]$714
    17/39: $2$memwr$\rf$i8008_core.v:765$666_ADDR[2:0]$713
    18/39: $2$mem2bits$\rf$i8008_core.v:765$665[13:0]$712
    19/39: $2$memwr$\rf$i8008_core.v:763$664_EN[13:0]$711
    20/39: $2$memwr$\rf$i8008_core.v:763$664_DATA[13:0]$710
    21/39: $2$memwr$\rf$i8008_core.v:763$664_ADDR[2:0]$709
    22/39: $1$memwr$\rf$i8008_core.v:758$662_EN[13:0]$694
    23/39: $1$memwr$\rf$i8008_core.v:757$661_EN[13:0]$693
    24/39: $1$memwr$\rf$i8008_core.v:756$660_EN[13:0]$692
    25/39: $1$memwr$\rf$i8008_core.v:755$659_EN[13:0]$691
    26/39: $1$memwr$\rf$i8008_core.v:754$658_EN[13:0]$690
    27/39: $1$memwr$\rf$i8008_core.v:753$657_EN[13:0]$689
    28/39: $1$memwr$\rf$i8008_core.v:752$656_EN[13:0]$688
    29/39: $1$memwr$\rf$i8008_core.v:751$655_EN[13:0]$687
    30/39: $1$memwr$\rf$i8008_core.v:765$666_EN[13:0]$704
    31/39: $1$memwr$\rf$i8008_core.v:765$666_DATA[13:0]$703
    32/39: $1$memwr$\rf$i8008_core.v:765$666_ADDR[2:0]$702
    33/39: $1$mem2bits$\rf$i8008_core.v:765$665[13:0]$701
    34/39: $1$memwr$\rf$i8008_core.v:763$664_EN[13:0]$700
    35/39: $1$memwr$\rf$i8008_core.v:763$664_DATA[13:0]$699
    36/39: $1$memwr$\rf$i8008_core.v:763$664_ADDR[2:0]$698
    37/39: $1$memwr$\rf$i8008_core.v:761$663_EN[13:0]$697
    38/39: $1$memwr$\rf$i8008_core.v:761$663_DATA[13:0]$696
    39/39: $1$memwr$\rf$i8008_core.v:761$663_ADDR[2:0]$695
Creating decoders for process `\fsm_decoder.$proc$i8008_core.v:679$133'.
     1/2: $0\state[2:0]
     2/2: $0\cycle[1:0]
Creating decoders for process `\fsm_decoder.$proc$i8008_core.v:325$58'.
     1/177: $1\ctrl_signals[39:0] [39:38]
     2/177: $82\ctrl_signals[6:6]
     3/177: $83\ctrl_signals[30:30]
     4/177: $65\ctrl_signals[39:38] [1]
     5/177: $60\ctrl_signals[7:3] [3]
     6/177: $78\ctrl_signals[7:6] [0]
     7/177: $77\ctrl_signals[4:4]
     8/177: $79\ctrl_signals[9:9]
     9/177: $80\ctrl_signals[33:33]
    10/177: $65\ctrl_signals[39:38] [0]
    11/177: $60\ctrl_signals[7:3] [1]
    12/177: $74\ctrl_signals[30:30]
    13/177: $76\ctrl_signals[39:38] [0]
    14/177: $75\ctrl_signals[32:32]
    15/177: $13\next_cycle[1:0]
    16/177: $13\next_state[2:0]
    17/177: $12\next_cycle[1:0]
    18/177: $12\next_state[2:0]
    19/177: $11\next_cycle[1:0]
    20/177: $11\next_state[2:0]
    21/177: $64\ctrl_signals[33:32] [1]
    22/177: $60\ctrl_signals[7:3] [4]
    23/177: $71\ctrl_signals[5:4] [0]
    24/177: $73\ctrl_signals[38:38]
    25/177: $70\ctrl_signals[1:0]
    26/177: $71\ctrl_signals[5:4] [1]
    27/177: $72\ctrl_signals[14:11] [0]
    28/177: $76\ctrl_signals[39:38] [1]
    29/177: $72\ctrl_signals[14:11] [3:1]
    30/177: $67\ctrl_signals[5:4] [0]
    31/177: $69\ctrl_signals[38:38]
    32/177: $66\ctrl_signals[1:0]
    33/177: $67\ctrl_signals[5:4] [1]
    34/177: $68\ctrl_signals[14:11] [0]
    35/177: $78\ctrl_signals[7:6] [1]
    36/177: $62\ctrl_signals[14:11]
    37/177: $60\ctrl_signals[7:3] [0]
    38/177: $59\ctrl_signals[1:0]
    39/177: $10\next_state[2:0]
    40/177: $10\next_cycle[1:0]
    41/177: $64\ctrl_signals[33:32] [0]
    42/177: $60\ctrl_signals[7:3] [2]
    43/177: $63\ctrl_signals[30:30]
    44/177: $61\ctrl_signals[9:9]
    45/177: $68\ctrl_signals[14:11] [3:1]
    46/177: $1\ctrl_signals[39:0] [32]
    47/177: $1\ctrl_signals[39:0] [30]
    48/177: $1\ctrl_signals[39:0] [28]
    49/177: $1\ctrl_signals[39:0] [9]
    50/177: $57\ctrl_signals[24:21] [2:0]
    51/177: $55\ctrl_signals[14:12]
    52/177: $58\ctrl_signals[30:30]
    53/177: $54\ctrl_signals[10:10]
    54/177: $56\ctrl_signals[17:17]
    55/177: $39\ctrl_signals[39:38] [1]
    56/177: $33\ctrl_signals[14:10] [1]
    57/177: $53\ctrl_signals[38:38]
    58/177: $37\ctrl_signals[30:29] [1]
    59/177: $51\ctrl_signals[39:38] [0]
    60/177: $50\ctrl_signals[30:29] [1]
    61/177: $50\ctrl_signals[30:29] [0]
    62/177: $9\next_state[2:0]
    63/177: $9\next_cycle[1:0]
    64/177: $39\ctrl_signals[39:38] [0]
    65/177: $46\ctrl_signals[5:4] [0]
    66/177: $49\ctrl_signals[38:38]
    67/177: $45\ctrl_signals[1:0]
    68/177: $46\ctrl_signals[5:4] [1]
    69/177: $48\ctrl_signals[30:30]
    70/177: $47\ctrl_signals[14:11] [0]
    71/177: $33\ctrl_signals[14:10] [0]
    72/177: $32\ctrl_signals[5:3] [0]
    73/177: $41\ctrl_signals[5:4] [0]
    74/177: $44\ctrl_signals[38:38]
    75/177: $40\ctrl_signals[1:0]
    76/177: $41\ctrl_signals[5:4] [1]
    77/177: $43\ctrl_signals[33:33]
    78/177: $42\ctrl_signals[14:11] [0]
    79/177: $32\ctrl_signals[5:3] [2:1]
    80/177: $38\ctrl_signals[33:33]
    81/177: $52\ctrl_signals[27:27]
    82/177: $33\ctrl_signals[14:10] [4:2]
    83/177: $31\ctrl_signals[1:0]
    84/177: $8\next_state[2:0]
    85/177: $8\next_cycle[1:0]
    86/177: $37\ctrl_signals[30:29] [0]
    87/177: $42\ctrl_signals[14:11] [3:1]
    88/177: $36\ctrl_signals[27:27]
    89/177: $35\ctrl_signals[24:21]
    90/177: $34\ctrl_signals[17:17]
    91/177: $51\ctrl_signals[39:38] [1]
    92/177: $47\ctrl_signals[14:11] [3:1]
    93/177: $1\ctrl_signals[39:0] [5:3]
    94/177: $1\ctrl_signals[39:0] [29]
    95/177: $1\ctrl_signals[39:0] [27]
    96/177: $1\ctrl_signals[39:0] [26]
    97/177: $1\ctrl_signals[39:0] [25]
    98/177: $1\ctrl_signals[39:0] [20:18]
    99/177: $1\ctrl_signals[39:0] [16]
   100/177: $1\ctrl_signals[39:0] [15]
   101/177: $1\ctrl_signals[39:0] [14:11]
   102/177: $1\ctrl_signals[39:0] [10]
   103/177: $1\ctrl_signals[39:0] [8]
   104/177: $1\ctrl_signals[39:0] [1:0]
   105/177: $1\ctrl_signals[39:0] [33]
   106/177: $57\ctrl_signals[24:21] [3]
   107/177: $81\ctrl_signals[4:4]
   108/177: $28\ctrl_signals[24:16] [0]
   109/177: $28\ctrl_signals[24:16] [1]
   110/177: $28\ctrl_signals[24:16] [4:2]
   111/177: $28\ctrl_signals[24:16] [7:5]
   112/177: $24\ctrl_signals[4:4]
   113/177: $25\ctrl_signals[6:6]
   114/177: $30\ctrl_signals[30:30]
   115/177: $29\ctrl_signals[26:26]
   116/177: $23\ctrl_signals[2:2]
   117/177: $27\ctrl_signals[14:12]
   118/177: $26\ctrl_signals[10:10]
   119/177: $7\ctrl_signals[39:38] [1]
   120/177: $3\ctrl_signals[14:9] [2]
   121/177: $7\next_state[2:0]
   122/177: $18\ctrl_signals[33:32] [1]
   123/177: $16\ctrl_signals[14:11] [0]
   124/177: $14\ctrl_signals[7:6] [0]
   125/177: $18\ctrl_signals[33:32] [0]
   126/177: $20\ctrl_signals[14:11] [0]
   127/177: $22\ctrl_signals[38:38]
   128/177: $21\ctrl_signals[29:29]
   129/177: $19\ctrl_signals[38:38]
   130/177: $17\ctrl_signals[29:29]
   131/177: $14\ctrl_signals[7:6] [1]
   132/177: $20\ctrl_signals[14:11] [3:1]
   133/177: $15\ctrl_signals[9:9]
   134/177: $16\ctrl_signals[14:11] [3:1]
   135/177: $13\ctrl_signals[4:4]
   136/177: $2\ctrl_signals[7:0] [5]
   137/177: $3\ctrl_signals[14:9] [1]
   138/177: $6\next_cycle[1:0]
   139/177: $5\next_cycle[1:0]
   140/177: $5\next_state[2:0]
   141/177: $4\next_state[2:0]
   142/177: $4\next_cycle[1:0]
   143/177: $3\next_state[2:0]
   144/177: $3\next_cycle[1:0]
   145/177: $12\ctrl_signals[39:39]
   146/177: $9\ctrl_signals[9:9]
   147/177: $8\ctrl_signals[7:7]
   148/177: $11\ctrl_signals[31:31]
   149/177: $10\ctrl_signals[29:29]
   150/177: $6\ctrl_signals[33:29] [2]
   151/177: $6\ctrl_signals[33:29] [1]
   152/177: $3\ctrl_signals[14:9] [0]
   153/177: $3\ctrl_signals[14:9] [5:3]
   154/177: $2\ctrl_signals[7:0] [7]
   155/177: $6\ctrl_signals[33:29] [0]
   156/177: $6\next_state[2:0]
   157/177: $7\ctrl_signals[39:38] [0]
   158/177: $2\ctrl_signals[7:0] [4]
   159/177: $2\ctrl_signals[7:0] [2]
   160/177: $2\ctrl_signals[7:0] [1:0]
   161/177: $2\next_state[2:0]
   162/177: $2\next_cycle[1:0]
   163/177: $6\ctrl_signals[33:29] [4:3]
   164/177: $2\ctrl_signals[7:0] [3]
   165/177: $5\ctrl_signals[26:26]
   166/177: $4\ctrl_signals[24:16]
   167/177: $2\ctrl_signals[7:0] [6]
   168/177: $7\next_cycle[1:0]
   169/177: $1\next_state[2:0]
   170/177: $1\next_cycle[1:0]
   171/177: $1\ctrl_signals[39:0] [37:34]
   172/177: $1\ctrl_signals[39:0] [31]
   173/177: $1\ctrl_signals[39:0] [24:21]
   174/177: $1\ctrl_signals[39:0] [17]
   175/177: $1\ctrl_signals[39:0] [7:6]
   176/177: $28\ctrl_signals[24:16] [8]
   177/177: $1\ctrl_signals[39:0] [2]
Creating decoders for process `\fsm_decoder.$proc$i8008_core.v:317$54'.
     1/1: $1\CF[0:0]
Creating decoders for process `\ALU.$proc$i8008_core.v:246$26'.
     1/8: $3\flag_in[3:3]
     2/8: $3\d[7:0]
     3/8: $2\NA[7:0]
     4/8: $2\flag_in[3:3]
     5/8: $2\d[7:0]
     6/8: $1\flag_in[3:3]
     7/8: $1\d[7:0]
     8/8: $1\NA[7:0]
Creating decoders for process `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.$proc$i8008_core.v:143$642'.
     1/1: $0\instr[7:0]
Creating decoders for process `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.$proc$i8008_core.v:119$638'.
     1/8: $7\bus[7:0]
     2/8: $6\bus[7:0]
     3/8: $5\bus[7:0]
     4/8: $4\bus[7:0] [7:4]
     5/8: $4\bus[7:0] [3:0]
     6/8: $3\bus[7:0]
     7/8: $2\bus[7:0]
     8/8: $1\bus[7:0]
Creating decoders for process `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.$proc$i8008_core.v:110$635'.
     1/1: $0\Intr[0:0]
Creating decoders for process `\top.$proc$i8008_core.v:54$3'.

2.3.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.\rs' from process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.v:719$772'.
No latch inferred for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.\rs' from process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:766$732'.
No latch inferred for signal `\fsm_decoder.\ctrl_signals' from process `\fsm_decoder.$proc$i8008_core.v:325$58'.
No latch inferred for signal `\fsm_decoder.\next_cycle' from process `\fsm_decoder.$proc$i8008_core.v:325$58'.
No latch inferred for signal `\fsm_decoder.\next_state' from process `\fsm_decoder.$proc$i8008_core.v:325$58'.
No latch inferred for signal `\fsm_decoder.\CF' from process `\fsm_decoder.$proc$i8008_core.v:317$54'.
No latch inferred for signal `\ALU.\flag_in' from process `\ALU.$proc$i8008_core.v:246$26'.
No latch inferred for signal `\ALU.\NA' from process `\ALU.$proc$i8008_core.v:246$26'.
Latch inferred for signal `\ALU.\d' from process `\ALU.$proc$i8008_core.v:246$26': $auto$proc_dlatch.cc:427:proc_dlatch$3274
No latch inferred for signal `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.\bus' from process `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.$proc$i8008_core.v:119$638'.
No latch inferred for signal `\top.\led' from process `\top.$proc$i8008_core.v:54$3'.

2.3.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1414$495'.
  created $adff cell `$procdff$3327' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1353$488'.
  created $dff cell `$procdff$3328' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1273$484'.
  created $adff cell `$procdff$3329' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1212$477'.
  created $dff cell `$procdff$3330' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1138$474'.
  created $adff cell `$procdff$3331' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1088$471'.
  created $dff cell `$procdff$3332' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1017$468'.
  created $adff cell `$procdff$3333' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:967$465'.
  created $dff cell `$procdff$3334' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:922$463'.
  created $dff cell `$procdff$3335' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:882$461'.
  created $dff cell `$procdff$3336' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:803$457'.
  created $adff cell `$procdff$3337' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:742$450'.
  created $dff cell `$procdff$3338' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:662$446'.
  created $adff cell `$procdff$3339' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:601$439'.
  created $dff cell `$procdff$3340' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:527$436'.
  created $adff cell `$procdff$3341' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:477$433'.
  created $dff cell `$procdff$3342' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:406$430'.
  created $adff cell `$procdff$3343' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:356$427'.
  created $dff cell `$procdff$3344' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:311$425'.
  created $dff cell `$procdff$3345' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:271$423'.
  created $dff cell `$procdff$3346' with positive edge clock.
Creating register for signal `$paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100.\Q' using process `$paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100.$proc$i8008_core.v:800$775'.
  created $dff cell `$procdff$3347' with positive edge clock.
Creating register for signal `$paramod\Register\WIDTH=s32'00000000000000000000000000001000.\Q' using process `$paramod\Register\WIDTH=s32'00000000000000000000000000001000.$proc$i8008_core.v:781$774'.
  created $dff cell `$procdff$3348' with positive edge clock.
Creating register for signal `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$memwr$\rf$i8008_core.v:709$740_EN' using process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.v:707$748'.
  created $dff cell `$procdff$3349' with positive edge clock.
Creating register for signal `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$memwr$\rf$i8008_core.v:710$741_EN' using process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.v:707$748'.
  created $dff cell `$procdff$3350' with positive edge clock.
Creating register for signal `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$memwr$\rf$i8008_core.v:711$742_EN' using process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.v:707$748'.
  created $dff cell `$procdff$3351' with positive edge clock.
Creating register for signal `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$memwr$\rf$i8008_core.v:712$743_EN' using process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.v:707$748'.
  created $dff cell `$procdff$3352' with positive edge clock.
Creating register for signal `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$memwr$\rf$i8008_core.v:713$744_EN' using process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.v:707$748'.
  created $dff cell `$procdff$3353' with positive edge clock.
Creating register for signal `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$memwr$\rf$i8008_core.v:714$745_EN' using process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.v:707$748'.
  created $dff cell `$procdff$3354' with positive edge clock.
Creating register for signal `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$memwr$\rf$i8008_core.v:715$746_EN' using process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.v:707$748'.
  created $dff cell `$procdff$3355' with positive edge clock.
Creating register for signal `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$memwr$\rf$i8008_core.v:718$747_ADDR' using process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.v:707$748'.
  created $dff cell `$procdff$3356' with positive edge clock.
Creating register for signal `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$memwr$\rf$i8008_core.v:718$747_DATA' using process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.v:707$748'.
  created $dff cell `$procdff$3357' with positive edge clock.
Creating register for signal `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$memwr$\rf$i8008_core.v:718$747_EN' using process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.v:707$748'.
  created $dff cell `$procdff$3358' with positive edge clock.
Creating register for signal `$paramod\Counter\WIDTH=s32'00000000000000000000000000000011.\Q' using process `$paramod\Counter\WIDTH=s32'00000000000000000000000000000011.$proc$i8008_core.v:823$734'.
  created $dff cell `$procdff$3359' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.v:751$655_EN' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:749$668'.
  created $dff cell `$procdff$3360' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.v:752$656_EN' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:749$668'.
  created $dff cell `$procdff$3361' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.v:753$657_EN' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:749$668'.
  created $dff cell `$procdff$3362' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.v:754$658_EN' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:749$668'.
  created $dff cell `$procdff$3363' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.v:755$659_EN' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:749$668'.
  created $dff cell `$procdff$3364' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.v:756$660_EN' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:749$668'.
  created $dff cell `$procdff$3365' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.v:757$661_EN' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:749$668'.
  created $dff cell `$procdff$3366' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.v:758$662_EN' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:749$668'.
  created $dff cell `$procdff$3367' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.v:761$663_ADDR' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:749$668'.
  created $dff cell `$procdff$3368' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.v:761$663_DATA' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:749$668'.
  created $dff cell `$procdff$3369' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.v:761$663_EN' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:749$668'.
  created $dff cell `$procdff$3370' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.v:763$664_ADDR' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:749$668'.
  created $dff cell `$procdff$3371' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.v:763$664_DATA' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:749$668'.
  created $dff cell `$procdff$3372' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.v:763$664_EN' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:749$668'.
  created $dff cell `$procdff$3373' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$mem2bits$\rf$i8008_core.v:765$665' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:749$668'.
  created $dff cell `$procdff$3374' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.v:765$666_ADDR' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:749$668'.
  created $dff cell `$procdff$3375' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.v:765$666_DATA' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:749$668'.
  created $dff cell `$procdff$3376' with positive edge clock.
Creating register for signal `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$memwr$\rf$i8008_core.v:765$666_EN' using process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:749$668'.
  created $dff cell `$procdff$3377' with positive edge clock.
Creating register for signal `\fsm_decoder.\state' using process `\fsm_decoder.$proc$i8008_core.v:679$133'.
  created $dff cell `$procdff$3378' with positive edge clock.
Creating register for signal `\fsm_decoder.\cycle' using process `\fsm_decoder.$proc$i8008_core.v:679$133'.
  created $dff cell `$procdff$3379' with positive edge clock.
Creating register for signal `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.\instr' using process `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.$proc$i8008_core.v:143$642'.
  created $dff cell `$procdff$3380' with positive edge clock.
Creating register for signal `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.\Intr' using process `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.$proc$i8008_core.v:110$635'.
  created $dff cell `$procdff$3381' with positive edge clock.

2.3.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

2.3.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SB_DFFNES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$498'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1414$495'.
Removing empty process `SB_DFFNES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1414$495'.
Removing empty process `SB_DFFNESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$494'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1353$488'.
Removing empty process `SB_DFFNESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1353$488'.
Removing empty process `SB_DFFNER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$487'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1273$484'.
Removing empty process `SB_DFFNER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1273$484'.
Removing empty process `SB_DFFNESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$483'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1212$477'.
Removing empty process `SB_DFFNESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1212$477'.
Removing empty process `SB_DFFNS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$476'.
Removing empty process `SB_DFFNS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1138$474'.
Removing empty process `SB_DFFNSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$473'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1088$471'.
Removing empty process `SB_DFFNSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1088$471'.
Removing empty process `SB_DFFNR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$470'.
Removing empty process `SB_DFFNR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:1017$468'.
Removing empty process `SB_DFFNSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$467'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:967$465'.
Removing empty process `SB_DFFNSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:967$465'.
Removing empty process `SB_DFFNE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$464'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:922$463'.
Removing empty process `SB_DFFNE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:922$463'.
Removing empty process `SB_DFFN.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$462'.
Removing empty process `SB_DFFN.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:882$461'.
Removing empty process `SB_DFFES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$460'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:803$457'.
Removing empty process `SB_DFFES.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:803$457'.
Removing empty process `SB_DFFESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$456'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:742$450'.
Removing empty process `SB_DFFESS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:742$450'.
Removing empty process `SB_DFFER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$449'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:662$446'.
Removing empty process `SB_DFFER.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:662$446'.
Removing empty process `SB_DFFESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$445'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:601$439'.
Removing empty process `SB_DFFESR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:601$439'.
Removing empty process `SB_DFFS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$438'.
Removing empty process `SB_DFFS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:527$436'.
Removing empty process `SB_DFFSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$435'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:477$433'.
Removing empty process `SB_DFFSS.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:477$433'.
Removing empty process `SB_DFFR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$432'.
Removing empty process `SB_DFFR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:406$430'.
Removing empty process `SB_DFFSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$429'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:356$427'.
Removing empty process `SB_DFFSR.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:356$427'.
Removing empty process `SB_DFFE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$426'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:311$425'.
Removing empty process `SB_DFFE.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:311$425'.
Removing empty process `SB_DFF.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:0$424'.
Removing empty process `SB_DFF.$proc$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_sim.v:271$423'.
Found and cleaned up 2 empty switches in `$paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100.$proc$i8008_core.v:800$775'.
Removing empty process `$paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100.$proc$i8008_core.v:800$775'.
Found and cleaned up 2 empty switches in `$paramod\Register\WIDTH=s32'00000000000000000000000000001000.$proc$i8008_core.v:781$774'.
Removing empty process `$paramod\Register\WIDTH=s32'00000000000000000000000000001000.$proc$i8008_core.v:781$774'.
Removing empty process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.v:719$772'.
Found and cleaned up 2 empty switches in `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.v:707$748'.
Removing empty process `$paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.$proc$i8008_core.v:707$748'.
Found and cleaned up 4 empty switches in `$paramod\Counter\WIDTH=s32'00000000000000000000000000000011.$proc$i8008_core.v:823$734'.
Removing empty process `$paramod\Counter\WIDTH=s32'00000000000000000000000000000011.$proc$i8008_core.v:823$734'.
Removing empty process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:766$732'.
Found and cleaned up 4 empty switches in `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:749$668'.
Removing empty process `$paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.$proc$i8008_core.v:749$668'.
Found and cleaned up 1 empty switch in `\fsm_decoder.$proc$i8008_core.v:679$133'.
Removing empty process `fsm_decoder.$proc$i8008_core.v:679$133'.
Found and cleaned up 27 empty switches in `\fsm_decoder.$proc$i8008_core.v:325$58'.
Removing empty process `fsm_decoder.$proc$i8008_core.v:325$58'.
Found and cleaned up 1 empty switch in `\fsm_decoder.$proc$i8008_core.v:317$54'.
Removing empty process `fsm_decoder.$proc$i8008_core.v:317$54'.
Found and cleaned up 3 empty switches in `\ALU.$proc$i8008_core.v:246$26'.
Removing empty process `ALU.$proc$i8008_core.v:246$26'.
Removing empty process `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.$proc$i8008_core.v:143$642'.
Found and cleaned up 7 empty switches in `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.$proc$i8008_core.v:119$638'.
Removing empty process `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.$proc$i8008_core.v:119$638'.
Found and cleaned up 2 empty switches in `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.$proc$i8008_core.v:110$635'.
Removing empty process `$paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.$proc$i8008_core.v:110$635'.
Removing empty process `top.$proc$i8008_core.v:54$3'.
Cleaned up 73 empty switches.

2.3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100.
Optimizing module $paramod\Register\WIDTH=s32'00000000000000000000000000001000.
Optimizing module $paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.
Optimizing module $paramod\Counter\WIDTH=s32'00000000000000000000000000000011.
Optimizing module $paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.
Optimizing module fsm_decoder.
<suppressed ~155 debug messages>
Optimizing module ALU.
<suppressed ~22 debug messages>
Optimizing module $paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.
<suppressed ~1 debug messages>
Optimizing module top.

2.4. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod\FlagRegister\WIDTH=s32'00000000000000000000000000000100.
Deleting now unused module $paramod\Register\WIDTH=s32'00000000000000000000000000001000.
Deleting now unused module $paramod$0ec5feb0cc3bda9ef691eba4be3275d918b87df8\reg_file.
Deleting now unused module $paramod\Counter\WIDTH=s32'00000000000000000000000000000011.
Deleting now unused module $paramod$0e1b44e0ad8d898606d448a7b77b3618a4085869\stack.
Deleting now unused module fsm_decoder.
Deleting now unused module ALU.
Deleting now unused module $paramod$c1c89500fe4a73e0bc803a126dcf98c8be383bb5\i8008_core.
<suppressed ~9 debug messages>

2.5. Executing TRIBUF pass.

2.6. Executing DEMINOUT pass (demote inout ports to input or output).

2.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~65 debug messages>

2.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 67 unused cells and 565 unused wires.
<suppressed ~76 debug messages>

2.9. Executing CHECK pass (checking for obvious problems).
Checking module top...
Warning: Wire top.\uart_tx is used but has no driver.
Warning: Wire top.\display_sel [3] is used but has no driver.
Warning: Wire top.\display_sel [2] is used but has no driver.
Warning: Wire top.\display_sel [1] is used but has no driver.
Warning: Wire top.\display_sel [0] is used but has no driver.
Warning: Wire top.\display [7] is used but has no driver.
Warning: Wire top.\display [6] is used but has no driver.
Warning: Wire top.\display [5] is used but has no driver.
Warning: Wire top.\display [4] is used but has no driver.
Warning: Wire top.\display [3] is used but has no driver.
Warning: Wire top.\display [2] is used but has no driver.
Warning: Wire top.\display [1] is used but has no driver.
Warning: Wire top.\display [0] is used but has no driver.
Warning: Wire top.\base_led [7] is used but has no driver.
Warning: Wire top.\base_led [6] is used but has no driver.
Warning: Wire top.\base_led [5] is used but has no driver.
Warning: Wire top.\base_led [4] is used but has no driver.
Warning: Wire top.\base_led [3] is used but has no driver.
Warning: Wire top.\base_led [2] is used but has no driver.
Warning: Wire top.\base_led [1] is used but has no driver.
Warning: Wire top.\base_led [0] is used but has no driver.
Found and reported 21 problems.

2.10. Executing OPT pass (performing simple optimizations).

2.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~4116 debug messages>
Removed a total of 1372 cells.

2.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1186.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1779.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2422.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2424.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1432.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2433.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2435.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1188.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1434.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1692.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1348.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2448.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1790.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2450.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2465.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1802.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2467.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1804.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2469.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2484.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1358.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2486.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2488.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2503.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1445.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2505.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2507.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2521.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1447.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2523.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1360.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2537.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1196.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2539.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2552.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1198.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2554.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2569.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1817.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2571.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1819.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2573.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2584.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2586.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1459.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1149.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2600.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2602.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2615.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1703.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2617.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1461.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3233.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1711.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2629.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1832.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1208.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1834.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1713.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1473.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1137.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2641.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2653.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3236.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1475.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2655.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2219.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2657.
    dead port 1/2 on $mux $flatten\DUT.\Brain.$procmux$2671.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2673.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1847.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2675.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2221.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1849.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2677.
    dead port 1/2 on $mux $flatten\DUT.\Brain.$procmux$2691.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2693.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2695.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3215.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1860.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2697.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2710.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3242.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1862.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1486.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2712.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1371.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3245.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1373.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2714.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2727.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3224.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1874.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1488.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2729.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2227.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1876.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1218.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2731.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3176.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3248.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1500.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2229.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1502.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1227.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1887.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2239.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2743.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1724.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2745.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1510.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2241.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1229.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2126.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1512.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1898.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3179.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1238.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3182.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3185.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2757.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1139.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1240.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1912.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2759.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1732.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2768.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1522.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2770.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1914.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2780.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2250.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2782.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2792.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2252.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2794.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2804.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1338.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1734.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2806.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2815.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3254.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2262.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2817.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1742.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2264.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1248.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1532.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1670.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1928.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2829.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3257.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1930.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1159.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1744.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1250.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2841.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1259.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2273.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2275.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3188.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1672.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1542.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3191.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2853.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1261.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2286.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1944.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2288.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3197.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1263.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2865.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1946.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3200.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1384.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1272.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2299.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1552.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1386.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2877.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2301.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3263.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1960.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1274.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2312.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1962.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2889.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2901.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2314.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2903.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2905.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1974.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2336.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1276.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2338.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1976.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1562.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2917.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1286.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1989.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1679.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1753.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1991.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2348.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2929.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1288.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2350.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1681.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1396.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1755.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1572.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2941.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1290.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2002.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1167.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3230.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1300.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2953.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1398.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2360.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2013.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1302.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2362.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2021.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2965.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1169.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2023.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1582.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1409.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1660.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1304.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2977.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1411.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2034.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1176.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2135.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2989.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1765.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2115.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2374.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1592.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3218.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3001.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2045.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1767.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1314.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2137.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1178.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3025.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1316.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1602.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2056.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2386.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3037.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3046.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1614.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3048.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1129.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2395.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1616.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2067.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1131.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2397.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3203.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1419.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1326.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2406.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2078.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1662.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3091.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$3093.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2408.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3221.
    dead port 2/2 on $mux $flatten\DUT.\Stack.$procmux$1004.
    dead port 2/2 on $mux $flatten\DUT.\Stack.$procmux$1010.
    dead port 2/2 on $mux $flatten\DUT.\Stack.$procmux$1016.
    dead port 2/2 on $mux $flatten\DUT.\Stack.$procmux$1022.
    dead port 2/2 on $mux $flatten\DUT.\Stack.$procmux$1028.
    dead port 2/2 on $mux $flatten\DUT.\Stack.$procmux$1034.
    dead port 2/2 on $mux $flatten\DUT.\Stack.$procmux$1046.
    dead port 2/2 on $mux $flatten\DUT.\Stack.$procmux$1052.
    dead port 2/2 on $mux $flatten\DUT.\Stack.$procmux$1058.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$893.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$896.
    dead port 2/2 on $mux $flatten\DUT.\Stack.$procmux$899.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$905.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$908.
    dead port 2/2 on $mux $flatten\DUT.\Stack.$procmux$911.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$917.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$920.
    dead port 2/2 on $mux $flatten\DUT.\Stack.$procmux$923.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$941.
    dead port 2/2 on $mux $flatten\DUT.\Stack.$procmux$944.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$950.
    dead port 2/2 on $mux $flatten\DUT.\Stack.$procmux$953.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$959.
    dead port 2/2 on $mux $flatten\DUT.\Stack.$procmux$962.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$968.
    dead port 2/2 on $mux $flatten\DUT.\Stack.$procmux$971.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$977.
    dead port 2/2 on $mux $flatten\DUT.\Stack.$procmux$980.
    dead port 1/2 on $mux $flatten\DUT.\Stack.$procmux$986.
    dead port 2/2 on $mux $flatten\DUT.\Stack.$procmux$989.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2091.
    dead port 1/2 on $mux $flatten\DUT.\Unit.$procmux$3115.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1640.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2093.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1328.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1642.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3206.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2149.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1777.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1650.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2104.
    dead port 1/2 on $mux $flatten\DUT.\Unit.$procmux$3139.
    dead port 2/2 on $mux $flatten\DUT.\Unit.$procmux$3150.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1652.
    dead port 1/2 on $mux $flatten\DUT.$procmux$3209.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$1421.
    dead port 2/2 on $mux $flatten\DUT.\rf.$procmux$834.
    dead port 2/2 on $mux $flatten\DUT.\rf.$procmux$840.
    dead port 2/2 on $mux $flatten\DUT.\rf.$procmux$846.
    dead port 2/2 on $mux $flatten\DUT.\Brain.$procmux$2151.
Removed 323 multiplexer ports.
<suppressed ~58 debug messages>

2.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1201: { $flatten\DUT.\Brain.$procmux$2114_CTRL $flatten\DUT.\Brain.$procmux$1147_CMP $flatten\DUT.\Brain.$procmux$2122_CTRL $auto$opt_reduce.cc:134:opt_pmux$3402 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1813: $auto$opt_reduce.cc:134:opt_pmux$3404
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2870: { $flatten\DUT.\Brain.$procmux$2122_CTRL $auto$opt_reduce.cc:134:opt_pmux$3406 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1555: { $flatten\DUT.\Brain.$procmux$2122_CTRL $auto$opt_reduce.cc:134:opt_pmux$3408 $flatten\DUT.\Brain.$procmux$1130_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2882: { $flatten\DUT.\Brain.$procmux$2122_CTRL $flatten\DUT.\Brain.$procmux$1144_CMP $auto$opt_reduce.cc:134:opt_pmux$3410 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1341: { $flatten\DUT.\Brain.$procmux$1144_CMP $auto$opt_reduce.cc:134:opt_pmux$3412 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1368: $auto$opt_reduce.cc:134:opt_pmux$3414
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1696: { $flatten\DUT.\Brain.$procmux$2114_CTRL $flatten\DUT.\Brain.$procmux$1147_CMP $auto$opt_reduce.cc:134:opt_pmux$3416 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2910: { $auto$opt_reduce.cc:134:opt_pmux$3420 $flatten\DUT.\Brain.$procmux$1144_CMP $auto$opt_reduce.cc:134:opt_pmux$3418 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1880: { $auto$opt_reduce.cc:134:opt_pmux$3422 $flatten\DUT.\Brain.$procmux$1130_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1565: { $flatten\DUT.\Brain.$procmux$2122_CTRL $auto$opt_reduce.cc:134:opt_pmux$3424 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2922: { $flatten\DUT.\Brain.$procmux$2114_CTRL $auto$opt_reduce.cc:134:opt_pmux$3426 $flatten\DUT.\Brain.$procmux$1130_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1193: $auto$opt_reduce.cc:134:opt_pmux$3428
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1142: { $flatten\DUT.\Brain.$procmux$2122_CTRL $auto$opt_reduce.cc:134:opt_pmux$3430 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1995: { $flatten\DUT.\Brain.$procmux$2114_CTRL $flatten\DUT.\Brain.$procmux$1147_CMP $auto$opt_reduce.cc:134:opt_pmux$3432 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2934: { $auto$opt_reduce.cc:134:opt_pmux$3434 $flatten\DUT.\Brain.$procmux$1130_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1667: $auto$opt_reduce.cc:134:opt_pmux$3436
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2356: $auto$opt_reduce.cc:134:opt_pmux$3438
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1891: { $flatten\DUT.\Brain.$procmux$1147_CMP $auto$opt_reduce.cc:134:opt_pmux$3440 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2946: $auto$opt_reduce.cc:134:opt_pmux$3442
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1575: { $flatten\DUT.\Brain.$procmux$2114_CTRL $flatten\DUT.\Brain.$procmux$1147_CMP $auto$opt_reduce.cc:134:opt_pmux$3444 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2006: { $flatten\DUT.\Brain.$procmux$2114_CTRL $auto$opt_reduce.cc:134:opt_pmux$3446 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1762: $auto$opt_reduce.cc:134:opt_pmux$3448
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2622: { $auto$opt_reduce.cc:134:opt_pmux$3452 $auto$opt_reduce.cc:134:opt_pmux$3450 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1685: { $flatten\DUT.\Brain.$procmux$2122_CTRL $auto$opt_reduce.cc:134:opt_pmux$3454 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2970: { $auto$opt_reduce.cc:134:opt_pmux$3456 $flatten\DUT.\Brain.$procmux$2122_CTRL $flatten\DUT.\Brain.$procmux$1144_CMP $flatten\DUT.\Brain.$procmux$1130_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2367: { $flatten\DUT.\Brain.$procmux$2122_CTRL $auto$opt_reduce.cc:134:opt_pmux$3458 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2027: { $flatten\DUT.\Brain.$procmux$2114_CTRL $flatten\DUT.\Brain.$procmux$1147_CMP $auto$opt_reduce.cc:134:opt_pmux$3460 $flatten\DUT.\Brain.$procmux$1130_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1585: { $flatten\DUT.\Brain.$procmux$2122_CTRL $auto$opt_reduce.cc:134:opt_pmux$3462 $flatten\DUT.\Brain.$procmux$1130_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1515: { $flatten\DUT.\Brain.$procmux$2114_CTRL $flatten\DUT.\Brain.$procmux$1147_CMP $auto$opt_reduce.cc:134:opt_pmux$3464 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2247: $auto$opt_reduce.cc:134:opt_pmux$3466
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2982: { $flatten\DUT.\Brain.$procmux$1144_CMP $auto$opt_reduce.cc:134:opt_pmux$3468 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1783: { $flatten\DUT.\Brain.$procmux$2114_CTRL $flatten\DUT.\Brain.$procmux$1147_CMP $flatten\DUT.\Brain.$procmux$1144_CMP $auto$opt_reduce.cc:134:opt_pmux$3470 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2038: { $flatten\DUT.\Brain.$procmux$2114_CTRL $flatten\DUT.\Brain.$procmux$1147_CMP $auto$opt_reduce.cc:134:opt_pmux$3472 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2994: { $flatten\DUT.\Brain.$procmux$1147_CMP $auto$opt_reduce.cc:134:opt_pmux$3474 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1595: { $flatten\DUT.\Brain.$procmux$1144_CMP $auto$opt_reduce.cc:134:opt_pmux$3476 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2379: { $flatten\DUT.\Brain.$procmux$1144_CMP $auto$opt_reduce.cc:134:opt_pmux$3478 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2634: { $auto$opt_reduce.cc:134:opt_pmux$3480 $flatten\DUT.\Brain.$procmux$1130_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3018: { $auto$opt_reduce.cc:134:opt_pmux$3482 $flatten\DUT.\Brain.$procmux$1130_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2119: $auto$opt_reduce.cc:134:opt_pmux$3484
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1152: { $auto$opt_reduce.cc:134:opt_pmux$3486 $flatten\DUT.\Brain.$procmux$1144_CMP $flatten\DUT.\Brain.$procmux$1130_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3030: { $auto$opt_reduce.cc:134:opt_pmux$3488 $flatten\DUT.\Brain.$procmux$1144_CMP $flatten\DUT.\Brain.$procmux$1130_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2060: { $flatten\DUT.\Brain.$procmux$2122_CTRL $auto$opt_reduce.cc:134:opt_pmux$3490 $flatten\DUT.\Brain.$procmux$1130_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1211: { $flatten\DUT.\Brain.$procmux$2114_CTRL $auto$opt_reduce.cc:134:opt_pmux$3492 $flatten\DUT.\Brain.$procmux$1130_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1924: $auto$opt_reduce.cc:134:opt_pmux$3494
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2071: { $flatten\DUT.\Brain.$procmux$2122_CTRL $auto$opt_reduce.cc:134:opt_pmux$3496 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1525: { $flatten\DUT.\Brain.$procmux$1147_CMP $auto$opt_reduce.cc:134:opt_pmux$3498 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3087: $auto$opt_reduce.cc:134:opt_pmux$3500
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1456: $auto$opt_reduce.cc:134:opt_pmux$3502
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$1001:
      Old ports: A=14'00000000000000, B=14'11111111111111, Y=$flatten\DUT.\Stack.$procmux$1001_Y
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\Stack.$procmux$1001_Y [0]
      New connections: $flatten\DUT.\Stack.$procmux$1001_Y [13:1] = { $flatten\DUT.\Stack.$procmux$1001_Y [0] $flatten\DUT.\Stack.$procmux$1001_Y [0] $flatten\DUT.\Stack.$procmux$1001_Y [0] $flatten\DUT.\Stack.$procmux$1001_Y [0] $flatten\DUT.\Stack.$procmux$1001_Y [0] $flatten\DUT.\Stack.$procmux$1001_Y [0] $flatten\DUT.\Stack.$procmux$1001_Y [0] $flatten\DUT.\Stack.$procmux$1001_Y [0] $flatten\DUT.\Stack.$procmux$1001_Y [0] $flatten\DUT.\Stack.$procmux$1001_Y [0] $flatten\DUT.\Stack.$procmux$1001_Y [0] $flatten\DUT.\Stack.$procmux$1001_Y [0] $flatten\DUT.\Stack.$procmux$1001_Y [0] }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1717: { $flatten\DUT.\Brain.$procmux$1147_CMP $auto$opt_reduce.cc:134:opt_pmux$3504 $flatten\DUT.\Brain.$procmux$1130_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2445: $auto$opt_reduce.cc:134:opt_pmux$3506
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2822: { $flatten\DUT.\Brain.$procmux$2122_CTRL $auto$opt_reduce.cc:134:opt_pmux$3508 }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$1061:
      Old ports: A=14'11111111111111, B=14'00000000000000, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:758$662_EN[13:0]$676
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:758$662_EN[13:0]$676 [0]
      New connections: $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:758$662_EN[13:0]$676 [13:1] = { $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:758$662_EN[13:0]$676 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:758$662_EN[13:0]$676 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:758$662_EN[13:0]$676 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:758$662_EN[13:0]$676 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:758$662_EN[13:0]$676 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:758$662_EN[13:0]$676 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:758$662_EN[13:0]$676 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:758$662_EN[13:0]$676 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:758$662_EN[13:0]$676 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:758$662_EN[13:0]$676 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:758$662_EN[13:0]$676 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:758$662_EN[13:0]$676 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:758$662_EN[13:0]$676 [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$1064:
      Old ports: A=14'11111111111111, B=14'00000000000000, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:757$661_EN[13:0]$675
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:757$661_EN[13:0]$675 [0]
      New connections: $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:757$661_EN[13:0]$675 [13:1] = { $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:757$661_EN[13:0]$675 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:757$661_EN[13:0]$675 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:757$661_EN[13:0]$675 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:757$661_EN[13:0]$675 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:757$661_EN[13:0]$675 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:757$661_EN[13:0]$675 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:757$661_EN[13:0]$675 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:757$661_EN[13:0]$675 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:757$661_EN[13:0]$675 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:757$661_EN[13:0]$675 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:757$661_EN[13:0]$675 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:757$661_EN[13:0]$675 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:757$661_EN[13:0]$675 [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$1067:
      Old ports: A=14'11111111111111, B=14'00000000000000, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:756$660_EN[13:0]$674
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:756$660_EN[13:0]$674 [0]
      New connections: $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:756$660_EN[13:0]$674 [13:1] = { $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:756$660_EN[13:0]$674 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:756$660_EN[13:0]$674 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:756$660_EN[13:0]$674 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:756$660_EN[13:0]$674 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:756$660_EN[13:0]$674 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:756$660_EN[13:0]$674 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:756$660_EN[13:0]$674 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:756$660_EN[13:0]$674 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:756$660_EN[13:0]$674 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:756$660_EN[13:0]$674 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:756$660_EN[13:0]$674 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:756$660_EN[13:0]$674 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:756$660_EN[13:0]$674 [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$1070:
      Old ports: A=14'11111111111111, B=14'00000000000000, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:755$659_EN[13:0]$673
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:755$659_EN[13:0]$673 [0]
      New connections: $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:755$659_EN[13:0]$673 [13:1] = { $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:755$659_EN[13:0]$673 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:755$659_EN[13:0]$673 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:755$659_EN[13:0]$673 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:755$659_EN[13:0]$673 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:755$659_EN[13:0]$673 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:755$659_EN[13:0]$673 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:755$659_EN[13:0]$673 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:755$659_EN[13:0]$673 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:755$659_EN[13:0]$673 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:755$659_EN[13:0]$673 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:755$659_EN[13:0]$673 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:755$659_EN[13:0]$673 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:755$659_EN[13:0]$673 [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$1073:
      Old ports: A=14'11111111111111, B=14'00000000000000, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:754$658_EN[13:0]$672
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:754$658_EN[13:0]$672 [0]
      New connections: $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:754$658_EN[13:0]$672 [13:1] = { $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:754$658_EN[13:0]$672 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:754$658_EN[13:0]$672 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:754$658_EN[13:0]$672 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:754$658_EN[13:0]$672 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:754$658_EN[13:0]$672 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:754$658_EN[13:0]$672 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:754$658_EN[13:0]$672 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:754$658_EN[13:0]$672 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:754$658_EN[13:0]$672 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:754$658_EN[13:0]$672 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:754$658_EN[13:0]$672 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:754$658_EN[13:0]$672 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:754$658_EN[13:0]$672 [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$1076:
      Old ports: A=14'11111111111111, B=14'00000000000000, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:753$657_EN[13:0]$671
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:753$657_EN[13:0]$671 [0]
      New connections: $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:753$657_EN[13:0]$671 [13:1] = { $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:753$657_EN[13:0]$671 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:753$657_EN[13:0]$671 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:753$657_EN[13:0]$671 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:753$657_EN[13:0]$671 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:753$657_EN[13:0]$671 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:753$657_EN[13:0]$671 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:753$657_EN[13:0]$671 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:753$657_EN[13:0]$671 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:753$657_EN[13:0]$671 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:753$657_EN[13:0]$671 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:753$657_EN[13:0]$671 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:753$657_EN[13:0]$671 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:753$657_EN[13:0]$671 [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$1079:
      Old ports: A=14'11111111111111, B=14'00000000000000, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:752$656_EN[13:0]$670
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:752$656_EN[13:0]$670 [0]
      New connections: $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:752$656_EN[13:0]$670 [13:1] = { $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:752$656_EN[13:0]$670 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:752$656_EN[13:0]$670 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:752$656_EN[13:0]$670 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:752$656_EN[13:0]$670 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:752$656_EN[13:0]$670 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:752$656_EN[13:0]$670 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:752$656_EN[13:0]$670 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:752$656_EN[13:0]$670 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:752$656_EN[13:0]$670 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:752$656_EN[13:0]$670 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:752$656_EN[13:0]$670 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:752$656_EN[13:0]$670 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:752$656_EN[13:0]$670 [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$1082:
      Old ports: A=14'11111111111111, B=14'00000000000000, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:751$655_EN[13:0]$669
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:751$655_EN[13:0]$669 [0]
      New connections: $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:751$655_EN[13:0]$669 [13:1] = { $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:751$655_EN[13:0]$669 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:751$655_EN[13:0]$669 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:751$655_EN[13:0]$669 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:751$655_EN[13:0]$669 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:751$655_EN[13:0]$669 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:751$655_EN[13:0]$669 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:751$655_EN[13:0]$669 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:751$655_EN[13:0]$669 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:751$655_EN[13:0]$669 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:751$655_EN[13:0]$669 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:751$655_EN[13:0]$669 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:751$655_EN[13:0]$669 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:751$655_EN[13:0]$669 [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$890:
      Old ports: A=14'00000000000000, B=14'11111111111111, Y=$flatten\DUT.\Stack.$procmux$890_Y
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\Stack.$procmux$890_Y [0]
      New connections: $flatten\DUT.\Stack.$procmux$890_Y [13:1] = { $flatten\DUT.\Stack.$procmux$890_Y [0] $flatten\DUT.\Stack.$procmux$890_Y [0] $flatten\DUT.\Stack.$procmux$890_Y [0] $flatten\DUT.\Stack.$procmux$890_Y [0] $flatten\DUT.\Stack.$procmux$890_Y [0] $flatten\DUT.\Stack.$procmux$890_Y [0] $flatten\DUT.\Stack.$procmux$890_Y [0] $flatten\DUT.\Stack.$procmux$890_Y [0] $flatten\DUT.\Stack.$procmux$890_Y [0] $flatten\DUT.\Stack.$procmux$890_Y [0] $flatten\DUT.\Stack.$procmux$890_Y [0] $flatten\DUT.\Stack.$procmux$890_Y [0] $flatten\DUT.\Stack.$procmux$890_Y [0] }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2270: $auto$opt_reduce.cc:134:opt_pmux$3510
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1535: { $flatten\DUT.\Brain.$procmux$2114_CTRL $flatten\DUT.\Brain.$procmux$1147_CMP $auto$opt_reduce.cc:134:opt_pmux$3512 }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$938:
      Old ports: A=14'00000000000000, B=14'11111100000000, Y=$flatten\DUT.\Stack.$procmux$938_Y
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\Stack.$procmux$938_Y [8]
      New connections: { $flatten\DUT.\Stack.$procmux$938_Y [13:9] $flatten\DUT.\Stack.$procmux$938_Y [7:0] } = { $flatten\DUT.\Stack.$procmux$938_Y [8] $flatten\DUT.\Stack.$procmux$938_Y [8] $flatten\DUT.\Stack.$procmux$938_Y [8] $flatten\DUT.\Stack.$procmux$938_Y [8] $flatten\DUT.\Stack.$procmux$938_Y [8] 8'00000000 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2834: { $auto$opt_reduce.cc:134:opt_pmux$3514 $flatten\DUT.\Brain.$procmux$1130_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Unit.$procmux$3105: { $flatten\DUT.\Unit.$procmux$3113_CMP $flatten\DUT.\Unit.$procmux$3112_CMP $flatten\DUT.\Unit.$procmux$3110_CMP $auto$opt_reduce.cc:134:opt_pmux$3518 $auto$opt_reduce.cc:134:opt_pmux$3516 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2418: { $flatten\DUT.\Brain.$procmux$2421_CTRL $auto$opt_reduce.cc:134:opt_pmux$3520 }
    New ctrl vector for $pmux cell $flatten\DUT.\Unit.$procmux$3117: { $flatten\DUT.\Unit.$procmux$3112_CMP $flatten\DUT.\Unit.$procmux$3111_CMP $flatten\DUT.\Unit.$procmux$3110_CMP $flatten\DUT.\Unit.$procmux$3109_CMP $flatten\DUT.\Unit.$procmux$3108_CMP $flatten\DUT.\Unit.$procmux$3107_CMP $flatten\DUT.\Unit.$eq$i8008_core.v:286$47_Y }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2846: { $flatten\DUT.\Brain.$procmux$2122_CTRL $flatten\DUT.\Brain.$procmux$1144_CMP $auto$opt_reduce.cc:134:opt_pmux$3522 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2097: { $flatten\DUT.\Brain.$procmux$1144_CMP $auto$opt_reduce.cc:134:opt_pmux$3524 }
    New ctrl vector for $pmux cell $flatten\DUT.\Unit.$procmux$3129: { $auto$opt_reduce.cc:134:opt_pmux$3526 $flatten\DUT.\Unit.$eq$i8008_core.v:286$47_Y }
    New ctrl vector for $pmux cell $flatten\DUT.\Unit.$procmux$3143: { $flatten\DUT.\Unit.$procmux$3149_CMP $flatten\DUT.\Unit.$procmux$3148_CMP $auto$opt_reduce.cc:134:opt_pmux$3530 $auto$opt_reduce.cc:134:opt_pmux$3528 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1331: { $flatten\DUT.\Brain.$procmux$1144_CMP $auto$opt_reduce.cc:134:opt_pmux$3532 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2108: { $auto$opt_reduce.cc:134:opt_pmux$3534 $flatten\DUT.\Brain.$procmux$1130_CMP }
    Consolidated identical input bits for $mux cell $flatten\DUT.\rf.$procmux$831:
      Old ports: A=8'00000000, B=8'11111111, Y=$flatten\DUT.\rf.$procmux$831_Y
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\rf.$procmux$831_Y [0]
      New connections: $flatten\DUT.\rf.$procmux$831_Y [7:1] = { $flatten\DUT.\rf.$procmux$831_Y [0] $flatten\DUT.\rf.$procmux$831_Y [0] $flatten\DUT.\rf.$procmux$831_Y [0] $flatten\DUT.\rf.$procmux$831_Y [0] $flatten\DUT.\rf.$procmux$831_Y [0] $flatten\DUT.\rf.$procmux$831_Y [0] $flatten\DUT.\rf.$procmux$831_Y [0] }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2858: { $auto$opt_reduce.cc:134:opt_pmux$3536 $flatten\DUT.\Brain.$procmux$1144_CMP $flatten\DUT.\Brain.$procmux$1130_CMP }
    Consolidated identical input bits for $mux cell $flatten\DUT.\rf.$procmux$849:
      Old ports: A=8'11111111, B=8'00000000, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:715$746_EN[7:0]$755
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:715$746_EN[7:0]$755 [0]
      New connections: $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:715$746_EN[7:0]$755 [7:1] = { $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:715$746_EN[7:0]$755 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:715$746_EN[7:0]$755 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:715$746_EN[7:0]$755 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:715$746_EN[7:0]$755 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:715$746_EN[7:0]$755 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:715$746_EN[7:0]$755 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:715$746_EN[7:0]$755 [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\rf.$procmux$852:
      Old ports: A=8'11111111, B=8'00000000, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:714$745_EN[7:0]$754
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:714$745_EN[7:0]$754 [0]
      New connections: $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:714$745_EN[7:0]$754 [7:1] = { $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:714$745_EN[7:0]$754 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:714$745_EN[7:0]$754 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:714$745_EN[7:0]$754 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:714$745_EN[7:0]$754 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:714$745_EN[7:0]$754 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:714$745_EN[7:0]$754 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:714$745_EN[7:0]$754 [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\rf.$procmux$855:
      Old ports: A=8'11111111, B=8'00000000, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:713$744_EN[7:0]$753
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:713$744_EN[7:0]$753 [0]
      New connections: $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:713$744_EN[7:0]$753 [7:1] = { $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:713$744_EN[7:0]$753 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:713$744_EN[7:0]$753 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:713$744_EN[7:0]$753 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:713$744_EN[7:0]$753 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:713$744_EN[7:0]$753 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:713$744_EN[7:0]$753 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:713$744_EN[7:0]$753 [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\rf.$procmux$858:
      Old ports: A=8'11111111, B=8'00000000, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:712$743_EN[7:0]$752
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:712$743_EN[7:0]$752 [0]
      New connections: $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:712$743_EN[7:0]$752 [7:1] = { $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:712$743_EN[7:0]$752 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:712$743_EN[7:0]$752 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:712$743_EN[7:0]$752 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:712$743_EN[7:0]$752 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:712$743_EN[7:0]$752 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:712$743_EN[7:0]$752 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:712$743_EN[7:0]$752 [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\rf.$procmux$861:
      Old ports: A=8'11111111, B=8'00000000, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:711$742_EN[7:0]$751
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:711$742_EN[7:0]$751 [0]
      New connections: $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:711$742_EN[7:0]$751 [7:1] = { $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:711$742_EN[7:0]$751 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:711$742_EN[7:0]$751 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:711$742_EN[7:0]$751 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:711$742_EN[7:0]$751 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:711$742_EN[7:0]$751 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:711$742_EN[7:0]$751 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:711$742_EN[7:0]$751 [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\rf.$procmux$864:
      Old ports: A=8'11111111, B=8'00000000, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:710$741_EN[7:0]$750
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:710$741_EN[7:0]$750 [0]
      New connections: $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:710$741_EN[7:0]$750 [7:1] = { $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:710$741_EN[7:0]$750 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:710$741_EN[7:0]$750 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:710$741_EN[7:0]$750 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:710$741_EN[7:0]$750 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:710$741_EN[7:0]$750 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:710$741_EN[7:0]$750 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:710$741_EN[7:0]$750 [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\rf.$procmux$867:
      Old ports: A=8'11111111, B=8'00000000, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:709$740_EN[7:0]$749
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:709$740_EN[7:0]$749 [0]
      New connections: $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:709$740_EN[7:0]$749 [7:1] = { $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:709$740_EN[7:0]$749 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:709$740_EN[7:0]$749 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:709$740_EN[7:0]$749 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:709$740_EN[7:0]$749 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:709$740_EN[7:0]$749 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:709$740_EN[7:0]$749 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:709$740_EN[7:0]$749 [0] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3403: { $flatten\DUT.\Brain.$procmux$1764_CMP [0] $flatten\DUT.\Brain.$procmux$1649_CMP $flatten\DUT.\Brain.$procmux$1639_CMP $flatten\DUT.\Brain.$procmux$1226_CMP $flatten\DUT.\Brain.$procmux$1128_CMP $flatten\DUT.\Brain.$eq$i8008_core.v:419$74_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3405: { $flatten\DUT.\Brain.$procmux$1148_CMP $flatten\DUT.\Brain.$procmux$1147_CMP $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1144_CMP $flatten\DUT.\Brain.$procmux$1130_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3407: { $flatten\DUT.\Brain.$procmux$1148_CMP $flatten\DUT.\Brain.$procmux$1147_CMP $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1144_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3409: { $flatten\DUT.\Brain.$procmux$1148_CMP $flatten\DUT.\Brain.$procmux$1147_CMP $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1130_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3411: { $flatten\DUT.\Brain.$procmux$1148_CMP $flatten\DUT.\Brain.$procmux$1147_CMP $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1145_CMP $flatten\DUT.\Brain.$procmux$1130_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3413: { $flatten\DUT.\Brain.$procmux$1226_CMP $flatten\DUT.\Brain.$procmux$1128_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3415: { $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1145_CMP $flatten\DUT.\Brain.$procmux$1144_CMP $flatten\DUT.\Brain.$procmux$1130_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3417: { $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1145_CMP $flatten\DUT.\Brain.$procmux$1130_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3419: { $flatten\DUT.\Brain.$procmux$1148_CMP $flatten\DUT.\Brain.$procmux$1147_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3421: { $flatten\DUT.\Brain.$procmux$1148_CMP $flatten\DUT.\Brain.$procmux$1147_CMP $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1145_CMP $flatten\DUT.\Brain.$procmux$1144_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3423: { $flatten\DUT.\Brain.$procmux$1148_CMP $flatten\DUT.\Brain.$procmux$1147_CMP $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1144_CMP $flatten\DUT.\Brain.$procmux$1130_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3425: { $flatten\DUT.\Brain.$procmux$1147_CMP $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1145_CMP $flatten\DUT.\Brain.$procmux$1144_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3427: $flatten\DUT.\Brain.$procmux$1128_CMP
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3429: { $flatten\DUT.\Brain.$procmux$1148_CMP $flatten\DUT.\Brain.$procmux$1147_CMP $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1144_CMP $flatten\DUT.\Brain.$procmux$1130_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3431: { $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1145_CMP $flatten\DUT.\Brain.$procmux$1144_CMP $flatten\DUT.\Brain.$procmux$1130_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3433: { $flatten\DUT.\Brain.$procmux$1148_CMP $flatten\DUT.\Brain.$procmux$1147_CMP $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1145_CMP $flatten\DUT.\Brain.$procmux$1144_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3435: { $flatten\DUT.\Brain.$procmux$1649_CMP $flatten\DUT.\Brain.$procmux$1639_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3437: { $flatten\DUT.\Brain.$procmux$2272_CMP $flatten\DUT.\Brain.$procmux$2248_CMP $flatten\DUT.\Brain.$procmux$2238_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3439: { $flatten\DUT.\Brain.$procmux$1148_CMP $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1145_CMP $flatten\DUT.\Brain.$procmux$1144_CMP $flatten\DUT.\Brain.$procmux$1130_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3441: { $flatten\DUT.\Brain.$procmux$1148_CMP $flatten\DUT.\Brain.$procmux$1147_CMP $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1145_CMP $flatten\DUT.\Brain.$procmux$1144_CMP $flatten\DUT.\Brain.$procmux$1130_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3443: { $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1145_CMP $flatten\DUT.\Brain.$procmux$1144_CMP $flatten\DUT.\Brain.$procmux$1130_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3445: { $flatten\DUT.\Brain.$procmux$1147_CMP $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1145_CMP $flatten\DUT.\Brain.$procmux$1144_CMP $flatten\DUT.\Brain.$procmux$1130_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3447: { $flatten\DUT.\Brain.$procmux$1764_CMP [0] $flatten\DUT.\Brain.$procmux$1226_CMP $flatten\DUT.\Brain.$procmux$1128_CMP $flatten\DUT.\Brain.$eq$i8008_core.v:419$74_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3449: { $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1145_CMP $flatten\DUT.\Brain.$procmux$1144_CMP $flatten\DUT.\Brain.$procmux$1130_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3451: { $flatten\DUT.\Brain.$procmux$1148_CMP $flatten\DUT.\Brain.$procmux$1147_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3453: { $flatten\DUT.\Brain.$procmux$1148_CMP $flatten\DUT.\Brain.$procmux$1147_CMP $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1144_CMP $flatten\DUT.\Brain.$procmux$1130_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3455: { $flatten\DUT.\Brain.$procmux$1148_CMP $flatten\DUT.\Brain.$procmux$1147_CMP $flatten\DUT.\Brain.$procmux$1146_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3457: { $flatten\DUT.\Brain.$procmux$1148_CMP $flatten\DUT.\Brain.$procmux$1147_CMP $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1144_CMP $flatten\DUT.\Brain.$procmux$1130_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3459: { $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1145_CMP $flatten\DUT.\Brain.$procmux$1144_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3461: { $flatten\DUT.\Brain.$procmux$1148_CMP $flatten\DUT.\Brain.$procmux$1147_CMP $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1144_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3463: { $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1145_CMP $flatten\DUT.\Brain.$procmux$1144_CMP $flatten\DUT.\Brain.$procmux$1130_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3465: { $flatten\DUT.\Brain.$procmux$2248_CMP $flatten\DUT.\Brain.$procmux$2238_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3467: { $flatten\DUT.\Brain.$procmux$1148_CMP $flatten\DUT.\Brain.$procmux$1147_CMP $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1145_CMP $flatten\DUT.\Brain.$procmux$1130_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3469: { $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1145_CMP $flatten\DUT.\Brain.$procmux$1130_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3471: { $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1145_CMP $flatten\DUT.\Brain.$procmux$1144_CMP $flatten\DUT.\Brain.$procmux$1130_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3473: { $flatten\DUT.\Brain.$procmux$1148_CMP $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1145_CMP $flatten\DUT.\Brain.$procmux$1144_CMP $flatten\DUT.\Brain.$procmux$1130_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3475: { $flatten\DUT.\Brain.$procmux$1148_CMP $flatten\DUT.\Brain.$procmux$1147_CMP $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1145_CMP $flatten\DUT.\Brain.$procmux$1130_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3477: { $flatten\DUT.\Brain.$procmux$1148_CMP $flatten\DUT.\Brain.$procmux$1147_CMP $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1145_CMP $flatten\DUT.\Brain.$procmux$1130_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3479: { $flatten\DUT.\Brain.$procmux$1148_CMP $flatten\DUT.\Brain.$procmux$1147_CMP $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1145_CMP $flatten\DUT.\Brain.$procmux$1144_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3481: { $flatten\DUT.\Brain.$procmux$1148_CMP $flatten\DUT.\Brain.$procmux$1147_CMP $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1145_CMP $flatten\DUT.\Brain.$procmux$1144_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3483: { $flatten\DUT.\Brain.$procmux$1148_CMP $flatten\DUT.\Brain.$procmux$1147_CMP $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1145_CMP $flatten\DUT.\Brain.$procmux$1144_CMP $flatten\DUT.\Brain.$procmux$1130_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3485: { $flatten\DUT.\Brain.$procmux$1148_CMP $flatten\DUT.\Brain.$procmux$1147_CMP $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1145_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3487: { $flatten\DUT.\Brain.$procmux$1148_CMP $flatten\DUT.\Brain.$procmux$1147_CMP $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1145_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3489: { $flatten\DUT.\Brain.$procmux$1148_CMP $flatten\DUT.\Brain.$procmux$1147_CMP $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1144_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3491: { $flatten\DUT.\Brain.$procmux$1147_CMP $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1145_CMP $flatten\DUT.\Brain.$procmux$1144_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3493: { $flatten\DUT.\Brain.$procmux$1764_CMP [0] $flatten\DUT.\Brain.$procmux$1649_CMP $flatten\DUT.\Brain.$procmux$1639_CMP $flatten\DUT.\Brain.$procmux$1226_CMP $flatten\DUT.\Brain.$procmux$1128_CMP $flatten\DUT.\Brain.$eq$i8008_core.v:419$74_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3495: { $flatten\DUT.\Brain.$procmux$1148_CMP $flatten\DUT.\Brain.$procmux$1147_CMP $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1144_CMP $flatten\DUT.\Brain.$procmux$1130_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3497: { $flatten\DUT.\Brain.$procmux$1148_CMP $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1145_CMP $flatten\DUT.\Brain.$procmux$1144_CMP $flatten\DUT.\Brain.$procmux$1130_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3499: { $flatten\DUT.\Brain.$procmux$2272_CMP $flatten\DUT.\Brain.$procmux$2248_CMP $flatten\DUT.\Brain.$procmux$2238_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3501: { $flatten\DUT.\Brain.$procmux$1226_CMP $flatten\DUT.\Brain.$procmux$1128_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3503: { $flatten\DUT.\Brain.$procmux$1148_CMP $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1145_CMP $flatten\DUT.\Brain.$procmux$1144_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3505: { $flatten\DUT.\Brain.$procmux$2248_CMP $flatten\DUT.\Brain.$procmux$2238_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3507: { $flatten\DUT.\Brain.$procmux$1148_CMP $flatten\DUT.\Brain.$procmux$1147_CMP $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1144_CMP $flatten\DUT.\Brain.$procmux$1130_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3509: { $flatten\DUT.\Brain.$procmux$2272_CMP $flatten\DUT.\Brain.$procmux$2248_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3511: { $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1145_CMP $flatten\DUT.\Brain.$procmux$1144_CMP $flatten\DUT.\Brain.$procmux$1130_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3513: { $flatten\DUT.\Brain.$procmux$1148_CMP $flatten\DUT.\Brain.$procmux$1147_CMP $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1145_CMP $flatten\DUT.\Brain.$procmux$1144_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3519: { $flatten\DUT.\Brain.$procmux$2248_CMP $flatten\DUT.\Brain.$procmux$2238_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3521: { $flatten\DUT.\Brain.$procmux$1148_CMP $flatten\DUT.\Brain.$procmux$1147_CMP $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1130_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3523: { $flatten\DUT.\Brain.$procmux$1148_CMP $flatten\DUT.\Brain.$procmux$1147_CMP $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1145_CMP $flatten\DUT.\Brain.$procmux$1130_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3531: { $flatten\DUT.\Brain.$procmux$1148_CMP $flatten\DUT.\Brain.$procmux$1147_CMP $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1145_CMP $flatten\DUT.\Brain.$procmux$1130_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3533: { $flatten\DUT.\Brain.$procmux$1148_CMP $flatten\DUT.\Brain.$procmux$1147_CMP $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1145_CMP $flatten\DUT.\Brain.$procmux$1144_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3535: { $flatten\DUT.\Brain.$procmux$1148_CMP $flatten\DUT.\Brain.$procmux$1147_CMP $flatten\DUT.\Brain.$procmux$1146_CMP $flatten\DUT.\Brain.$procmux$1145_CMP }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$1043:
      Old ports: A=$flatten\DUT.\Stack.$3$memwr$\rf$i8008_core.v:763$664_EN[13:0]$721, B=14'00000000000000, Y=$flatten\DUT.\Stack.$procmux$1043_Y
      New ports: A=$flatten\DUT.\Stack.$procmux$938_Y [8], B=1'0, Y=$flatten\DUT.\Stack.$procmux$1043_Y [8]
      New connections: { $flatten\DUT.\Stack.$procmux$1043_Y [13:9] $flatten\DUT.\Stack.$procmux$1043_Y [7:0] } = { $flatten\DUT.\Stack.$procmux$1043_Y [8] $flatten\DUT.\Stack.$procmux$1043_Y [8] $flatten\DUT.\Stack.$procmux$1043_Y [8] $flatten\DUT.\Stack.$procmux$1043_Y [8] $flatten\DUT.\Stack.$procmux$1043_Y [8] 8'00000000 }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$1106:
      Old ports: A=14'00000000000000, B=$flatten\DUT.\Stack.$2$memwr$\rf$i8008_core.v:761$663_EN[13:0]$708, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:761$663_EN[13:0]$679
      New ports: A=1'0, B=$flatten\DUT.\Stack.$procmux$1001_Y [0], Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:761$663_EN[13:0]$679 [0]
      New connections: $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:761$663_EN[13:0]$679 [13:1] = { $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:761$663_EN[13:0]$679 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:761$663_EN[13:0]$679 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:761$663_EN[13:0]$679 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:761$663_EN[13:0]$679 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:761$663_EN[13:0]$679 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:761$663_EN[13:0]$679 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:761$663_EN[13:0]$679 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:761$663_EN[13:0]$679 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:761$663_EN[13:0]$679 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:761$663_EN[13:0]$679 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:761$663_EN[13:0]$679 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:761$663_EN[13:0]$679 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:761$663_EN[13:0]$679 [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$965:
      Old ports: A=$flatten\DUT.\Stack.$4$memwr$\rf$i8008_core.v:765$666_EN[13:0]$729, B=14'00000000000000, Y=$flatten\DUT.\Stack.$procmux$965_Y
      New ports: A=$flatten\DUT.\Stack.$procmux$890_Y [0], B=1'0, Y=$flatten\DUT.\Stack.$procmux$965_Y [0]
      New connections: $flatten\DUT.\Stack.$procmux$965_Y [13:1] = { $flatten\DUT.\Stack.$procmux$965_Y [0] $flatten\DUT.\Stack.$procmux$965_Y [0] $flatten\DUT.\Stack.$procmux$965_Y [0] $flatten\DUT.\Stack.$procmux$965_Y [0] $flatten\DUT.\Stack.$procmux$965_Y [0] $flatten\DUT.\Stack.$procmux$965_Y [0] $flatten\DUT.\Stack.$procmux$965_Y [0] $flatten\DUT.\Stack.$procmux$965_Y [0] $flatten\DUT.\Stack.$procmux$965_Y [0] $flatten\DUT.\Stack.$procmux$965_Y [0] $flatten\DUT.\Stack.$procmux$965_Y [0] $flatten\DUT.\Stack.$procmux$965_Y [0] $flatten\DUT.\Stack.$procmux$965_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\rf.$procmux$870:
      Old ports: A=8'00000000, B=$flatten\DUT.\rf.$2$memwr$\rf$i8008_core.v:718$747_EN[7:0]$771, Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:718$747_EN[7:0]$758
      New ports: A=1'0, B=$flatten\DUT.\rf.$procmux$831_Y [0], Y=$flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:718$747_EN[7:0]$758 [0]
      New connections: $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:718$747_EN[7:0]$758 [7:1] = { $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:718$747_EN[7:0]$758 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:718$747_EN[7:0]$758 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:718$747_EN[7:0]$758 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:718$747_EN[7:0]$758 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:718$747_EN[7:0]$758 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:718$747_EN[7:0]$758 [0] $flatten\DUT.\rf.$0$memwr$\rf$i8008_core.v:718$747_EN[7:0]$758 [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$1019:
      Old ports: A=$flatten\DUT.\Stack.$3$memwr$\rf$i8008_core.v:765$666_EN[13:0]$725, B=14'00000000000000, Y=$flatten\DUT.\Stack.$procmux$1019_Y
      New ports: A=$flatten\DUT.\Stack.$procmux$965_Y [0], B=1'0, Y=$flatten\DUT.\Stack.$procmux$1019_Y [0]
      New connections: $flatten\DUT.\Stack.$procmux$1019_Y [13:1] = { $flatten\DUT.\Stack.$procmux$1019_Y [0] $flatten\DUT.\Stack.$procmux$1019_Y [0] $flatten\DUT.\Stack.$procmux$1019_Y [0] $flatten\DUT.\Stack.$procmux$1019_Y [0] $flatten\DUT.\Stack.$procmux$1019_Y [0] $flatten\DUT.\Stack.$procmux$1019_Y [0] $flatten\DUT.\Stack.$procmux$1019_Y [0] $flatten\DUT.\Stack.$procmux$1019_Y [0] $flatten\DUT.\Stack.$procmux$1019_Y [0] $flatten\DUT.\Stack.$procmux$1019_Y [0] $flatten\DUT.\Stack.$procmux$1019_Y [0] $flatten\DUT.\Stack.$procmux$1019_Y [0] $flatten\DUT.\Stack.$procmux$1019_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$1097:
      Old ports: A=14'00000000000000, B=$flatten\DUT.\Stack.$2$memwr$\rf$i8008_core.v:763$664_EN[13:0]$711, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:763$664_EN[13:0]$682
      New ports: A=1'0, B=$flatten\DUT.\Stack.$procmux$1043_Y [8], Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:763$664_EN[13:0]$682 [8]
      New connections: { $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:763$664_EN[13:0]$682 [13:9] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:763$664_EN[13:0]$682 [7:0] } = { $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:763$664_EN[13:0]$682 [8] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:763$664_EN[13:0]$682 [8] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:763$664_EN[13:0]$682 [8] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:763$664_EN[13:0]$682 [8] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:763$664_EN[13:0]$682 [8] 8'00000000 }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$procmux$1085:
      Old ports: A=14'00000000000000, B=$flatten\DUT.\Stack.$2$memwr$\rf$i8008_core.v:765$666_EN[13:0]$715, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:765$666_EN[13:0]$686
      New ports: A=1'0, B=$flatten\DUT.\Stack.$procmux$1019_Y [0], Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:765$666_EN[13:0]$686 [0]
      New connections: $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:765$666_EN[13:0]$686 [13:1] = { $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:765$666_EN[13:0]$686 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:765$666_EN[13:0]$686 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:765$666_EN[13:0]$686 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:765$666_EN[13:0]$686 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:765$666_EN[13:0]$686 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:765$666_EN[13:0]$686 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:765$666_EN[13:0]$686 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:765$666_EN[13:0]$686 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:765$666_EN[13:0]$686 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:765$666_EN[13:0]$686 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:765$666_EN[13:0]$686 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:765$666_EN[13:0]$686 [0] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:765$666_EN[13:0]$686 [0] }
  Optimizing cells in module \top.
Performed a total of 153 changes.

2.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~297 debug messages>
Removed a total of 99 cells.

2.10.6. Executing OPT_DFF pass (perform DFF optimizations).

2.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 1372 unused wires.
<suppressed ~2 debug messages>

2.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.10.9. Rerunning OPT passes. (Maybe there is more to do..)

2.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

2.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1201: { $auto$opt_reduce.cc:134:opt_pmux$3538 $flatten\DUT.\Brain.$procmux$1145_CTRL $auto$opt_reduce.cc:134:opt_pmux$3402 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1211: { $auto$opt_reduce.cc:134:opt_pmux$3426 $auto$opt_reduce.cc:134:opt_pmux$3540 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1535: { $auto$opt_reduce.cc:134:opt_pmux$3542 $auto$opt_reduce.cc:134:opt_pmux$3416 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1545: { $flatten\DUT.\Brain.$procmux$1148_CTRL $auto$opt_reduce.cc:134:opt_pmux$3544 $flatten\DUT.\Brain.$procmux$1145_CTRL $flatten\DUT.\Brain.$procmux$1144_CMP $flatten\DUT.\Brain.$procmux$1130_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1575: { $auto$opt_reduce.cc:134:opt_pmux$3546 $auto$opt_reduce.cc:134:opt_pmux$3416 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1696: { $auto$opt_reduce.cc:134:opt_pmux$3548 $auto$opt_reduce.cc:134:opt_pmux$3416 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$1783: { $auto$opt_reduce.cc:134:opt_pmux$3550 $flatten\DUT.\Brain.$procmux$1144_CMP $auto$opt_reduce.cc:134:opt_pmux$3418 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2038: { $auto$opt_reduce.cc:134:opt_pmux$3552 $auto$opt_reduce.cc:134:opt_pmux$3416 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2049: { $flatten\DUT.\Brain.$procmux$1148_CTRL $auto$opt_reduce.cc:134:opt_pmux$3554 $flatten\DUT.\Brain.$procmux$1145_CTRL $flatten\DUT.\Brain.$procmux$1144_CMP $flatten\DUT.\Brain.$procmux$1130_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2958: { $flatten\DUT.\Brain.$procmux$1148_CTRL $auto$opt_reduce.cc:134:opt_pmux$3556 $flatten\DUT.\Brain.$procmux$1145_CTRL $flatten\DUT.\Brain.$procmux$1144_CMP $flatten\DUT.\Brain.$procmux$1130_CMP }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3030: { $auto$opt_reduce.cc:134:opt_pmux$3486 $auto$opt_reduce.cc:134:opt_pmux$3558 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3537: { $flatten\DUT.\Brain.$procmux$1148_CMP $flatten\DUT.\Brain.$procmux$1147_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3539: { $flatten\DUT.\Brain.$procmux$1148_CMP $flatten\DUT.\Brain.$procmux$1130_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3541: { $flatten\DUT.\Brain.$procmux$1148_CMP $flatten\DUT.\Brain.$procmux$1147_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3545: { $flatten\DUT.\Brain.$procmux$1148_CMP $flatten\DUT.\Brain.$procmux$1147_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3547: { $flatten\DUT.\Brain.$procmux$1148_CMP $flatten\DUT.\Brain.$procmux$1147_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3549: { $flatten\DUT.\Brain.$procmux$1148_CMP $flatten\DUT.\Brain.$procmux$1147_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$3551: { $flatten\DUT.\Brain.$procmux$1148_CMP $flatten\DUT.\Brain.$procmux$1147_CMP }
  Optimizing cells in module \top.
Performed a total of 18 changes.

2.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~24 debug messages>
Removed a total of 8 cells.

2.10.13. Executing OPT_DFF pass (perform DFF optimizations).

2.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

2.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.10.16. Rerunning OPT passes. (Maybe there is more to do..)

2.10.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

2.10.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.10.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.10.20. Executing OPT_DFF pass (perform DFF optimizations).

2.10.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.10.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.10.23. Finished OPT passes. (There is nothing left to do.)

2.11. Executing FSM pass (extract and optimize FSM).

2.11.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register top.DUT.Brain.cycle.
Not marking top.DUT.Brain.state as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.

2.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\DUT.Brain.cycle' from module `\top'.
  found $dff cell for state register: $flatten\DUT.\Brain.$procdff$3379
  root of input selection tree: $flatten\DUT.\Brain.$0\cycle[1:0]
  found reset state: 2'00 (guessed from mux tree)
  found ctrl input: \reset_n
  found state code: 2'00
  found ctrl input: $flatten\DUT.\Brain.$procmux$1122_CMP
  found ctrl input: $flatten\DUT.\Brain.$procmux$1123_CMP
  found ctrl input: $flatten\DUT.\Brain.$procmux$1124_CMP
  found ctrl input: $flatten\DUT.\Brain.$procmux$1130_CMP
  found ctrl input: $auto$opt_reduce.cc:134:opt_pmux$3408
  found ctrl input: $flatten\DUT.\Brain.$procmux$1145_CTRL
  found ctrl input: $flatten\DUT.\Brain.$procmux$1260_CTRL
  found ctrl input: $flatten\DUT.\Brain.$procmux$1287_CTRL
  found ctrl input: $flatten\DUT.\Brain.$procmux$1226_CMP
  found ctrl input: \DUT.Brain.CF
  found ctrl input: $auto$opt_reduce.cc:134:opt_pmux$3414
  found ctrl input: $flatten\DUT.\Brain.$procmux$1764_CTRL
  found state code: 2'10
  found ctrl input: $flatten\DUT.\Brain.$procmux$1144_CMP
  found ctrl input: $auto$opt_reduce.cc:134:opt_pmux$3456
  found ctrl input: $flatten\DUT.\Brain.$eq$i8008_core.v:419$74_Y
  found state code: 2'01
  found ctrl input: $flatten\DUT.\Brain.$procmux$2740_CTRL
  found ctrl input: $flatten\DUT.\Brain.$procmux$2582_CTRL
  found ctrl input: $flatten\DUT.\Brain.$procmux$2674_CTRL
  found ctrl input: $flatten\DUT.\Brain.$or$i8008_core.v:371$67_Y
  found ctrl input: $flatten\DUT.\Brain.$ne$i8008_core.v:360$62_Y
  found ctrl input: \DUT.Intr
  found ctrl output: $flatten\DUT.\Brain.$procmux$1122_CMP
  found ctrl output: $flatten\DUT.\Brain.$procmux$1123_CMP
  found ctrl output: $flatten\DUT.\Brain.$procmux$1124_CMP
  ctrl inputs: { $auto$opt_reduce.cc:134:opt_pmux$3414 $auto$opt_reduce.cc:134:opt_pmux$3408 $auto$opt_reduce.cc:134:opt_pmux$3456 \DUT.Intr $flatten\DUT.\Brain.$procmux$2740_CTRL $flatten\DUT.\Brain.$procmux$2674_CTRL $flatten\DUT.\Brain.$procmux$2582_CTRL $flatten\DUT.\Brain.$procmux$1764_CTRL $flatten\DUT.\Brain.$procmux$1287_CTRL $flatten\DUT.\Brain.$procmux$1260_CTRL $flatten\DUT.\Brain.$procmux$1226_CMP $flatten\DUT.\Brain.$procmux$1145_CTRL $flatten\DUT.\Brain.$procmux$1144_CMP $flatten\DUT.\Brain.$procmux$1130_CMP $flatten\DUT.\Brain.$eq$i8008_core.v:419$74_Y $flatten\DUT.\Brain.$or$i8008_core.v:371$67_Y $flatten\DUT.\Brain.$ne$i8008_core.v:360$62_Y \DUT.Brain.CF \reset_n }
  ctrl outputs: { $flatten\DUT.\Brain.$procmux$1124_CMP $flatten\DUT.\Brain.$procmux$1123_CMP $flatten\DUT.\Brain.$procmux$1122_CMP $flatten\DUT.\Brain.$0\cycle[1:0] }
  transition:       2'00 19'------------------0 ->       2'00 5'10000
  transition:       2'00 19'--0--------000----1 -> INVALID_STATE(2'x) 5'100xx  <ignored invalid transition!>
  transition:       2'00 19'--1---------------1 ->       2'00 5'10000
  transition:       2'00 19'----000----1------1 ->       2'00 5'10000
  transition:       2'00 19'---0-1-----1----0-1 ->       2'00 5'10000
  transition:       2'00 19'---1-1-----1----0-1 ->       2'00 5'10000
  transition:       2'00 19'-----1-----1----1-1 ->       2'01 5'10001
  transition:       2'00 19'------1----1---0--1 ->       2'00 5'10000
  transition:       2'00 19'------1----1---1--1 ->       2'00 5'10000
  transition:       2'00 19'----1------1------1 ->       2'01 5'10001
  transition:       2'00 19'------------1-0---1 ->       2'00 5'10000
  transition:       2'00 19'------------1-1---1 ->       2'01 5'10001
  transition:       2'00 19'-------------1----1 ->       2'00 5'10000
  transition:       2'10 19'------------------0 ->       2'00 5'00100
  transition:       2'10 19'-0---------0-0----1 -> INVALID_STATE(2'x) 5'001xx  <ignored invalid transition!>
  transition:       2'10 19'--------0001------1 ->       2'10 5'00110
  transition:       2'10 19'----------11------1 ->       2'00 5'00100
  transition:       2'10 19'--------1--1-----01 ->       2'00 5'00100
  transition:       2'10 19'--------1--1-----11 ->       2'10 5'00110
  transition:       2'10 19'---------1-1-----01 ->       2'10 5'00110
  transition:       2'10 19'---------1-1-----11 ->       2'00 5'00100
  transition:       2'10 19'-1----------------1 ->       2'10 5'00110
  transition:       2'10 19'-------------1----1 ->       2'00 5'00100
  transition:       2'01 19'------------------0 ->       2'00 5'01000
  transition:       2'01 19'-0---------0-0----1 -> INVALID_STATE(2'x) 5'010xx  <ignored invalid transition!>
  transition:       2'01 19'0------0---1------1 ->       2'01 5'01001
  transition:       2'01 19'-------1---1------1 ->       2'00 5'01000
  transition:       2'01 19'1----------1------1 ->       2'10 5'01010
  transition:       2'01 19'-1----------------1 ->       2'01 5'01001
  transition:       2'01 19'-------------1----1 ->       2'00 5'01000

2.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\DUT.Brain.cycle$3559' from module `\top'.
  Merging pattern 19'------1----1---0--1 and 19'------1----1---1--1 from group (0 0 5'10000).
  Merging pattern 19'------1----1---1--1 and 19'------1----1---0--1 from group (0 0 5'10000).
  Merging pattern 19'---0-1-----1----0-1 and 19'---1-1-----1----0-1 from group (0 0 5'10000).
  Merging pattern 19'---1-1-----1----0-1 and 19'---0-1-----1----0-1 from group (0 0 5'10000).
  Removing unused input signal \DUT.Intr.
  Removing unused input signal $flatten\DUT.\Brain.$or$i8008_core.v:371$67_Y.

2.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 18 unused cells and 18 unused wires.
<suppressed ~20 debug messages>

2.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\DUT.Brain.cycle$3559' from module `\top'.
  Removing unused output signal $flatten\DUT.\Brain.$0\cycle[1:0] [0].
  Removing unused output signal $flatten\DUT.\Brain.$0\cycle[1:0] [1].

2.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\DUT.Brain.cycle$3559' from module `\top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> --1
  10 -> -1-
  01 -> 1--

2.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\DUT.Brain.cycle$3559' from module `top':
-------------------------------------

  Information on FSM $fsm$\DUT.Brain.cycle$3559 (\DUT.Brain.cycle):

  Number of input signals:   17
  Number of output signals:   3
  Number of state bits:       3

  Input signals:
    0: \reset_n
    1: \DUT.Brain.CF
    2: $flatten\DUT.\Brain.$ne$i8008_core.v:360$62_Y
    3: $flatten\DUT.\Brain.$eq$i8008_core.v:419$74_Y
    4: $flatten\DUT.\Brain.$procmux$1130_CMP
    5: $flatten\DUT.\Brain.$procmux$1144_CMP
    6: $flatten\DUT.\Brain.$procmux$1145_CTRL
    7: $flatten\DUT.\Brain.$procmux$1226_CMP
    8: $flatten\DUT.\Brain.$procmux$1260_CTRL
    9: $flatten\DUT.\Brain.$procmux$1287_CTRL
   10: $flatten\DUT.\Brain.$procmux$1764_CTRL
   11: $flatten\DUT.\Brain.$procmux$2582_CTRL
   12: $flatten\DUT.\Brain.$procmux$2674_CTRL
   13: $flatten\DUT.\Brain.$procmux$2740_CTRL
   14: $auto$opt_reduce.cc:134:opt_pmux$3456
   15: $auto$opt_reduce.cc:134:opt_pmux$3408
   16: $auto$opt_reduce.cc:134:opt_pmux$3414

  Output signals:
    0: $flatten\DUT.\Brain.$procmux$1122_CMP
    1: $flatten\DUT.\Brain.$procmux$1123_CMP
    2: $flatten\DUT.\Brain.$procmux$1124_CMP

  State encoding:
    0:      3'--1  <RESET STATE>
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 17'----------------0   ->     0 3'100
      1:     0 17'----1-----1---0-1   ->     0 3'100
      2:     0 17'-----------1-0--1   ->     0 3'100
      3:     0 17'------------1---1   ->     0 3'100
      4:     0 17'---000----1-----1   ->     0 3'100
      5:     0 17'-----1----1-----1   ->     0 3'100
      6:     0 17'--1-------------1   ->     0 3'100
      7:     0 17'----1-----1---1-1   ->     2 3'100
      8:     0 17'-----------1-1--1   ->     2 3'100
      9:     0 17'---1------1-----1   ->     2 3'100
     10:     1 17'----------------0   ->     0 3'001
     11:     1 17'-------1--1----01   ->     0 3'001
     12:     1 17'--------1-1----11   ->     0 3'001
     13:     1 17'------------1---1   ->     0 3'001
     14:     1 17'---------11-----1   ->     0 3'001
     15:     1 17'--------1-1----01   ->     1 3'001
     16:     1 17'-------1--1----11   ->     1 3'001
     17:     1 17'-------0001-----1   ->     1 3'001
     18:     1 17'-1--------------1   ->     1 3'001
     19:     2 17'----------------0   ->     0 3'010
     20:     2 17'------------1---1   ->     0 3'010
     21:     2 17'------1---1-----1   ->     0 3'010
     22:     2 17'1---------1-----1   ->     1 3'010
     23:     2 17'0-----0---1-----1   ->     2 3'010
     24:     2 17'-1--------------1   ->     2 3'010

-------------------------------------

2.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\DUT.Brain.cycle$3559' from module `\top'.

2.12. Executing OPT pass (performing simple optimizations).

2.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

2.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

2.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~58 debug messages>

2.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.12.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\DUT.\regB.$procdff$3348 ($dff) from module top (D = $flatten\DUT.\regB.$procmux$825_Y, Q = \DUT.regB.Q, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$3651 ($sdff) from module top (D = \DUT.Stack.bus, Q = \DUT.regB.Q).
Adding SRST signal on $flatten\DUT.\regA.$procdff$3348 ($dff) from module top (D = $flatten\DUT.\regA.$procmux$825_Y, Q = \DUT.regA.Q, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$3653 ($sdff) from module top (D = \DUT.Stack.bus, Q = \DUT.regA.Q).
Adding SRST signal on $flatten\DUT.\Unit.\flag_reg.$procdff$3347 ($dff) from module top (D = $flatten\DUT.\Unit.\flag_reg.$procmux$820_Y, Q = \DUT.Unit.flag_reg.Q, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$3655 ($sdff) from module top (D = { $flatten\DUT.\Unit.$ternary$i8008_core.v:286$52_Y $flatten\DUT.\Unit.$or$i8008_core.v:284$41_Y $flatten\DUT.\Unit.$or$i8008_core.v:285$45_Y }, Q = \DUT.Unit.flag_reg.Q [2:0]).
Adding EN signal on $auto$ff.cc:266:slice$3655 ($sdff) from module top (D = \DUT.Unit.flag_reg.d [3], Q = \DUT.Unit.flag_reg.Q [3]).
Adding SRST signal on $flatten\DUT.\SP_SEL.$procdff$3359 ($dff) from module top (D = $flatten\DUT.\SP_SEL.$procmux$881_Y, Q = \DUT.SP_SEL.Q, rval = 3'000).
Adding EN signal on $auto$ff.cc:266:slice$3662 ($sdff) from module top (D = $flatten\DUT.\SP_SEL.$procmux$881_Y, Q = \DUT.SP_SEL.Q).
Adding SRST signal on $flatten\DUT.\Brain.$procdff$3378 ($dff) from module top (D = \DUT.Brain.next_state, Q = \DUT.Brain.state, rval = 3'010).
Adding SRST signal on $flatten\DUT.$procdff$3381 ($dff) from module top (D = $flatten\DUT.$or$i8008_core.v:114$637_Y, Q = \DUT.Intr, rval = 1'0).

2.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 13 unused cells and 18 unused wires.
<suppressed ~14 debug messages>

2.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

2.12.9. Rerunning OPT passes. (Maybe there is more to do..)

2.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~56 debug messages>

2.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.12.13. Executing OPT_DFF pass (perform DFF optimizations).

2.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.12.16. Finished OPT passes. (There is nothing left to do.)

2.13. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$3639 ($eq).
Removed top 2 bits (of 3) from mux cell top.$flatten\DUT.\Brain.$ternary$i8008_core.v:338$59 ($mux).
Removed top 2 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$eq$i8008_core.v:347$61 ($eq).
Removed top 2 bits (of 3) from mux cell top.$flatten\DUT.\Brain.$ternary$i8008_core.v:437$76 ($mux).
Removed top 1 bits (of 4) from port B of cell top.$flatten\DUT.\Brain.$eq$i8008_core.v:540$83 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\DUT.\Brain.$eq$i8008_core.v:644$91 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\DUT.\Brain.$eq$i8008_core.v:644$94 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\DUT.\Brain.$eq$i8008_core.v:644$100 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\DUT.\Brain.$eq$i8008_core.v:644$101 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$3597 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\DUT.\Brain.$procmux$1128_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$flatten\DUT.\Brain.$procmux$1128_CMP1 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$flatten\DUT.\Brain.$procmux$1128_CMP2 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\DUT.\Brain.$procmux$1128_CMP3 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$flatten\DUT.\Brain.$procmux$1128_CMP4 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$flatten\DUT.\Brain.$procmux$1128_CMP5 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$flatten\DUT.\Brain.$procmux$1145_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\DUT.\Brain.$procmux$1145_CMP1 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\DUT.\Brain.$procmux$1148_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$procmux$1226_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\DUT.\Brain.$procmux$1649_CMP1 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\DUT.\Brain.$procmux$1649_CMP2 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\DUT.\Brain.$procmux$1764_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\DUT.\Brain.$procmux$2238_CMP1 ($eq).
Removed top 6 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$procmux$2248_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$procmux$2248_CMP1 ($eq).
Removed top 3 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$procmux$2248_CMP2 ($eq).
Removed top 3 bits (of 8) from port B of cell top.$flatten\DUT.\Brain.$procmux$2248_CMP3 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\DUT.\Brain.$procmux$2285_CMP0 ($eq).
Removed top 4 bits (of 6) from port B of cell top.$flatten\DUT.\Brain.$procmux$2582_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$flatten\DUT.\Brain.$procmux$2582_CMP1 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\DUT.\Brain.$procmux$2583_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$3618 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\DUT.\Brain.$procmux$3103_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$flatten\DUT.\Stack.$add$i8008_core.v:765$731 ($add).
Removed top 18 bits (of 32) from port Y of cell top.$flatten\DUT.\Stack.$add$i8008_core.v:765$731 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\DUT.\SP_SEL.$add$i8008_core.v:829$736 ($add).
Removed top 29 bits (of 32) from port Y of cell top.$flatten\DUT.\SP_SEL.$add$i8008_core.v:829$736 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\DUT.\SP_SEL.$sub$i8008_core.v:831$739 ($sub).
Removed top 29 bits (of 32) from port Y of cell top.$flatten\DUT.\SP_SEL.$sub$i8008_core.v:831$739 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$flatten\DUT.\Unit.$add$i8008_core.v:251$27 ($add).
Removed top 23 bits (of 32) from port Y of cell top.$flatten\DUT.\Unit.$add$i8008_core.v:251$27 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\DUT.\Unit.$sub$i8008_core.v:252$28 ($sub).
Removed top 23 bits (of 32) from port Y of cell top.$flatten\DUT.\Unit.$sub$i8008_core.v:252$28 ($sub).
Removed top 8 bits (of 9) from port B of cell top.$flatten\DUT.\Unit.$add$i8008_core.v:274$32 ($add).
Removed top 8 bits (of 9) from port B of cell top.$flatten\DUT.\Unit.$sub$i8008_core.v:276$36 ($sub).
Removed top 1 bits (of 3) from port B of cell top.$flatten\DUT.\Unit.$procmux$3110_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\DUT.\Unit.$procmux$3111_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$flatten\DUT.\Unit.$procmux$3112_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\DUT.\Unit.$procmux$3144_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\DUT.\Unit.$procmux$3145_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$flatten\DUT.\Unit.$procmux$3146_CMP0 ($eq).
Removed top 1 bits (of 2) from wire top.$flatten\DUT.\Brain.$14\ctrl_signals[7:6].
Removed top 1 bits (of 2) from wire top.$flatten\DUT.\Brain.$18\ctrl_signals[33:32].
Removed top 1 bits (of 2) from wire top.$flatten\DUT.\Brain.$50\ctrl_signals[30:29].
Removed top 2 bits (of 3) from wire top.$flatten\DUT.\Brain.$ternary$i8008_core.v:338$59_Y.
Removed top 2 bits (of 3) from wire top.$flatten\DUT.\Brain.$ternary$i8008_core.v:437$76_Y.
Removed top 29 bits (of 32) from wire top.$flatten\DUT.\SP_SEL.$add$i8008_core.v:829$736_Y.
Removed top 18 bits (of 32) from wire top.$flatten\DUT.\Stack.$add$i8008_core.v:765$731_Y.
Removed top 23 bits (of 32) from wire top.$flatten\DUT.\Unit.$add$i8008_core.v:251$27_Y.
Removed top 23 bits (of 32) from wire top.$flatten\DUT.\Unit.$sub$i8008_core.v:252$28_Y.
Removed top 2 bits (of 12) from wire top.chip_inputs.

2.14. Executing PEEPOPT pass (run peephole optimizers).

2.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 10 unused wires.
<suppressed ~1 debug messages>

2.16. Executing SHARE pass (SAT-based resource sharing).
Found 2 cells in module top that may be considered for resource sharing.
  Analyzing resource sharing options for $flatten\DUT.\rf.$memrd$\rf$i8008_core.v:719$773 ($memrd):
    Found 1 activation_patterns using ctrl signal { \DUT.Brain.ctrl_signals [11] \DUT.Brain.ctrl_signals [5] }.
    No candidates found.
  Analyzing resource sharing options for $flatten\DUT.\Stack.$memrd$\rf$i8008_core.v:765$730 ($memrd):
    Found 2 activation_patterns using ctrl signal { $flatten\DUT.\Stack.$logic_and$i8008_core.v:762$718_Y $flatten\DUT.\Stack.$logic_and$i8008_core.v:760$705_Y \DUT.Brain.ctrl_signals [5] \DUT.Brain.ctrl_signals [3] \reset_n }.
    No candidates found.

2.17. Executing TECHMAP pass (map to technology primitives).

2.17.1. Executing Verilog-2005 frontend: /Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/cmp2lut.v
Parsing Verilog input from `/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

2.17.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

2.18. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.20. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $flatten\DUT.\SP_SEL.$add$i8008_core.v:829$736 ($add).
  creating $macc model for $flatten\DUT.\SP_SEL.$sub$i8008_core.v:831$739 ($sub).
  creating $macc model for $flatten\DUT.\Stack.$add$i8008_core.v:765$731 ($add).
  creating $macc model for $flatten\DUT.\Unit.$add$i8008_core.v:251$27 ($add).
  creating $macc model for $flatten\DUT.\Unit.$add$i8008_core.v:273$29 ($add).
  creating $macc model for $flatten\DUT.\Unit.$add$i8008_core.v:274$32 ($add).
  creating $macc model for $flatten\DUT.\Unit.$sub$i8008_core.v:252$28 ($sub).
  creating $macc model for $flatten\DUT.\Unit.$sub$i8008_core.v:275$33 ($sub).
  creating $macc model for $flatten\DUT.\Unit.$sub$i8008_core.v:276$36 ($sub).
  creating $alu model for $macc $flatten\DUT.\Unit.$sub$i8008_core.v:276$36.
  creating $alu model for $macc $flatten\DUT.\Unit.$sub$i8008_core.v:275$33.
  creating $alu model for $macc $flatten\DUT.\Unit.$sub$i8008_core.v:252$28.
  creating $alu model for $macc $flatten\DUT.\Unit.$add$i8008_core.v:274$32.
  creating $alu model for $macc $flatten\DUT.\Unit.$add$i8008_core.v:273$29.
  creating $alu model for $macc $flatten\DUT.\Unit.$add$i8008_core.v:251$27.
  creating $alu model for $macc $flatten\DUT.\Stack.$add$i8008_core.v:765$731.
  creating $alu model for $macc $flatten\DUT.\SP_SEL.$sub$i8008_core.v:831$739.
  creating $alu model for $macc $flatten\DUT.\SP_SEL.$add$i8008_core.v:829$736.
  creating $alu cell for $flatten\DUT.\SP_SEL.$add$i8008_core.v:829$736: $auto$alumacc.cc:485:replace_alu$3681
  creating $alu cell for $flatten\DUT.\SP_SEL.$sub$i8008_core.v:831$739: $auto$alumacc.cc:485:replace_alu$3684
  creating $alu cell for $flatten\DUT.\Stack.$add$i8008_core.v:765$731: $auto$alumacc.cc:485:replace_alu$3687
  creating $alu cell for $flatten\DUT.\Unit.$add$i8008_core.v:251$27: $auto$alumacc.cc:485:replace_alu$3690
  creating $alu cell for $flatten\DUT.\Unit.$add$i8008_core.v:274$32: $auto$alumacc.cc:485:replace_alu$3693
  creating $alu cell for $flatten\DUT.\Unit.$sub$i8008_core.v:252$28: $auto$alumacc.cc:485:replace_alu$3696
  creating $alu cell for $flatten\DUT.\Unit.$add$i8008_core.v:273$29: $auto$alumacc.cc:485:replace_alu$3699
  creating $alu cell for $flatten\DUT.\Unit.$sub$i8008_core.v:275$33: $auto$alumacc.cc:485:replace_alu$3702
  creating $alu cell for $flatten\DUT.\Unit.$sub$i8008_core.v:276$36: $auto$alumacc.cc:485:replace_alu$3705
  created 9 $alu and 0 $macc cells.

2.21. Executing OPT pass (performing simple optimizations).

2.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.21.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~56 debug messages>

2.21.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.21.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.21.6. Executing OPT_DFF pass (perform DFF optimizations).

2.21.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.21.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.21.9. Finished OPT passes. (There is nothing left to do.)

2.22. Executing MEMORY pass.

2.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 8 transformations.

2.22.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 49 transformations.

2.22.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing top.DUT.Stack.rf write port 0.
  Analyzing top.DUT.Stack.rf write port 1.
  Analyzing top.DUT.Stack.rf write port 2.
  Analyzing top.DUT.Stack.rf write port 3.
  Analyzing top.DUT.Stack.rf write port 4.
  Analyzing top.DUT.Stack.rf write port 5.
  Analyzing top.DUT.Stack.rf write port 6.
  Analyzing top.DUT.Stack.rf write port 7.
  Analyzing top.DUT.Stack.rf write port 8.
  Analyzing top.DUT.Stack.rf write port 9.
  Analyzing top.DUT.Stack.rf write port 10.
  Analyzing top.DUT.rf.rf write port 0.
  Analyzing top.DUT.rf.rf write port 1.
  Analyzing top.DUT.rf.rf write port 2.
  Analyzing top.DUT.rf.rf write port 3.
  Analyzing top.DUT.rf.rf write port 4.
  Analyzing top.DUT.rf.rf write port 5.
  Analyzing top.DUT.rf.rf write port 6.
  Analyzing top.DUT.rf.rf write port 7.

2.22.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

2.22.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `\DUT.Stack.rf'[0] in module `\top': no output FF found.
Checking read port `\DUT.rf.rf'[0] in module `\top': no output FF found.
Checking read port address `\DUT.Stack.rf'[0] in module `\top': merged address FF to cell.
Checking read port address `\DUT.rf.rf'[0] in module `\top': no address FF found.

2.22.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.22.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating write ports of memory top.DUT.Stack.rf by address:
  Merging ports 0, 1 (address 3'000).
  Merging ports 0, 2 (address 3'000).
  Merging ports 0, 3 (address 3'000).
  Merging ports 0, 4 (address 3'000).
  Merging ports 6, 7 (address 3'110).
  Merging ports 8, 9 (address \DUT.SP_SEL.Q).
  Merging ports 8, 10 (address \DUT.SP_SEL.Q).
Consolidating write ports of memory top.DUT.Stack.rf by address:
  Merging ports 1, 2 (address 3'101).
Consolidating write ports of memory top.DUT.Stack.rf by address:
Consolidating write ports of memory top.DUT.rf.rf by address:
  Merging ports 0, 1 (address 3'000).
  Merging ports 0, 2 (address 3'000).
  Merging ports 0, 3 (address 3'000).
  Merging ports 0, 4 (address 3'000).
Consolidating write ports of memory top.DUT.rf.rf by address:
Consolidating write ports of memory top.DUT.Stack.rf using sat-based resource sharing:
Consolidating write ports of memory top.DUT.rf.rf using sat-based resource sharing:
  Checking group clocked with posedge \clk100, width 8: ports 1, 2, 3.
  Common input cone for all EN signals: 31 cells.
  Size of unconstrained SAT problem: 233 variables, 660 clauses
  According to SAT solver sharing of port 1 with port 2 is not possible.
  Merging port 3 into port 1.

2.22.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

2.22.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 9 unused cells and 9 unused wires.
<suppressed ~10 debug messages>

2.22.10. Executing MEMORY_COLLECT pass (generating $mem cells).

2.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.24. Executing MEMORY_LIBMAP pass (mapping memories to cells).
using FF mapping for memory top.DUT.Stack.rf
using FF mapping for memory top.DUT.rf.rf
<suppressed ~12 debug messages>

2.25. Executing TECHMAP pass (map to technology primitives).

2.25.1. Executing Verilog-2005 frontend: /Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K_'.
Successfully finished Verilog frontend.

2.25.2. Executing Verilog-2005 frontend: /Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/spram_map.v
Parsing Verilog input from `/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/spram_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_SPRAM_'.
Successfully finished Verilog frontend.

2.25.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

2.26. Executing ICE40_BRAMINIT pass.

2.27. Executing OPT pass (performing simple optimizations).

2.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~107 debug messages>

2.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.27.3. Executing OPT_DFF pass (perform DFF optimizations).

2.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 8 unused cells and 48 unused wires.
<suppressed ~9 debug messages>

2.27.5. Finished fast OPT passes.

2.28. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory \DUT.Stack.rf in module \top:
  created 8 $dff cells and 0 static cells of width 14.
Extracted addr FF from read port 0 of top.DUT.Stack.rf: $\DUT.Stack.rf$rdreg[0]
  read interface: 1 $dff and 7 $mux cells.
  write interface: 32 write mux blocks.
Mapping memory \DUT.rf.rf in module \top:
  created 8 $dff cells and 0 static cells of width 8.
  read interface: 0 $dff and 7 $mux cells.
  write interface: 24 write mux blocks.

2.29. Executing OPT pass (performing simple optimizations).

2.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~93 debug messages>

2.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $auto$memory_share.cc:453:consolidate_wr_using_sat$3735: $auto$rtlil.cc:2403:ReduceOr$3729 -> 1'1
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~75 debug messages>

2.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$1270:
      Old ports: A=3'111, B=3'010, Y=$flatten\DUT.\Brain.$13\next_state[2:0]
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\Brain.$13\next_state[2:0] [0]
      New connections: $flatten\DUT.\Brain.$13\next_state[2:0] [2:1] = { $flatten\DUT.\Brain.$13\next_state[2:0] [0] 1'1 }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$1298:
      Old ports: A=3'010, B=3'111, Y=$flatten\DUT.\Brain.$12\next_state[2:0]
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\Brain.$12\next_state[2:0] [0]
      New connections: $flatten\DUT.\Brain.$12\next_state[2:0] [2:1] = { $flatten\DUT.\Brain.$12\next_state[2:0] [0] 1'1 }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$1430:
      Old ports: A=3'000, B=3'101, Y=$flatten\DUT.\Brain.$72\ctrl_signals[14:11] [3:1]
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\Brain.$72\ctrl_signals[14:11] [1]
      New connections: $flatten\DUT.\Brain.$72\ctrl_signals[14:11] [3:2] = { $flatten\DUT.\Brain.$72\ctrl_signals[14:11] [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$1612:
      Old ports: A=3'000, B=3'110, Y=$flatten\DUT.\Brain.$68\ctrl_signals[14:11] [3:1]
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\Brain.$68\ctrl_signals[14:11] [2]
      New connections: { $flatten\DUT.\Brain.$68\ctrl_signals[14:11] [3] $flatten\DUT.\Brain.$68\ctrl_signals[14:11] [1] } = { $flatten\DUT.\Brain.$68\ctrl_signals[14:11] [2] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$1762:
      Old ports: A=3'111, B=3'010, Y=$flatten\DUT.\Brain.$9\next_state[2:0]
      New ports: A=1'1, B=1'0, Y=$flatten\DUT.\Brain.$9\next_state[2:0] [0]
      New connections: $flatten\DUT.\Brain.$9\next_state[2:0] [2:1] = { $flatten\DUT.\Brain.$9\next_state[2:0] [0] 1'1 }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$2089:
      Old ports: A=3'000, B=3'110, Y=$flatten\DUT.\Brain.$42\ctrl_signals[14:11] [3:1]
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\Brain.$42\ctrl_signals[14:11] [2]
      New connections: { $flatten\DUT.\Brain.$42\ctrl_signals[14:11] [3] $flatten\DUT.\Brain.$42\ctrl_signals[14:11] [1] } = { $flatten\DUT.\Brain.$42\ctrl_signals[14:11] [2] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$2147:
      Old ports: A=3'000, B=3'101, Y=$flatten\DUT.\Brain.$47\ctrl_signals[14:11] [3:1]
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\Brain.$47\ctrl_signals[14:11] [1]
      New connections: $flatten\DUT.\Brain.$47\ctrl_signals[14:11] [3:2] = { $flatten\DUT.\Brain.$47\ctrl_signals[14:11] [1] 1'0 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$2205: \DUT.Brain.cycle [2:1]
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$2260:
      Old ports: A=3'000, B={ 2'10 $auto$wreduce.cc:455:run$3674 [0] }, Y=$flatten\DUT.\Brain.$28\ctrl_signals[24:16] [4:2]
      New ports: A=2'00, B={ 1'1 $auto$wreduce.cc:455:run$3674 [0] }, Y={ $flatten\DUT.\Brain.$28\ctrl_signals[24:16] [4] $flatten\DUT.\Brain.$28\ctrl_signals[24:16] [2] }
      New connections: $flatten\DUT.\Brain.$28\ctrl_signals[24:16] [3] = 1'0
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$2393:
      Old ports: A=3'101, B=3'010, Y=$flatten\DUT.\Brain.$7\next_state[2:0]
      New ports: A=2'01, B=2'10, Y=$flatten\DUT.\Brain.$7\next_state[2:0] [1:0]
      New connections: $flatten\DUT.\Brain.$7\next_state[2:0] [2] = $flatten\DUT.\Brain.$7\next_state[2:0] [0]
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$2688:
      Old ports: A=3'011, B=3'110, Y=$flatten\DUT.\Brain.$5\next_state[2:0]
      New ports: A=2'01, B=2'10, Y={ $flatten\DUT.\Brain.$5\next_state[2:0] [2] $flatten\DUT.\Brain.$5\next_state[2:0] [0] }
      New connections: $flatten\DUT.\Brain.$5\next_state[2:0] [1] = 1'1
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$2899:
      Old ports: A=3'010, B=3'111, Y=$flatten\DUT.\Brain.$6\next_state[2:0]
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\Brain.$6\next_state[2:0] [0]
      New connections: $flatten\DUT.\Brain.$6\next_state[2:0] [2:1] = { $flatten\DUT.\Brain.$6\next_state[2:0] [0] 1'1 }
    New ctrl vector for $pmux cell $flatten\DUT.\Brain.$procmux$3076: \DUT.Brain.cycle [0]
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$ternary$i8008_core.v:481$78:
      Old ports: A=2'01, B=2'11, Y=$flatten\DUT.\Brain.$ternary$i8008_core.v:481$78_Y
      New ports: A=1'0, B=1'1, Y=$flatten\DUT.\Brain.$ternary$i8008_core.v:481$78_Y [1]
      New connections: $flatten\DUT.\Brain.$ternary$i8008_core.v:481$78_Y [0] = 1'1
    Consolidated identical input bits for $mux cell $flatten\DUT.\Stack.$ternary$i8008_core.v:761$716:
      Old ports: A=\DUT.Stack.bus, B={ 2'00 \DUT.Stack.bus [5:3] 3'000 }, Y=$flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:761$663_DATA[13:0]$678 [7:0]
      New ports: A={ \DUT.Stack.bus [7:6] \DUT.Stack.bus [2:0] }, B=5'00000, Y={ $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:761$663_DATA[13:0]$678 [7:6] $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:761$663_DATA[13:0]$678 [2:0] }
      New connections: $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:761$663_DATA[13:0]$678 [5:3] = \DUT.Stack.bus [5:3]
  Optimizing cells in module \top.
    Consolidated identical input bits for $pmux cell $flatten\DUT.\Brain.$procmux$1322:
      Old ports: A=3'111, B={ 3'010 $flatten\DUT.\Brain.$12\next_state[2:0] $flatten\DUT.\Brain.$13\next_state[2:0] }, Y=$flatten\DUT.\Brain.$11\next_state[2:0]
      New ports: A=1'1, B={ 1'0 $flatten\DUT.\Brain.$12\next_state[2:0] [0] $flatten\DUT.\Brain.$13\next_state[2:0] [0] }, Y=$flatten\DUT.\Brain.$11\next_state[2:0] [0]
      New connections: $flatten\DUT.\Brain.$11\next_state[2:0] [2:1] = { $flatten\DUT.\Brain.$11\next_state[2:0] [0] 1'1 }
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$2708:
      Old ports: A=$flatten\DUT.\Brain.$5\next_state[2:0], B=3'010, Y=$flatten\DUT.\Brain.$4\next_state[2:0]
      New ports: A={ $flatten\DUT.\Brain.$5\next_state[2:0] [2] $flatten\DUT.\Brain.$5\next_state[2:0] [0] }, B=2'00, Y={ $flatten\DUT.\Brain.$4\next_state[2:0] [2] $flatten\DUT.\Brain.$4\next_state[2:0] [0] }
      New connections: $flatten\DUT.\Brain.$4\next_state[2:0] [1] = 1'1
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$3018:
      Old ports: A=9'000000000, B={ $auto$opt_reduce.cc:134:opt_pmux$3438 $flatten\DUT.\Brain.$28\ctrl_signals[24:16] [7:2] $auto$opt_reduce.cc:134:opt_pmux$3466 $flatten\DUT.\Brain.$28\ctrl_signals[24:16] [0] }, Y=$flatten\DUT.\Brain.$4\ctrl_signals[24:16]
      New ports: A=8'00000000, B={ $auto$opt_reduce.cc:134:opt_pmux$3438 $flatten\DUT.\Brain.$28\ctrl_signals[24:16] [7:4] $flatten\DUT.\Brain.$28\ctrl_signals[24:16] [2] $auto$opt_reduce.cc:134:opt_pmux$3466 $flatten\DUT.\Brain.$28\ctrl_signals[24:16] [0] }, Y={ $flatten\DUT.\Brain.$4\ctrl_signals[24:16] [8:4] $flatten\DUT.\Brain.$4\ctrl_signals[24:16] [2:0] }
      New connections: $flatten\DUT.\Brain.$4\ctrl_signals[24:16] [3] = 1'0
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\DUT.\Brain.$procmux$2179:
      Old ports: A=3'000, B=$flatten\DUT.\Brain.$4\ctrl_signals[24:16] [4:2], Y=\DUT.Unit.ALU_ctrl [5:3]
      New ports: A=2'00, B={ $flatten\DUT.\Brain.$4\ctrl_signals[24:16] [4] $flatten\DUT.\Brain.$4\ctrl_signals[24:16] [2] }, Y={ \DUT.Unit.ALU_ctrl [5] \DUT.Unit.ALU_ctrl [3] }
      New connections: \DUT.Unit.ALU_ctrl [4] = 1'0
    Consolidated identical input bits for $pmux cell $flatten\DUT.\Brain.$procmux$2739:
      Old ports: A=3'111, B={ $flatten\DUT.\Brain.$4\next_state[2:0] $flatten\DUT.\Brain.$6\next_state[2:0] 3'010 }, Y=$flatten\DUT.\Brain.$3\next_state[2:0]
      New ports: A=2'11, B={ $flatten\DUT.\Brain.$4\next_state[2:0] [2] $flatten\DUT.\Brain.$4\next_state[2:0] [0] $flatten\DUT.\Brain.$6\next_state[2:0] [0] $flatten\DUT.\Brain.$6\next_state[2:0] [0] 2'00 }, Y={ $flatten\DUT.\Brain.$3\next_state[2:0] [2] $flatten\DUT.\Brain.$3\next_state[2:0] [0] }
      New connections: $flatten\DUT.\Brain.$3\next_state[2:0] [1] = 1'1
  Optimizing cells in module \top.
Performed a total of 20 changes.

2.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

2.29.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $\DUT.Stack.rf$rdreg[0] ($dff) from module top (D = $auto$rtlil.cc:2496:Mux$3712, Q = $\DUT.Stack.rf$rdreg[0]$q, rval = 3'000).

2.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 106 unused wires.
<suppressed ~2 debug messages>

2.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~9 debug messages>

2.29.9. Rerunning OPT passes. (Maybe there is more to do..)

2.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/7 on $pmux $flatten\DUT.\Unit.$procmux$3154.
    dead port 2/7 on $pmux $flatten\DUT.\Unit.$procmux$3154.
Removed 2 multiplexer ports.
<suppressed ~75 debug messages>

2.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.29.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $memory\DUT.rf.rf[7]$3977 ($dff) from module top (D = $auto$rtlil.cc:2496:Mux$3733, Q = \DUT.rf.rf[7]).
Adding SRST signal on $memory\DUT.rf.rf[6]$3975 ($dff) from module top (D = $memory\DUT.rf.rf$wrmux[6][1][0]$y$4135, Q = \DUT.rf.rf[6], rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$4162 ($sdff) from module top (D = $auto$rtlil.cc:2496:Mux$3733, Q = \DUT.rf.rf[6]).
Adding EN signal on $memory\DUT.rf.rf[5]$3973 ($dff) from module top (D = $auto$rtlil.cc:2496:Mux$3733, Q = \DUT.rf.rf[5]).
Adding EN signal on $memory\DUT.rf.rf[4]$3971 ($dff) from module top (D = $memory\DUT.rf.rf$wrmux[4][1][0]$y$4099, Q = \DUT.rf.rf[4]).
Adding EN signal on $memory\DUT.rf.rf[3]$3969 ($dff) from module top (D = $memory\DUT.rf.rf$wrmux[3][1][0]$y$4079, Q = \DUT.rf.rf[3]).
Adding EN signal on $memory\DUT.rf.rf[2]$3967 ($dff) from module top (D = $memory\DUT.rf.rf$wrmux[2][1][0]$y$4061, Q = \DUT.rf.rf[2]).
Adding EN signal on $memory\DUT.rf.rf[1]$3965 ($dff) from module top (D = $memory\DUT.rf.rf$wrmux[1][1][0]$y$4039, Q = \DUT.rf.rf[1]).
Adding EN signal on $memory\DUT.rf.rf[0]$3963 ($dff) from module top (D = $memory\DUT.rf.rf$wrmux[0][1][0]$y$4017, Q = \DUT.rf.rf[0]).
Adding EN signal on $memory\DUT.Stack.rf[7]$3770 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[7][2][0]$y$3958, Q = \DUT.Stack.rf[7] [7:0]).
Adding EN signal on $memory\DUT.Stack.rf[7]$3770 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[7][2][8]$y$3962, Q = \DUT.Stack.rf[7] [13:8]).
Adding EN signal on $memory\DUT.Stack.rf[6]$3768 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[6][2][0]$y$3940, Q = \DUT.Stack.rf[6] [7:0]).
Adding EN signal on $memory\DUT.Stack.rf[6]$3768 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[6][2][8]$y$3944, Q = \DUT.Stack.rf[6] [13:8]).
Adding EN signal on $memory\DUT.Stack.rf[5]$3766 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[5][2][0]$y$3920, Q = \DUT.Stack.rf[5] [7:0]).
Adding EN signal on $memory\DUT.Stack.rf[5]$3766 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[5][2][8]$y$3924, Q = \DUT.Stack.rf[5] [13:8]).
Adding EN signal on $memory\DUT.Stack.rf[4]$3764 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[4][2][0]$y$3902, Q = \DUT.Stack.rf[4] [7:0]).
Adding EN signal on $memory\DUT.Stack.rf[4]$3764 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[4][2][8]$y$3906, Q = \DUT.Stack.rf[4] [13:8]).
Adding EN signal on $memory\DUT.Stack.rf[3]$3762 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[3][2][0]$y$3878, Q = \DUT.Stack.rf[3] [7:0]).
Adding EN signal on $memory\DUT.Stack.rf[3]$3762 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[3][2][8]$y$3882, Q = \DUT.Stack.rf[3] [13:8]).
Adding EN signal on $memory\DUT.Stack.rf[2]$3760 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[2][2][8]$y$3864, Q = \DUT.Stack.rf[2] [13:8]).
Adding EN signal on $memory\DUT.Stack.rf[2]$3760 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[2][2][0]$y$3860, Q = \DUT.Stack.rf[2] [7:0]).
Adding EN signal on $memory\DUT.Stack.rf[1]$3758 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[1][2][8]$y$3842, Q = \DUT.Stack.rf[1] [13:8]).
Adding EN signal on $memory\DUT.Stack.rf[1]$3758 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[1][2][0]$y$3838, Q = \DUT.Stack.rf[1] [7:0]).
Adding EN signal on $memory\DUT.Stack.rf[0]$3756 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[0][2][0]$y$3818, Q = \DUT.Stack.rf[0] [7:0]).
Adding EN signal on $memory\DUT.Stack.rf[0]$3756 ($dff) from module top (D = $memory\DUT.Stack.rf$wrmux[0][2][8]$y$3822, Q = \DUT.Stack.rf[0] [13:8]).

2.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 4 unused cells and 12 unused wires.
<suppressed ~5 debug messages>

2.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.29.16. Rerunning OPT passes. (Maybe there is more to do..)

2.29.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~72 debug messages>

2.29.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory\DUT.Stack.rf$wrmux[0][0][0]$3797:
      Old ports: A=14'00000000000000, B=14'x, Y=$memory\DUT.Stack.rf$wrmux[0][0][0]$y$3798
      New ports: A=1'0, B=1'x, Y=$memory\DUT.Stack.rf$wrmux[0][0][0]$y$3798 [0]
      New connections: $memory\DUT.Stack.rf$wrmux[0][0][0]$y$3798 [13:1] = { $memory\DUT.Stack.rf$wrmux[0][0][0]$y$3798 [0] $memory\DUT.Stack.rf$wrmux[0][0][0]$y$3798 [0] $memory\DUT.Stack.rf$wrmux[0][0][0]$y$3798 [0] $memory\DUT.Stack.rf$wrmux[0][0][0]$y$3798 [0] $memory\DUT.Stack.rf$wrmux[0][0][0]$y$3798 [0] $memory\DUT.Stack.rf$wrmux[0][0][0]$y$3798 [0] $memory\DUT.Stack.rf$wrmux[0][0][0]$y$3798 [0] $memory\DUT.Stack.rf$wrmux[0][0][0]$y$3798 [0] $memory\DUT.Stack.rf$wrmux[0][0][0]$y$3798 [0] $memory\DUT.Stack.rf$wrmux[0][0][0]$y$3798 [0] $memory\DUT.Stack.rf$wrmux[0][0][0]$y$3798 [0] $memory\DUT.Stack.rf$wrmux[0][0][0]$y$3798 [0] $memory\DUT.Stack.rf$wrmux[0][0][0]$y$3798 [0] }
    Consolidated identical input bits for $mux cell $memory\DUT.Stack.rf$wrmux[1][0][0]$3825:
      Old ports: A=14'00000000000000, B=14'x, Y=$memory\DUT.Stack.rf$wrmux[1][0][0]$y$3826
      New ports: A=1'0, B=1'x, Y=$memory\DUT.Stack.rf$wrmux[1][0][0]$y$3826 [0]
      New connections: $memory\DUT.Stack.rf$wrmux[1][0][0]$y$3826 [13:1] = { $memory\DUT.Stack.rf$wrmux[1][0][0]$y$3826 [0] $memory\DUT.Stack.rf$wrmux[1][0][0]$y$3826 [0] $memory\DUT.Stack.rf$wrmux[1][0][0]$y$3826 [0] $memory\DUT.Stack.rf$wrmux[1][0][0]$y$3826 [0] $memory\DUT.Stack.rf$wrmux[1][0][0]$y$3826 [0] $memory\DUT.Stack.rf$wrmux[1][0][0]$y$3826 [0] $memory\DUT.Stack.rf$wrmux[1][0][0]$y$3826 [0] $memory\DUT.Stack.rf$wrmux[1][0][0]$y$3826 [0] $memory\DUT.Stack.rf$wrmux[1][0][0]$y$3826 [0] $memory\DUT.Stack.rf$wrmux[1][0][0]$y$3826 [0] $memory\DUT.Stack.rf$wrmux[1][0][0]$y$3826 [0] $memory\DUT.Stack.rf$wrmux[1][0][0]$y$3826 [0] $memory\DUT.Stack.rf$wrmux[1][0][0]$y$3826 [0] }
    Consolidated identical input bits for $mux cell $memory\DUT.Stack.rf$wrmux[2][0][0]$3845:
      Old ports: A=14'00000000000000, B=14'x, Y=$memory\DUT.Stack.rf$wrmux[2][0][0]$y$3846
      New ports: A=1'0, B=1'x, Y=$memory\DUT.Stack.rf$wrmux[2][0][0]$y$3846 [0]
      New connections: $memory\DUT.Stack.rf$wrmux[2][0][0]$y$3846 [13:1] = { $memory\DUT.Stack.rf$wrmux[2][0][0]$y$3846 [0] $memory\DUT.Stack.rf$wrmux[2][0][0]$y$3846 [0] $memory\DUT.Stack.rf$wrmux[2][0][0]$y$3846 [0] $memory\DUT.Stack.rf$wrmux[2][0][0]$y$3846 [0] $memory\DUT.Stack.rf$wrmux[2][0][0]$y$3846 [0] $memory\DUT.Stack.rf$wrmux[2][0][0]$y$3846 [0] $memory\DUT.Stack.rf$wrmux[2][0][0]$y$3846 [0] $memory\DUT.Stack.rf$wrmux[2][0][0]$y$3846 [0] $memory\DUT.Stack.rf$wrmux[2][0][0]$y$3846 [0] $memory\DUT.Stack.rf$wrmux[2][0][0]$y$3846 [0] $memory\DUT.Stack.rf$wrmux[2][0][0]$y$3846 [0] $memory\DUT.Stack.rf$wrmux[2][0][0]$y$3846 [0] $memory\DUT.Stack.rf$wrmux[2][0][0]$y$3846 [0] }
    Consolidated identical input bits for $mux cell $memory\DUT.Stack.rf$wrmux[3][0][0]$3867:
      Old ports: A=14'00000000000000, B=14'x, Y=$memory\DUT.Stack.rf$wrmux[3][0][0]$y$3868
      New ports: A=1'0, B=1'x, Y=$memory\DUT.Stack.rf$wrmux[3][0][0]$y$3868 [0]
      New connections: $memory\DUT.Stack.rf$wrmux[3][0][0]$y$3868 [13:1] = { $memory\DUT.Stack.rf$wrmux[3][0][0]$y$3868 [0] $memory\DUT.Stack.rf$wrmux[3][0][0]$y$3868 [0] $memory\DUT.Stack.rf$wrmux[3][0][0]$y$3868 [0] $memory\DUT.Stack.rf$wrmux[3][0][0]$y$3868 [0] $memory\DUT.Stack.rf$wrmux[3][0][0]$y$3868 [0] $memory\DUT.Stack.rf$wrmux[3][0][0]$y$3868 [0] $memory\DUT.Stack.rf$wrmux[3][0][0]$y$3868 [0] $memory\DUT.Stack.rf$wrmux[3][0][0]$y$3868 [0] $memory\DUT.Stack.rf$wrmux[3][0][0]$y$3868 [0] $memory\DUT.Stack.rf$wrmux[3][0][0]$y$3868 [0] $memory\DUT.Stack.rf$wrmux[3][0][0]$y$3868 [0] $memory\DUT.Stack.rf$wrmux[3][0][0]$y$3868 [0] $memory\DUT.Stack.rf$wrmux[3][0][0]$y$3868 [0] }
    Consolidated identical input bits for $mux cell $memory\DUT.Stack.rf$wrmux[4][0][0]$3885:
      Old ports: A=14'00000000000000, B=14'x, Y=$memory\DUT.Stack.rf$wrmux[4][0][0]$y$3886
      New ports: A=1'0, B=1'x, Y=$memory\DUT.Stack.rf$wrmux[4][0][0]$y$3886 [0]
      New connections: $memory\DUT.Stack.rf$wrmux[4][0][0]$y$3886 [13:1] = { $memory\DUT.Stack.rf$wrmux[4][0][0]$y$3886 [0] $memory\DUT.Stack.rf$wrmux[4][0][0]$y$3886 [0] $memory\DUT.Stack.rf$wrmux[4][0][0]$y$3886 [0] $memory\DUT.Stack.rf$wrmux[4][0][0]$y$3886 [0] $memory\DUT.Stack.rf$wrmux[4][0][0]$y$3886 [0] $memory\DUT.Stack.rf$wrmux[4][0][0]$y$3886 [0] $memory\DUT.Stack.rf$wrmux[4][0][0]$y$3886 [0] $memory\DUT.Stack.rf$wrmux[4][0][0]$y$3886 [0] $memory\DUT.Stack.rf$wrmux[4][0][0]$y$3886 [0] $memory\DUT.Stack.rf$wrmux[4][0][0]$y$3886 [0] $memory\DUT.Stack.rf$wrmux[4][0][0]$y$3886 [0] $memory\DUT.Stack.rf$wrmux[4][0][0]$y$3886 [0] $memory\DUT.Stack.rf$wrmux[4][0][0]$y$3886 [0] }
    Consolidated identical input bits for $mux cell $memory\DUT.Stack.rf$wrmux[5][1][0]$3913:
      Old ports: A=14'00000000000000, B=14'x, Y=$memory\DUT.Stack.rf$wrmux[5][1][0]$y$3914
      New ports: A=1'0, B=1'x, Y=$memory\DUT.Stack.rf$wrmux[5][1][0]$y$3914 [0]
      New connections: $memory\DUT.Stack.rf$wrmux[5][1][0]$y$3914 [13:1] = { $memory\DUT.Stack.rf$wrmux[5][1][0]$y$3914 [0] $memory\DUT.Stack.rf$wrmux[5][1][0]$y$3914 [0] $memory\DUT.Stack.rf$wrmux[5][1][0]$y$3914 [0] $memory\DUT.Stack.rf$wrmux[5][1][0]$y$3914 [0] $memory\DUT.Stack.rf$wrmux[5][1][0]$y$3914 [0] $memory\DUT.Stack.rf$wrmux[5][1][0]$y$3914 [0] $memory\DUT.Stack.rf$wrmux[5][1][0]$y$3914 [0] $memory\DUT.Stack.rf$wrmux[5][1][0]$y$3914 [0] $memory\DUT.Stack.rf$wrmux[5][1][0]$y$3914 [0] $memory\DUT.Stack.rf$wrmux[5][1][0]$y$3914 [0] $memory\DUT.Stack.rf$wrmux[5][1][0]$y$3914 [0] $memory\DUT.Stack.rf$wrmux[5][1][0]$y$3914 [0] $memory\DUT.Stack.rf$wrmux[5][1][0]$y$3914 [0] }
    Consolidated identical input bits for $mux cell $memory\DUT.Stack.rf$wrmux[6][1][0]$3931:
      Old ports: A=14'00000000000000, B=14'x, Y=$memory\DUT.Stack.rf$wrmux[6][1][0]$y$3932
      New ports: A=1'0, B=1'x, Y=$memory\DUT.Stack.rf$wrmux[6][1][0]$y$3932 [0]
      New connections: $memory\DUT.Stack.rf$wrmux[6][1][0]$y$3932 [13:1] = { $memory\DUT.Stack.rf$wrmux[6][1][0]$y$3932 [0] $memory\DUT.Stack.rf$wrmux[6][1][0]$y$3932 [0] $memory\DUT.Stack.rf$wrmux[6][1][0]$y$3932 [0] $memory\DUT.Stack.rf$wrmux[6][1][0]$y$3932 [0] $memory\DUT.Stack.rf$wrmux[6][1][0]$y$3932 [0] $memory\DUT.Stack.rf$wrmux[6][1][0]$y$3932 [0] $memory\DUT.Stack.rf$wrmux[6][1][0]$y$3932 [0] $memory\DUT.Stack.rf$wrmux[6][1][0]$y$3932 [0] $memory\DUT.Stack.rf$wrmux[6][1][0]$y$3932 [0] $memory\DUT.Stack.rf$wrmux[6][1][0]$y$3932 [0] $memory\DUT.Stack.rf$wrmux[6][1][0]$y$3932 [0] $memory\DUT.Stack.rf$wrmux[6][1][0]$y$3932 [0] $memory\DUT.Stack.rf$wrmux[6][1][0]$y$3932 [0] }
    Consolidated identical input bits for $mux cell $memory\DUT.Stack.rf$wrmux[7][1][0]$3951:
      Old ports: A=14'00000000000000, B=14'x, Y=$memory\DUT.Stack.rf$wrmux[7][1][0]$y$3952
      New ports: A=1'0, B=1'x, Y=$memory\DUT.Stack.rf$wrmux[7][1][0]$y$3952 [0]
      New connections: $memory\DUT.Stack.rf$wrmux[7][1][0]$y$3952 [13:1] = { $memory\DUT.Stack.rf$wrmux[7][1][0]$y$3952 [0] $memory\DUT.Stack.rf$wrmux[7][1][0]$y$3952 [0] $memory\DUT.Stack.rf$wrmux[7][1][0]$y$3952 [0] $memory\DUT.Stack.rf$wrmux[7][1][0]$y$3952 [0] $memory\DUT.Stack.rf$wrmux[7][1][0]$y$3952 [0] $memory\DUT.Stack.rf$wrmux[7][1][0]$y$3952 [0] $memory\DUT.Stack.rf$wrmux[7][1][0]$y$3952 [0] $memory\DUT.Stack.rf$wrmux[7][1][0]$y$3952 [0] $memory\DUT.Stack.rf$wrmux[7][1][0]$y$3952 [0] $memory\DUT.Stack.rf$wrmux[7][1][0]$y$3952 [0] $memory\DUT.Stack.rf$wrmux[7][1][0]$y$3952 [0] $memory\DUT.Stack.rf$wrmux[7][1][0]$y$3952 [0] $memory\DUT.Stack.rf$wrmux[7][1][0]$y$3952 [0] }
    Consolidated identical input bits for $mux cell $memory\DUT.rf.rf$wrmux[0][0][0]$4002:
      Old ports: A=8'00000000, B=8'x, Y=$memory\DUT.rf.rf$wrmux[0][0][0]$y$4003
      New ports: A=1'0, B=1'x, Y=$memory\DUT.rf.rf$wrmux[0][0][0]$y$4003 [0]
      New connections: $memory\DUT.rf.rf$wrmux[0][0][0]$y$4003 [7:1] = { $memory\DUT.rf.rf$wrmux[0][0][0]$y$4003 [0] $memory\DUT.rf.rf$wrmux[0][0][0]$y$4003 [0] $memory\DUT.rf.rf$wrmux[0][0][0]$y$4003 [0] $memory\DUT.rf.rf$wrmux[0][0][0]$y$4003 [0] $memory\DUT.rf.rf$wrmux[0][0][0]$y$4003 [0] $memory\DUT.rf.rf$wrmux[0][0][0]$y$4003 [0] $memory\DUT.rf.rf$wrmux[0][0][0]$y$4003 [0] }
    Consolidated identical input bits for $mux cell $memory\DUT.rf.rf$wrmux[1][0][0]$4030:
      Old ports: A=8'00000000, B=8'x, Y=$memory\DUT.rf.rf$wrmux[1][0][0]$y$4031
      New ports: A=1'0, B=1'x, Y=$memory\DUT.rf.rf$wrmux[1][0][0]$y$4031 [0]
      New connections: $memory\DUT.rf.rf$wrmux[1][0][0]$y$4031 [7:1] = { $memory\DUT.rf.rf$wrmux[1][0][0]$y$4031 [0] $memory\DUT.rf.rf$wrmux[1][0][0]$y$4031 [0] $memory\DUT.rf.rf$wrmux[1][0][0]$y$4031 [0] $memory\DUT.rf.rf$wrmux[1][0][0]$y$4031 [0] $memory\DUT.rf.rf$wrmux[1][0][0]$y$4031 [0] $memory\DUT.rf.rf$wrmux[1][0][0]$y$4031 [0] $memory\DUT.rf.rf$wrmux[1][0][0]$y$4031 [0] }
    Consolidated identical input bits for $mux cell $memory\DUT.rf.rf$wrmux[2][0][0]$4050:
      Old ports: A=8'00000000, B=8'x, Y=$memory\DUT.rf.rf$wrmux[2][0][0]$y$4051
      New ports: A=1'0, B=1'x, Y=$memory\DUT.rf.rf$wrmux[2][0][0]$y$4051 [0]
      New connections: $memory\DUT.rf.rf$wrmux[2][0][0]$y$4051 [7:1] = { $memory\DUT.rf.rf$wrmux[2][0][0]$y$4051 [0] $memory\DUT.rf.rf$wrmux[2][0][0]$y$4051 [0] $memory\DUT.rf.rf$wrmux[2][0][0]$y$4051 [0] $memory\DUT.rf.rf$wrmux[2][0][0]$y$4051 [0] $memory\DUT.rf.rf$wrmux[2][0][0]$y$4051 [0] $memory\DUT.rf.rf$wrmux[2][0][0]$y$4051 [0] $memory\DUT.rf.rf$wrmux[2][0][0]$y$4051 [0] }
    Consolidated identical input bits for $mux cell $memory\DUT.rf.rf$wrmux[3][0][0]$4072:
      Old ports: A=8'00000000, B=8'x, Y=$memory\DUT.rf.rf$wrmux[3][0][0]$y$4073
      New ports: A=1'0, B=1'x, Y=$memory\DUT.rf.rf$wrmux[3][0][0]$y$4073 [0]
      New connections: $memory\DUT.rf.rf$wrmux[3][0][0]$y$4073 [7:1] = { $memory\DUT.rf.rf$wrmux[3][0][0]$y$4073 [0] $memory\DUT.rf.rf$wrmux[3][0][0]$y$4073 [0] $memory\DUT.rf.rf$wrmux[3][0][0]$y$4073 [0] $memory\DUT.rf.rf$wrmux[3][0][0]$y$4073 [0] $memory\DUT.rf.rf$wrmux[3][0][0]$y$4073 [0] $memory\DUT.rf.rf$wrmux[3][0][0]$y$4073 [0] $memory\DUT.rf.rf$wrmux[3][0][0]$y$4073 [0] }
    Consolidated identical input bits for $mux cell $memory\DUT.rf.rf$wrmux[4][0][0]$4088:
      Old ports: A=8'00000000, B=8'x, Y=$memory\DUT.rf.rf$wrmux[4][0][0]$y$4089
      New ports: A=1'0, B=1'x, Y=$memory\DUT.rf.rf$wrmux[4][0][0]$y$4089 [0]
      New connections: $memory\DUT.rf.rf$wrmux[4][0][0]$y$4089 [7:1] = { $memory\DUT.rf.rf$wrmux[4][0][0]$y$4089 [0] $memory\DUT.rf.rf$wrmux[4][0][0]$y$4089 [0] $memory\DUT.rf.rf$wrmux[4][0][0]$y$4089 [0] $memory\DUT.rf.rf$wrmux[4][0][0]$y$4089 [0] $memory\DUT.rf.rf$wrmux[4][0][0]$y$4089 [0] $memory\DUT.rf.rf$wrmux[4][0][0]$y$4089 [0] $memory\DUT.rf.rf$wrmux[4][0][0]$y$4089 [0] }
  Optimizing cells in module \top.
Performed a total of 13 changes.

2.29.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~36 debug messages>
Removed a total of 12 cells.

2.29.20. Executing OPT_DFF pass (perform DFF optimizations).

2.29.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 12 unused wires.
<suppressed ~1 debug messages>

2.29.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.29.23. Rerunning OPT passes. (Maybe there is more to do..)

2.29.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~65 debug messages>

2.29.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.29.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.29.27. Executing OPT_DFF pass (perform DFF optimizations).

2.29.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.29.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.29.30. Finished OPT passes. (There is nothing left to do.)

2.30. Executing ICE40_WRAPCARRY pass (wrap carries).

2.31. Executing TECHMAP pass (map to technology primitives).

2.31.1. Executing Verilog-2005 frontend: /Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/techmap.v
Parsing Verilog input from `/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.31.2. Executing Verilog-2005 frontend: /Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

2.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod$c5c783b17ab1d780abfad8cfe6563a0a7b47a3b0\_90_pmux for cells of type $pmux.
Using template $paramod$97565c3687be688407d1272a293bd9d0ae6852dc\_90_pmux for cells of type $pmux.
Using template $paramod$d629d85c8826a74239b9178d1930215a43b0ceb0\_90_pmux for cells of type $pmux.
Using template $paramod$521ce43182eecb9f60c72393a788160d2c356bf5\_90_pmux for cells of type $pmux.
Using template $paramod$bf2533632d512eac76dd186c0da49367e29b8e98\_90_pmux for cells of type $pmux.
Using template $paramod$d31bf4d7d72e59528d18fbd4f322e9d608532043\_90_pmux for cells of type $pmux.
Using template $paramod$85df5dc01c7df96a7d8e5f1fdf76ce9ac452af63\_90_pmux for cells of type $pmux.
Using template $paramod$32e7c4d6f92ff4337599ece53082d2e88a82a9f2\_90_pmux for cells of type $pmux.
Using template $paramod$c2e415ef15bc3ccd2723772353a6b450d3d76206\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $dff.
Using template $paramod$a2af9b43308e3114c3b5dd3f4dc3329b2387395d\_80_ice40_alu for cells of type $alu.
Using template $paramod$b8c0a997bce700f23568a5ada79cc6781d1f5ca0\_80_ice40_alu for cells of type $alu.
Using template $paramod$713617589782cfade849bb573b5c36106c4b708f\_80_ice40_alu for cells of type $alu.
Using template $paramod$4ccbe221165818e15f326ddee3d1183c7924e12f\_80_ice40_alu for cells of type $alu.
Using template $paramod$53700bbee849b2010ad0b60a61ccd204a10e24ca\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $dlatch.
Using template $paramod$19189243523493d505a4933d1bad417c570ea8a6\_80_ice40_alu for cells of type $alu.
Using template $paramod$6f67705c43e5e94c02b6ebb52209ce5aa5ade4c1\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $reduce_xor.
Using template $paramod$b3b6ac92d800c6f07aa48f510f923d86a674e5a7\_90_pmux for cells of type $pmux.
Using template $paramod$d7387fdb214042e5ef2d69a3f74948694b4bb65e\_90_pmux for cells of type $pmux.
Using template $paramod$ee721315a7b0169d82611b9aea01747035b97792\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $pos.
No more expansions possible.
<suppressed ~1201 debug messages>

2.32. Executing OPT pass (performing simple optimizations).

2.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~663 debug messages>

2.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~1239 debug messages>
Removed a total of 413 cells.

2.32.3. Executing OPT_DFF pass (perform DFF optimizations).

2.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 49 unused cells and 1357 unused wires.
<suppressed ~50 debug messages>

2.32.5. Finished fast OPT passes.

2.33. Executing ICE40_OPT pass (performing simple optimizations).

2.33.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3681.slice[0].carry: CO=\DUT.SP_SEL.Q [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3684.slice[0].carry: CO=\DUT.SP_SEL.Q [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3687.slice[0].carry: CO=\DUT.Stack.rs [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3690.slice[0].carry: CO=\DUT.regA.Q [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3690.slice[8].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3696.slice[0].carry: CO=\DUT.regA.Q [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3696.slice[8].carry: CO=$auto$alumacc.cc:485:replace_alu$3696.C [8]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3699.slice[8].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3702.slice[8].carry: CO=$auto$alumacc.cc:485:replace_alu$3702.C [8]

2.33.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

2.33.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.33.4. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$5852 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [7], Q = \DUT.Stack.rf[0] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5851 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [6], Q = \DUT.Stack.rf[0] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5850 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [5], Q = \DUT.Stack.rf[0] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5849 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [4], Q = \DUT.Stack.rf[0] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5848 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [3], Q = \DUT.Stack.rf[0] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5847 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [2], Q = \DUT.Stack.rf[0] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5846 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [1], Q = \DUT.Stack.rf[0] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5845 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [0], Q = \DUT.Stack.rf[0] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4867 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [7], Q = \DUT.Stack.rf[6] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4866 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [6], Q = \DUT.Stack.rf[6] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4865 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [5], Q = \DUT.Stack.rf[6] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4864 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [4], Q = \DUT.Stack.rf[6] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4863 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [3], Q = \DUT.Stack.rf[6] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4862 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [2], Q = \DUT.Stack.rf[6] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4861 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [1], Q = \DUT.Stack.rf[6] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4860 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [0], Q = \DUT.Stack.rf[6] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4836 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [5], Q = \DUT.Stack.rf[7] [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4835 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [4], Q = \DUT.Stack.rf[7] [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4834 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [3], Q = \DUT.Stack.rf[7] [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4833 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [2], Q = \DUT.Stack.rf[7] [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4832 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [1], Q = \DUT.Stack.rf[7] [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4831 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [0], Q = \DUT.Stack.rf[7] [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4813 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [5], Q = \DUT.Stack.rf[6] [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4812 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [4], Q = \DUT.Stack.rf[6] [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4811 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [3], Q = \DUT.Stack.rf[6] [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4810 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [2], Q = \DUT.Stack.rf[6] [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4809 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [1], Q = \DUT.Stack.rf[6] [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4808 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [0], Q = \DUT.Stack.rf[6] [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4791 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [5], Q = \DUT.Stack.rf[5] [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4790 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [4], Q = \DUT.Stack.rf[5] [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4789 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [3], Q = \DUT.Stack.rf[5] [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4788 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [2], Q = \DUT.Stack.rf[5] [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4787 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [1], Q = \DUT.Stack.rf[5] [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4786 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [0], Q = \DUT.Stack.rf[5] [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4760 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [5], Q = \DUT.Stack.rf[4] [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4759 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [4], Q = \DUT.Stack.rf[4] [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4758 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [3], Q = \DUT.Stack.rf[4] [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4757 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [2], Q = \DUT.Stack.rf[4] [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4756 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [1], Q = \DUT.Stack.rf[4] [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4755 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [0], Q = \DUT.Stack.rf[4] [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4730 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [5], Q = \DUT.Stack.rf[3] [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4729 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [4], Q = \DUT.Stack.rf[3] [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4728 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [3], Q = \DUT.Stack.rf[3] [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4727 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [2], Q = \DUT.Stack.rf[3] [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4726 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [1], Q = \DUT.Stack.rf[3] [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4725 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [0], Q = \DUT.Stack.rf[3] [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4699 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [7], Q = \DUT.Stack.rf[2] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4698 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [6], Q = \DUT.Stack.rf[2] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4697 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [5], Q = \DUT.Stack.rf[2] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4696 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [4], Q = \DUT.Stack.rf[2] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4695 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [3], Q = \DUT.Stack.rf[2] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4694 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [2], Q = \DUT.Stack.rf[2] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4693 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [1], Q = \DUT.Stack.rf[2] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4692 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [0], Q = \DUT.Stack.rf[2] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4667 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [7], Q = \DUT.Stack.rf[1] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4666 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [6], Q = \DUT.Stack.rf[1] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4665 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [5], Q = \DUT.Stack.rf[1] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4664 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [4], Q = \DUT.Stack.rf[1] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4663 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [3], Q = \DUT.Stack.rf[1] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4662 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [2], Q = \DUT.Stack.rf[1] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4661 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [1], Q = \DUT.Stack.rf[1] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4660 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [0], Q = \DUT.Stack.rf[1] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4623 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [5], Q = \DUT.Stack.rf[0] [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4622 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [4], Q = \DUT.Stack.rf[0] [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4621 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [3], Q = \DUT.Stack.rf[0] [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4620 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [2], Q = \DUT.Stack.rf[0] [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4619 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [1], Q = \DUT.Stack.rf[0] [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4618 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [0], Q = \DUT.Stack.rf[0] [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4578 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [7], Q = \DUT.Stack.rf[5] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4577 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [6], Q = \DUT.Stack.rf[5] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4576 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [5], Q = \DUT.Stack.rf[5] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4575 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [4], Q = \DUT.Stack.rf[5] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4574 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [3], Q = \DUT.Stack.rf[5] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4573 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [2], Q = \DUT.Stack.rf[5] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4572 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [1], Q = \DUT.Stack.rf[5] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4571 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [0], Q = \DUT.Stack.rf[5] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4538 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3733 [7], Q = \DUT.rf.rf[4] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4537 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3733 [6], Q = \DUT.rf.rf[4] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4536 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3733 [5], Q = \DUT.rf.rf[4] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4535 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3733 [4], Q = \DUT.rf.rf[4] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4534 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3733 [3], Q = \DUT.rf.rf[4] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4533 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3733 [2], Q = \DUT.rf.rf[4] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4532 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3733 [1], Q = \DUT.rf.rf[4] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4531 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3733 [0], Q = \DUT.rf.rf[4] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4530 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3733 [7], Q = \DUT.rf.rf[3] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4529 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3733 [6], Q = \DUT.rf.rf[3] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4528 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3733 [5], Q = \DUT.rf.rf[3] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4527 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3733 [4], Q = \DUT.rf.rf[3] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4526 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3733 [3], Q = \DUT.rf.rf[3] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4525 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3733 [2], Q = \DUT.rf.rf[3] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4524 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3733 [1], Q = \DUT.rf.rf[3] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4523 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3733 [0], Q = \DUT.rf.rf[3] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4522 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3733 [7], Q = \DUT.rf.rf[2] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4521 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3733 [6], Q = \DUT.rf.rf[2] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4520 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3733 [5], Q = \DUT.rf.rf[2] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4519 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3733 [4], Q = \DUT.rf.rf[2] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4518 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3733 [3], Q = \DUT.rf.rf[2] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4517 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3733 [2], Q = \DUT.rf.rf[2] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4516 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3733 [1], Q = \DUT.rf.rf[2] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4515 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3733 [0], Q = \DUT.rf.rf[2] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4514 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3733 [7], Q = \DUT.rf.rf[1] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4513 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3733 [6], Q = \DUT.rf.rf[1] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4512 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3733 [5], Q = \DUT.rf.rf[1] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4511 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3733 [4], Q = \DUT.rf.rf[1] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4510 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3733 [3], Q = \DUT.rf.rf[1] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4509 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3733 [2], Q = \DUT.rf.rf[1] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4508 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3733 [1], Q = \DUT.rf.rf[1] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4507 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3733 [0], Q = \DUT.rf.rf[1] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4506 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3733 [7], Q = \DUT.rf.rf[0] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4505 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3733 [6], Q = \DUT.rf.rf[0] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4504 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3733 [5], Q = \DUT.rf.rf[0] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4503 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3733 [4], Q = \DUT.rf.rf[0] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4502 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3733 [3], Q = \DUT.rf.rf[0] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4501 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3733 [2], Q = \DUT.rf.rf[0] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4500 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3733 [1], Q = \DUT.rf.rf[0] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4499 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3733 [0], Q = \DUT.rf.rf[0] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4498 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [7], Q = \DUT.Stack.rf[7] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4497 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [6], Q = \DUT.Stack.rf[7] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4496 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [5], Q = \DUT.Stack.rf[7] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4495 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [4], Q = \DUT.Stack.rf[7] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4494 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [3], Q = \DUT.Stack.rf[7] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4493 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [2], Q = \DUT.Stack.rf[7] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4492 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [1], Q = \DUT.Stack.rf[7] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4491 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [0], Q = \DUT.Stack.rf[7] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4398 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [7], Q = \DUT.Stack.rf[3] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4397 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [6], Q = \DUT.Stack.rf[3] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4396 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [5], Q = \DUT.Stack.rf[3] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4395 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [4], Q = \DUT.Stack.rf[3] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4394 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [3], Q = \DUT.Stack.rf[3] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4393 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [2], Q = \DUT.Stack.rf[3] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4392 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [1], Q = \DUT.Stack.rf[3] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4391 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [0], Q = \DUT.Stack.rf[3] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4364 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [5], Q = \DUT.Stack.rf[2] [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4363 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [4], Q = \DUT.Stack.rf[2] [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4362 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [3], Q = \DUT.Stack.rf[2] [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4361 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [2], Q = \DUT.Stack.rf[2] [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4360 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [1], Q = \DUT.Stack.rf[2] [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4359 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [0], Q = \DUT.Stack.rf[2] [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4350 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [7], Q = \DUT.Stack.rf[4] [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4349 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [6], Q = \DUT.Stack.rf[4] [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4348 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [5], Q = \DUT.Stack.rf[4] [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4347 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [4], Q = \DUT.Stack.rf[4] [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4346 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [3], Q = \DUT.Stack.rf[4] [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4345 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [2], Q = \DUT.Stack.rf[4] [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4344 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [1], Q = \DUT.Stack.rf[4] [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4343 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3721 [0], Q = \DUT.Stack.rf[4] [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4316 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [5], Q = \DUT.Stack.rf[1] [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4315 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [4], Q = \DUT.Stack.rf[1] [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4314 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [3], Q = \DUT.Stack.rf[1] [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4313 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [2], Q = \DUT.Stack.rf[1] [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4312 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [1], Q = \DUT.Stack.rf[1] [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4311 ($_DFFE_PP_) from module top (D = $auto$rtlil.cc:2496:Mux$3725 [0], Q = \DUT.Stack.rf[1] [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4310 ($_SDFF_PN0_) from module top (D = $flatten\DUT.\Brain.$procmux$3051.Y_B [2], Q = \DUT.Brain.state [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4309 ($_SDFF_PN1_) from module top (D = $flatten\DUT.\Brain.$procmux$3051.Y_B [1], Q = \DUT.Brain.state [1], rval = 1'1).
Adding SRST signal on $auto$ff.cc:266:slice$4308 ($_SDFF_PN0_) from module top (D = $flatten\DUT.\Brain.$procmux$3051.Y_B [0], Q = \DUT.Brain.state [0], rval = 1'0).

2.33.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 155 unused cells and 30 unused wires.
<suppressed ~157 debug messages>

2.33.6. Rerunning OPT passes. (Removed registers in this run.)

2.33.7. Running ICE40 specific optimizations.

2.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.33.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

2.33.10. Executing OPT_DFF pass (perform DFF optimizations).

2.33.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

2.33.12. Rerunning OPT passes. (Removed registers in this run.)

2.33.13. Running ICE40 specific optimizations.

2.33.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.33.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.33.16. Executing OPT_DFF pass (perform DFF optimizations).

2.33.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.33.18. Finished OPT passes. (There is nothing left to do.)

2.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

2.35. Executing TECHMAP pass (map to technology primitives).

2.35.1. Executing Verilog-2005 frontend: /Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

2.35.2. Continuing TECHMAP pass.
Using template \$_SDFFCE_PP0P_ for cells of type $_SDFFCE_PP0P_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_SDFF_PP1_ for cells of type $_SDFF_PP1_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
No more expansions possible.
<suppressed ~239 debug messages>

2.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping top.$auto$alumacc.cc:485:replace_alu$3681.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3684.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3687.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3690.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3690.slice[8].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3696.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3696.slice[8].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3699.slice[8].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3702.slice[8].carry ($lut).

2.38. Executing ICE40_OPT pass (performing simple optimizations).

2.38.1. Running ICE40 specific optimizations.

2.38.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~226 debug messages>

2.38.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~588 debug messages>
Removed a total of 196 cells.

2.38.4. Executing OPT_DFF pass (perform DFF optimizations).

2.38.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1481 unused wires.
<suppressed ~1 debug messages>

2.38.6. Rerunning OPT passes. (Removed registers in this run.)

2.38.7. Running ICE40 specific optimizations.

2.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

2.38.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.38.10. Executing OPT_DFF pass (perform DFF optimizations).

2.38.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.38.12. Rerunning OPT passes. (Removed registers in this run.)

2.38.13. Running ICE40 specific optimizations.

2.38.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.38.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.38.16. Executing OPT_DFF pass (perform DFF optimizations).

2.38.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.38.18. Finished OPT passes. (There is nothing left to do.)

2.39. Executing TECHMAP pass (map to technology primitives).

2.39.1. Executing Verilog-2005 frontend: /Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

2.39.2. Continuing TECHMAP pass.

2.39.3. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping \$_DLATCH_N_.$ternary$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/latches_map.v:4$9483 ($mux).
Mapping \$_DLATCH_N_.$logic_not$/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/latches_map.v:4$9482 ($logic_not).
<suppressed ~4 debug messages>

2.39.4. Executing OPT pass (performing simple optimizations).

2.39.4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module \$_DLATCH_N_.
<suppressed ~1 debug messages>

2.39.4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\$_DLATCH_N_'.
Removed a total of 0 cells.

2.39.4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \$_DLATCH_N_..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

2.39.4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \$_DLATCH_N_.
Performed a total of 0 changes.

2.39.4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\$_DLATCH_N_'.
Removed a total of 0 cells.

2.39.4.6. Executing OPT_DFF pass (perform DFF optimizations).

2.39.4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \$_DLATCH_N_..
Removed 1 unused cells and 2 unused wires.
<suppressed ~2 debug messages>

2.39.4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module \$_DLATCH_N_.

2.39.4.9. Rerunning OPT passes. (Maybe there is more to do..)

2.39.4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \$_DLATCH_N_..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

2.39.4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \$_DLATCH_N_.
Performed a total of 0 changes.

2.39.4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\$_DLATCH_N_'.
Removed a total of 0 cells.

2.39.4.13. Executing OPT_DFF pass (perform DFF optimizations).

2.39.4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \$_DLATCH_N_..

2.39.4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module \$_DLATCH_N_.

2.39.4.16. Finished OPT passes. (There is nothing left to do.)
Using template \$_DLATCH_N_ for cells of type $_DLATCH_N_.
No more expansions possible.
<suppressed ~8 debug messages>

2.40. Executing ABC pass (technology mapping using ABC).

2.40.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Breaking loop using new signal $abcloop$9488: \DUT.Stack.bus [2] -> $auto$rtlil.cc:2496:Mux$3733 [2]
                                              \DUT.Stack.bus [2] -> $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:761$663_DATA[13:0]$678 [2]
                                              \DUT.Stack.bus [2] -> $auto$rtlil.cc:2496:Mux$3717 [2]
Breaking loop using new signal $abcloop$9489: \DUT.Stack.bus [5] -> $auto$rtlil.cc:2496:Mux$3721 [5]
                                              \DUT.Stack.bus [5] -> $auto$rtlil.cc:2496:Mux$3733 [5]
                                              \DUT.Stack.bus [5] -> $auto$rtlil.cc:2496:Mux$3717 [5]
Breaking loop using new signal $abcloop$9490: \DUT.Stack.bus [0] -> $auto$rtlil.cc:2496:Mux$3733 [0]
                                              \DUT.Stack.bus [0] -> $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:761$663_DATA[13:0]$678 [0]
                                              \DUT.Stack.bus [0] -> $auto$rtlil.cc:2496:Mux$3717 [0]
Breaking loop using new signal $abcloop$9491: \DUT.Stack.bus [4] -> $auto$rtlil.cc:2496:Mux$3721 [4]
                                              \DUT.Stack.bus [4] -> $auto$rtlil.cc:2496:Mux$3733 [4]
                                              \DUT.Stack.bus [4] -> $auto$rtlil.cc:2496:Mux$3717 [4]
Breaking loop using new signal $abcloop$9492: \DUT.Stack.bus [3] -> $auto$rtlil.cc:2496:Mux$3721 [3]
                                              \DUT.Stack.bus [3] -> $auto$rtlil.cc:2496:Mux$3733 [3]
                                              \DUT.Stack.bus [3] -> $auto$rtlil.cc:2496:Mux$3717 [3]
Breaking loop using new signal $abcloop$9493: \DUT.Stack.bus [1] -> $auto$rtlil.cc:2496:Mux$3733 [1]
                                              \DUT.Stack.bus [1] -> $flatten\DUT.\Stack.$0$memwr$\rf$i8008_core.v:761$663_DATA[13:0]$678 [1]
                                              \DUT.Stack.bus [1] -> $auto$rtlil.cc:2496:Mux$3717 [1]
Breaking loop using new signal $abcloop$9494: \DUT.Unit.d [4] -> $flatten\DUT.$3\bus[7:0] [4]
                                              \DUT.Unit.d [4] -> $flatten\DUT.\Unit.$procmux$3154.Y [4]
                                              \DUT.Unit.d [4] -> \DUT.Unit.d [4]
Breaking loop using new signal $abcloop$9495: \DUT.Unit.d [2] -> $flatten\DUT.$3\bus[7:0] [2]
                                              \DUT.Unit.d [2] -> $flatten\DUT.\Unit.$procmux$3154.Y [2]
                                              \DUT.Unit.d [2] -> \DUT.Unit.d [2]
Breaking loop using new signal $abcloop$9496: \DUT.Unit.d [1] -> $flatten\DUT.$3\bus[7:0] [1]
                                              \DUT.Unit.d [1] -> $flatten\DUT.\Unit.$procmux$3154.Y [1]
                                              \DUT.Unit.d [1] -> \DUT.Unit.d [1]
Breaking loop using new signal $abcloop$9497: \DUT.Unit.d [0] -> $flatten\DUT.$3\bus[7:0] [0]
                                              \DUT.Unit.d [0] -> $flatten\DUT.\Unit.$procmux$3154.Y [0]
                                              \DUT.Unit.d [0] -> \DUT.Unit.d [0]
Breaking loop using new signal $abcloop$9498: \DUT.Unit.d [5] -> $flatten\DUT.$3\bus[7:0] [5]
                                              \DUT.Unit.d [5] -> $flatten\DUT.\Unit.$procmux$3154.Y [5]
                                              \DUT.Unit.d [5] -> \DUT.Unit.d [5]
Breaking loop using new signal $abcloop$9499: \DUT.Unit.d [6] -> $flatten\DUT.$3\bus[7:0] [6]
                                              \DUT.Unit.d [6] -> $flatten\DUT.\Unit.$procmux$3154.Y [6]
                                              \DUT.Unit.d [6] -> \DUT.Unit.d [6]
Breaking loop using new signal $abcloop$9500: \DUT.Unit.d [7] -> $flatten\DUT.$3\bus[7:0] [7]
                                              \DUT.Unit.d [7] -> $flatten\DUT.\Unit.$procmux$3154.Y [7]
                                              \DUT.Unit.d [7] -> \DUT.Unit.d [7]
Breaking loop using new signal $abcloop$9501: \DUT.Unit.d [3] -> $flatten\DUT.$3\bus[7:0] [3]
                                              \DUT.Unit.d [3] -> $flatten\DUT.\Unit.$procmux$3154.Y [3]
                                              \DUT.Unit.d [3] -> \DUT.Unit.d [3]
Extracted 1429 gates and 1742 wires to a netlist network with 311 inputs and 134 outputs.

2.40.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + &get -n 
ABC: + &fraig -x 
ABC: + &put 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress <abc-temp-dir>/input.blif 
ABC: Total number of equiv classes                =     269.
ABC: Participating nodes from both networks       =     679.
ABC: Participating nodes from the first network   =     273. (  54.17 % of nodes)
ABC: Participating nodes from the second network  =     406. (  80.56 % of nodes)
ABC: Node pairs (any polarity)                    =     272. (  53.97 % of names can be moved)
ABC: Node pairs (same polarity)                   =     218. (  43.25 % of names can be moved)
ABC: Total runtime =     0.09 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

2.40.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      503
ABC RESULTS:        internal signals:     1297
ABC RESULTS:           input signals:      311
ABC RESULTS:          output signals:      134
Removing temp directory.

2.41. Executing ICE40_WRAPCARRY pass (wrap carries).

2.42. Executing TECHMAP pass (map to technology primitives).

2.42.1. Executing Verilog-2005 frontend: /Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

2.42.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 5 unused cells and 1129 unused wires.

2.43. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:      568
  1-LUT               13
  2-LUT              101
  3-LUT              162
  4-LUT              292
  with \SB_CARRY    (#0)   60
  with \SB_CARRY    (#1)   56

Eliminating LUTs.
Number of LUTs:      568
  1-LUT               13
  2-LUT              101
  3-LUT              162
  4-LUT              292
  with \SB_CARRY    (#0)   60
  with \SB_CARRY    (#1)   56

Combining LUTs.
Number of LUTs:      565
  1-LUT               12
  2-LUT               99
  3-LUT              161
  4-LUT              293
  with \SB_CARRY    (#0)   60
  with \SB_CARRY    (#1)   56

Eliminated 0 LUTs.
Combined 3 LUTs.
<suppressed ~3554 debug messages>

2.44. Executing TECHMAP pass (map to technology primitives).

2.44.1. Executing Verilog-2005 frontend: /Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/Users/brendanwilhelm/Desktop/98-154/oss-cad-suite/libexec/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

2.44.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod$a44bfc089ebe40b83c2c06bb965c500df992ecfb\$lut for cells of type $lut.
Using template $paramod$bdb7f9ed72fd4f5c7ad81c376f2d8a5c72a0098d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod$314fe9458b07176c4d2c8c59533027c4c55155b5\$lut for cells of type $lut.
Using template $paramod$df196ed0a1da5c4a58c5e08a1dac304fd3fccaab\$lut for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod$6e238df02989b317f10820a22773676e71120644\$lut for cells of type $lut.
Using template $paramod$1bf62ab10e48d71d6497bccacf5c70420c470fe9\$lut for cells of type $lut.
Using template $paramod$11ec7271d8e6e5aeaace08c13e4c601f10e31038\$lut for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod$608f40069c27841a5b3bdf03643a34bdc8974072\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010000 for cells of type $lut.
Using template $paramod$a670b08a47dd8a34f954c50cd06e9996d77e8467\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001110 for cells of type $lut.
Using template $paramod$cde3aa23c1efa60a470cf0f0281347d6ba585afa\$lut for cells of type $lut.
Using template $paramod$b4f85a6321a00b090afc4e21d68e7b99eb94d149\$lut for cells of type $lut.
Using template $paramod$b4d0f4738a5ce50c7f36c2aa2ecc09cfb874f2b6\$lut for cells of type $lut.
Using template $paramod$f9b715fbf1040e81e900b2461c2390d17ed5e988\$lut for cells of type $lut.
Using template $paramod$41326ad8644342a66dfb051d050f2b6fbf15015b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101111 for cells of type $lut.
Using template $paramod$6e3b22478ca21c5590744f2e30b92938c4d90996\$lut for cells of type $lut.
Using template $paramod$e9c77024ca501b890c641f9c0b10e27242db8730\$lut for cells of type $lut.
Using template $paramod$fe9a0158d0352193457c4f5b6282ac86d35fb3ee\$lut for cells of type $lut.
Using template $paramod$e5759512db67494ff77fbdfc66dff4006376568f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
Using template $paramod$d35161d1d7976dcc02e7c7d51172431be85143b4\$lut for cells of type $lut.
Using template $paramod$1843b3c15f2447d117e2d5de9b00f791ef5f9fa3\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod$e49f6e3576ef1a6d2f58c54414dbb786af8cc869\$lut for cells of type $lut.
Using template $paramod$973818279bc95792902f3c09371fd2407d04a2a5\$lut for cells of type $lut.
Using template $paramod$7a9d9396461df152f697894fa3b294ad1b285e08\$lut for cells of type $lut.
Using template $paramod$d6d3aaeac1b9aa2c4b652c48e0deb565040dda72\$lut for cells of type $lut.
Using template $paramod$ea0faad69a26c91786a25961ea149d0e0961eb1f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100000 for cells of type $lut.
Using template $paramod$2d73cf21e7a3b53006ebbae47ecc48e73975ec46\$lut for cells of type $lut.
Using template $paramod$eb58cee55db3870516f1d0e18a2269a414f13c33\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01111111 for cells of type $lut.
Using template $paramod$b431bfd938e35871dd0b7668e1503c7e8b9d491c\$lut for cells of type $lut.
Using template $paramod$c5b694ec89d7629b942ccf6a9be1d39e24f8edec\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001101 for cells of type $lut.
Using template $paramod$d53578aacfd93124244778d88be0e90eb09c1b1b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110000 for cells of type $lut.
Using template $paramod$246006d276d15b0766d6d890a33a28800bfa7295\$lut for cells of type $lut.
Using template $paramod$5c32c59025c0b98f20e63f249d83e7ebb4b085e3\$lut for cells of type $lut.
Using template $paramod$bba54c1ef87367812b4c15f4aed5ac70773df775\$lut for cells of type $lut.
Using template $paramod$f3e1547c4b47e64c590e75cf09078b2507c8cc75\$lut for cells of type $lut.
Using template $paramod$3039c7f41767c4672f4e3f22ad78f16d42720fbf\$lut for cells of type $lut.
Using template $paramod$82b4a585d1edcb5c6e755dc9bd3392228a1c1304\$lut for cells of type $lut.
Using template $paramod$c24ed72ebb67e9ead6029e42e909ef7fc0abbb11\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1001 for cells of type $lut.
Using template $paramod$d7f4570f04f68175b1fa25c1bac92938027a2c96\$lut for cells of type $lut.
Using template $paramod$5a621b016c894274d07edef48c49b401a15fd796\$lut for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110101 for cells of type $lut.
Using template $paramod$43779580bfffd5d5a9f321249a174febf1dac288\$lut for cells of type $lut.
Using template $paramod$ab8bb87959c5d7cfa27886cee1355b38e054a61a\$lut for cells of type $lut.
Using template $paramod$179512a187da069f3b79ef6612a41e494e7d54b6\$lut for cells of type $lut.
Using template $paramod$6b0849254d6c87461fb93e37cc18f089f61eb912\$lut for cells of type $lut.
Using template $paramod$de3d8c0ac9a85f776878d56395b6e0bf04ae72e7\$lut for cells of type $lut.
Using template $paramod$89add7395f09a7f1d31ba23a20843f5b8e155407\$lut for cells of type $lut.
Using template $paramod$b4f15f202f50520dbc381cd0880ac94f830f05a8\$lut for cells of type $lut.
Using template $paramod$b93d1ea7a612a32c185108f67a153d44ffb9aac2\$lut for cells of type $lut.
Using template $paramod$81d8a60fd95b1a9f9ef71c12a774ae6988cb9fd5\$lut for cells of type $lut.
Using template $paramod$adac5163f2ca606e303e4fcb6e4ac1a8cfe9825d\$lut for cells of type $lut.
Using template $paramod$d2e6d37235ab843778c678747f5760d5e87de899\$lut for cells of type $lut.
Using template $paramod$38f9bf4dd2329347b8471f0a98443dd323386889\$lut for cells of type $lut.
Using template $paramod$b637cf4714c2e93484bb499728e176a6ab69c910\$lut for cells of type $lut.
Using template $paramod$9d707d218adbd63b6f9a0c79d7ee037306fb6296\$lut for cells of type $lut.
Using template $paramod$4972722c284f07fee673f7cb99e6a36ce4a244f0\$lut for cells of type $lut.
Using template $paramod$7fcc2f13195f27c397064377984d87a90c06749d\$lut for cells of type $lut.
Using template $paramod$64669a7e87c28e39425dffff48145545533b4971\$lut for cells of type $lut.
Using template $paramod$fccccf8bb2add7667329c686feec7546eb9a3ae3\$lut for cells of type $lut.
Using template $paramod$53ce561f80f32d4298a3beadc88b6c5c78293221\$lut for cells of type $lut.
Using template $paramod$2d8ecce5c907513cebcd38ab5efe0fc26fc03464\$lut for cells of type $lut.
Using template $paramod$a50be0e6fa3a01511bb234559cb74fb8bd3e2061\$lut for cells of type $lut.
Using template $paramod$6e46ec5a196ba1a24b8e69ab094cadc07c13ac1f\$lut for cells of type $lut.
Using template $paramod$4282def8dbd6df3d1248ad282c629bee684502c2\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111110 for cells of type $lut.
Using template $paramod$bb4fff1cc3b827238aa40993cafede1c5beecbe3\$lut for cells of type $lut.
Using template $paramod$d4fae2c0d9ad2966369cd4e39b81c71bcd1327c9\$lut for cells of type $lut.
Using template $paramod$c5f3c57a6d466a2f42208bafb8985b96ce884440\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001010 for cells of type $lut.
Using template $paramod$70ebb6cf5bc7d63c5c1a98ccefefa2af79e8f2a9\$lut for cells of type $lut.
Using template $paramod$cc14edb43bcbbd83b718cef08414cb23048bb6d0\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111000 for cells of type $lut.
Using template $paramod$8afe9f9396e222eb1bca50c99e9bab03367fbe83\$lut for cells of type $lut.
Using template $paramod$ed8c03ad511f650cbc130404bfb483f77070eec3\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01101001 for cells of type $lut.
Using template $paramod$fde34d7b7d817d093917fab37479be42cf9a4427\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10111110 for cells of type $lut.
No more expansions possible.
<suppressed ~2011 debug messages>
Removed 0 unused cells and 1290 unused wires.

2.45. Executing AUTONAME pass.
Renamed 14609 objects in module top (51 iterations).
<suppressed ~1160 debug messages>

2.46. Executing HIERARCHY pass (managing design hierarchy).

2.46.1. Analyzing design hierarchy..
Top module:  \top

2.46.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

2.47. Printing statistics.

=== top ===

   Number of wires:                432
   Number of wire bits:           1693
   Number of public wires:         432
   Number of public wire bits:    1693
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                842
     SB_CARRY                       60
     SB_DFF                         11
     SB_DFFE                        16
     SB_DFFESR                     183
     SB_DFFSR                        6
     SB_DFFSS                        1
     SB_LUT4                       565

2.48. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

2.49. Executing JSON backend.

Warnings: 22 unique messages, 22 total
End of script. Logfile hash: 8b814307db, CPU: user 4.48s system 0.10s
Yosys 0.25+97 (git sha1 221036c5b, x86_64-apple-darwin20.2-clang 10.0.0-4ubuntu1 -fPIC -Os)
Time spent: 19% 29x opt_expr (1 sec), 17% 13x read_verilog (0 sec), ...
